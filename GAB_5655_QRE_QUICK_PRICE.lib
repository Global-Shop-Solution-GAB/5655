Program.sub.SaveRouters.start		
v.local.sFile.declare(string)
v.Local.sRoute.Declare(string)
v.Local.sDVRoute.Declare(string)
v.Local.sMater.Declare(string)
v.Local.sDVMater.Declare(string)
v.local.sRouters.declare(string)
v.local.sRet.declare(string)
v.local.stxtDesc.declare(string)
v.local.stxtPL.declare(string)
v.local.stxtUM.declare(string)
v.local.stxtName.declare(string)
v.local.stxtSRC.declare(string)
v.local.stxtCustPart.declare(string)
v.local.stxtQTY.declare(string)
v.local.slblCustDrawL.declare(string)
v.local.stxtCustomer.declare(string)
v.local.stxtOMarkup.declare(string)
v.local.stxtMarkup.declare(string)
v.Local.stxtOverallMarkup.Declare(string)
v.Local.sTXTOQTYBRK.Declare(string)
v.Local.sTXTOQTY.Declare(string)
v.Local.stxtCustRev.Declare(string)
v.Local.stxtDraw.Declare(string)
v.local.sDctFiles.declare(string)
v.local.stype.declare(string,"")
v.local.lRouter.declare(long)
v.local.lret.declare(long)
v.local.sSuffixPad.declare(string)
v.local.sIN0.declare(string)
v.local.ssql.declare(string)
v.local.sROUTER.declare(STRING)
v.local.lHID.declare(LONG)
v.local.lLID.declare(LONG)
v.local.sret2.declare(string)
v.local.fMinChrg.declare(float)
v.local.fNetRslt.declare(float)
V.Local.j.Declare(long)
v.local.k.declare(long)
v.local.x.declare(LONG)
v.local.sParent.declare(string)
v.local.sDictRet.declare(string)
v.local.sCustomer.declare(string)
v.local.sNotes.declare(string)
V.LOCAL.sDesc.declare(string)
V.local.stime.declare(string)		
v.Local.sTextChange.Declare(string)
v.Local.sRowCheck.Declare(string)
v.Local.sheadr.Declare(string)
v.Local.sPowdr.Declare(string)
v.Local.sGSSPart.Declare(string)
v.Local.stxtBoostID.Declare
v.Local.sFileLocat.Declare
v.Local.bDirExists.Declare
v.Local.bFilExists.Declare
v.Local.sBase.Declare
v.Local.serror.Declare

'Setup base directory
f.Intrinsic.String.Concat("Headr_",v.Local.j,v.Local.sheadr)
f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.caller.companycode,"QREDATA\",v.DataTable.[v.Local.sheadr](0).BoostID!Fieldval,"\",v.Local.sFileLocat)

'Create base directory if it does not exists
f.Intrinsic.File.DirExists(v.Local.sFileLocat,v.Local.bDirExists)
f.Intrinsic.Control.If(v.Local.bDirExists,<>,true)
	f.Intrinsic.File.CreateDir(v.Local.sFileLocat)
f.Intrinsic.Control.EndIf

f.in.control.try
	f.in.string.format(v.Ambient.Now,"YYYY-MM-DD HH:NN:SS",v.Local.stime)
	v.local.sNotes.set(v.DataTable.Headr_0(0).NOTES!FIELDVALTRIM)
	f.Intrinsic.string.Replace(v.Local.snotes,"'","''",v.Local.snotes)
	F.Intrinsic.Control.For(V.Local.j,0,v.global.lThreshold,1)
		f.Intrinsic.String.Concat("Headr_",v.Local.j,v.Local.sheadr)
		f.Intrinsic.String.Concat("dctFiles",v.Local.j,v.Local.sDctFiles)
		f.intrinsic.control.if(v.DataTable.[v.Local.sheadr].RowCount,>,0)
			'''''''''''''''''''''''''''''
			'Set Values
			'''''''''''''''''''''''''''''
			v.Local.stxtDesc.Set(v.DataTable.[v.Local.sheadr](0).DESC!FIELDVALTRIM)
			v.Local.stxtPL.Set(v.DataTable.[v.Local.sheadr](0).PL!FIELDVALTRIM)
			v.Local.stxtUM.Set(v.DataTable.[v.Local.sheadr](0).UM!FIELDVALTRIM)
			v.Local.stxtSRC.Set(v.DataTable.[v.Local.sheadr](0).SRC!FIELDVALTRIM)
			v.Local.stxtCustPart.Set(v.DataTable.[v.Local.sheadr](0).CUSTPART!FIELDVALTRIM)
			v.Local.stxtQTY.Set(v.DataTable.[v.Local.sheadr](0).QTYBREAK!FIELDVALTRIM)
			v.Local.stxtCustomer.Set(v.DataTable.[v.Local.sheadr](0).CUSTOMER!FIELDVALTRIM)
			v.Local.stxtMarkup.Set(v.DataTable.[v.Local.sheadr](0).MARKUP!FIELDVALTRIM)
			v.Local.stxtOMarkup.Set(v.DataTable.[v.Local.sheadr](0).OMARKUP!FIELDVALTRIM)
			v.Local.stxtOQtyBrk.Set(v.DataTable.[v.Local.sheadr](0).OQTY!FIELDVALTRIM)
			v.Local.stxtCustRev.Set(v.DataTable.[v.Local.sheadr](0).CUSTREVPART!FIELDVALTRIM)
			v.Local.stxtBoostID.Set(v.DataTable.[v.Local.sheadr](0).BoostID!Fieldval)
			
			'''''''''''''''''''''''''''''
			'Determine if part exists
			'''''''''''''''''''''''''''''
'			f.Intrinsic.String.GSSPartString(v.Local.stxtCustPart,v.Local.stxtCustRev,v.Local.sGSSPart)
'			f.Intrinsic.String.Build("SELECT * FROM V_INVENTORY_ALL WHERE PART='{0}'",v.Local.sGSSPart,v.Local.ssql)
'			f.ODBC.Connection!conx.executeandreturn(v.Local.ssql,v.Local.sret)
'			f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
'				f.Intrinsic.String.Concat("Error: Duplicate part number for ",v.Local.sGSSPart," routine will now exit, please correct & resave!",v.Local.serror)
'				f.Intrinsic.UI.Msgbox(v.Local.serror)
'				f.Intrinsic.Control.ExitSub
'			f.Intrinsic.Control.EndIf
			
			'''''''''''''''''''''''''''''
			'Determine the base directory
			'''''''''''''''''''''''''''''
			f.Intrinsic.Control.If(v.Local.j,=,0)
				f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.caller.companycode,"QREDATA\",v.DataTable.Headr_0(0).BoostID!Fieldval,"\",v.Local.sBase)
			f.Intrinsic.Control.Else
				f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.caller.companycode,"QREDATA\",v.DataTable.Headr_0(0).BoostID!Fieldval,"\",v.DataTable.[v.Local.sheadr](0).BoostID!fieldval,"\",v.Local.sBase)
				f.Intrinsic.File.DirExists(v.Local.sBase,v.Local.bDirExists)
				f.Intrinsic.Control.If(v.Local.bDirExists,<>,true)
					f.Intrinsic.File.CreateDir(v.Local.sBase)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
			
			''''''''''''''''''''
			'Get Drawings / Files
			''''''''''''''''''''
			F.Data.Dictionary.ReturnAllPairs(v.local.sdctFiles,v.local.sdictret)
			f.in.control.if(v.local.sDictRet.trim,=,"***NORETURN***")
				v.local.sDictRet.set("")
		    f.in.control.endif
		    f.Data.DataTable.SetValue(v.Local.sheadr,0,"Drawings",v.Local.sDictRet)
		    f.Data.DataTable.SetValue(v.Local.sheadr,0,"Notes",v.Local.sNotes)
		    
		    '''''''''''''''''''''''''''''
			'UPDATE HEADER RECORD INDEX
			'''''''''''''''''''''''''''''
			v.local.ssql.set("UPDATE GAB_4486_QRE_HEAD SET DESCRIPTION='{0}', PL='{1}',UM='{2}',SRC='{3}',CUST_PART='{4}',CUSTOMER='{5}',MARKUP='{6}',QTY_BREAK='{7}',USERID='{8}',ASSEMBLY_TYPE='{9}',OVERALL_MARK='{11}',OVERALL_QTY='{12}',CUST_REV='{13}',NOTES='{14}',DATE_LAST_UPDATED='{15}',DRAWING_NO='{16}',QuoteID={17},DRAWINGS='{18}' WHERE ROUTER='{10}'")
			f.IN.STRING.BUILD(v.local.ssql,v.Local.stxtDesc.trim,v.local.stxtPL,v.local.stxtUM,v.local.stxtSRC,v.local.stxtCustPart,v.local.stxtcustomer,v.local.stxtmarkup,v.local.stxtQTY,V.CALLER.USER.TRIM,"true",v.local.stxtBoostID,v.local.stxtOMarkup,v.local.STXTOQTYBRK,v.local.stxtCustRev,v.Local.snotes,v.local.stime,v.local.stxtDraw,1,v.Local.sDictRet,v.local.ssql)
			F.odbc.connection!conx.execute(v.local.ssql)
			
			''''''''''''''''''''
			'Save the Header
			''''''''''''''''''''
			f.Intrinsic.String.Concat(v.Local.sBase,"\",v.DataTable.[v.Local.sheadr](0).BoostID!Fieldval,"Headr.xml",v.Local.sFileLocat)
			F.Data.DataTable.SaveToXML(V.Local.sheadr,0,true,v.Local.sFileLocat)

			'''''''''''''''''''''
			'Next is labour
			'''''''''''''''''''''
			f.Intrinsic.String.Concat(v.Local.sBase,"\",v.DataTable.[v.Local.sheadr](0).BoostID!Fieldval,"Route.xml",v.Local.sFileLocat)
			f.Intrinsic.String.Concat(v.Local.sFileLocat,,v.Local.sFileLocat)
			f.Intrinsic.String.Concat("Route_",v.Local.j,v.Local.sroute)
			F.Data.DataTable.SaveToXML(V.Local.sroute,0,true,v.Local.sFileLocat)

			''''''''''''''''''''
			'Next is Material
			''''''''''''''''''''
			f.Intrinsic.String.Concat(v.Local.sBase,"\",v.DataTable.[v.Local.sheadr](0).BoostID!Fieldval,"Mater.xml",v.Local.sFileLocat)
			f.Intrinsic.String.Concat("Mater_",v.Local.j,v.Local.sMater)
			F.Data.DataTable.SaveToXML(V.Local.sMater,0,true,v.Local.sFileLocat)

			''''''''''''''''''''
			'Powder Coating 
			''''''''''''''''''''
			f.Intrinsic.String.Concat(v.Local.sBase,"\",v.DataTable.[v.Local.sheadr](0).BoostID!Fieldval,"Powdr.xml",v.Local.sFileLocat)
			f.Intrinsic.String.Concat("Powdr_",v.Local.j,v.Local.sPowdr)
			f.Data.DataTable.SaveToXML(v.Local.sPowdr,0,true,v.Local.sFileLocat)
			
		f.in.control.endif
	F.Intrinsic.Control.Next(V.local.j)
f.in.control.catch
	'f.in.ui.msgbox(v.Ambient.ErrorDescription)
f.in.control.endtry
Program.sub.SaveRouters.end
			
'Unload
Program.sub.frmQRE_unload.start
F.intrinsic.control.end
Program.sub.frmQRE_unload.end
	
'Clear Routers
Program.sub.cmdClear_click.start
F.in.control.try
	f.in.control.callsub(disableAll)
	v.local.lFlag.declare(long)
	f.Intrinsic.UI.MsgBox("Are you sure you want to clear routers and reset to defaults?","Clear Routers",4,v.Local.lFlag)			
	f.Intrinsic.Control.If(v.Local.lFlag,=,6)
		f.in.control.callsub(clearsub)
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.CallSub(triggerLoad,"MyIndex","0","Static",0)
	f.in.control.callsub(enableAll)
	gui.frmQRE.txtCopy.setfocus(true)
f.in.control.catch
	f.in.control.callsub(enableAll)
	f.in.ui.msgbox(v.Ambient.ErrorDescription)
f.in.control.endtry
Program.sub.cmdClear_click.end
	
Program.sub.clearsub.start
v.Local.ssql.Declare(string)
v.Local.sret.Declare(string)
v.Local.sRoute.Declare(string)
v.Local.sMater.Declare(string)
v.Local.sPowdr.Declare(string)
v.Local.sHeadr.Declare(string)

v.Local.sDCTFiles.Declare(string)
v.Local.sOptOutside.Declare(string)
v.Local.sReloadGrid.Declare(string)
v.Local.sRouterNum.Declare(string)

v.Local.c.Declare(long)
v.Local.lCount.Declare(long)
v.Local.ssql.Set("SELECT DISTINCT IFNULL(DEFAULT_RTR_COUNT,0) FROM GAB_4486_QRE_CONFIG")
f.odbc.connection!conx.executeandreturn(v.local.ssql,v.local.lCount)
v.Local.fPacking.Declare(float)
v.Local.ssql.Set("SELECT DISTINCT IFNULL(DEFAULT_PACKING,0) FROM GAB_4486_QRE_CONFIG")
f.odbc.connection!conx.executeandreturn(v.local.ssql,v.local.fPacking)

F.Intrinsic.Control.For(V.Local.c,0,V.Global.lthreshold,1)
	GUI.frmQRE.trvRouters.RemoveItem(v.Local.c)
	f.Intrinsic.String.Concat("Route_",v.Local.c,v.Local.sRoute)
	f.Intrinsic.String.Concat("Powdr_",v.Local.c,v.Local.sPowdr)
	f.Intrinsic.String.Concat("Headr_",v.Local.c,v.Local.sHeadr)
	f.Intrinsic.String.Concat("dctFiles",v.Local.c,v.Local.sDCTFiles)
	f.Intrinsic.String.Concat("Mater_",v.Local.c,v.Local.sMater)
	f.Intrinsic.String.Concat("optOutside",v.local.c,"_click",v.Local.sOptOutside)
	f.Data.DataTable.DeleteRow(v.Local.sRoute)
	f.Data.DataTable.DeleteRow(v.Local.sMater)
	f.Data.DataTable.DeleteRow(v.Local.sPowdr)
	f.Data.DataTable.DeleteRow(v.Local.sHeadr)
	f.data.dictionary.clear(v.Local.sDCTFiles)
	'f.intrinsic.control.callsub(v.Local.sOptOutside)
f.intrinsic.control.next(v.local.c)
'Clear these in case they exist
f.Intrinsic.Control.If(v.DataTable.dtB.Exists)
	f.Data.DataTable.DeleteRow("dtB")
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.If(v.DataTable.dtBB.Exists)
	f.Data.DataTable.DeleteRow("dtBB")
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.If(v.DataTable.dtBB.Exists)
	f.Data.DataTable.DeleteRow("dtBBB")
f.Intrinsic.Control.EndIf
		
gui.frmQRE.txtID.text(0)

F.Data.DataTable.AddRow("Mater_0","Part","Packing","Descr","Packing","Setup","1","Cost",V.local.fPacking,"Mark","0","UM","EA","LMO","M")
gui.frmQRE.txtName.text("")
gui.frmQRE.txtDesc.text("")
gui.frmQRE.txtDraw.text("")
gui.frmQRE.txtOQTY.text("")
gui.frmQRE.txtOMarkup.text("")


f.Intrinsic.Control.CallSub(autoInc,"iNumber",0)
f.intrinsic.variable.argtovar(ra0,v.local.sRouterNum)
gui.frmQRE.trvRouters.AddTreeNode("","",0,v.Local.sRouterNum,TRUE) 	
gui.frmQRE.txtBoostID.text(v.Local.sRouterNum)
gui.frmQRE.txtCustPart.text(v.Local.srouterNum)
gui.frmQRE.txtName.text(v.Local.sRouterNum)

f.Data.DataTable.AddRow("Headr_0","PL",v.Local.sret(0),"UM",v.Local.sret(1),"SRC",v.Local.sret(2),"BoostID",v.Local.sRouterNum,"CustPart",v.Local.sRouterNum)
'F.Data.DataTable.SetValue(v.Local.sHeadr,0,"PL",v.Local.sret(0))
'F.Data.DataTable.SetValue(v.Local.sHeadr,0,"UM",v.Local.sret(1))
'F.Data.DataTable.SetValue(v.Local.sHeadr,0,"SRC",v.Local.sret(2))
	
Gui.frmQRE.lblLJobT.caption("")
Gui.frmQRE.lblLPrtT.caption("")
gui.frmQRE.TxtCustRevPart.text("")
gui.frmQRE.txtCustPart.text("")
gui.frmQRE.txtCustomer.text("")
gui.frmQRE.txtCustomer.backcolor(v.Color.white)
gui.frmQRE.txtMCode.text("")
gui.frmqre.optMat.enabled(true)
gui.frmQRE.optMat.value("1")
f.Intrinsic.Control.CallSub(optOutside_click)

v.local.ssql.set("SELECT MATERIAL_2 FROM V_MARKUP_PCT")
f.odbc.connection!conx.executeandreturn(v.local.ssql,v.local.SRET)
f.intrinsic.math.sub(v.local.sret,1,v.local.sret)
f.intrinsic.math.mult(v.local.sret,100,v.local.sret)
gui.frmQRE.txtOMarkup.text(V.LOCAL.SRET)
gui.frmQRE.txtQTY.text("")
gui.frmQRE.tvFileT.text("")
gui.frmQRE.tvFile.clearitems

gui.frmQRE.lblMMinC.visible("false")
gui.frmQRE.lblMMinR.visible("false")
gui.frmQRE.lblMPowP.visible("false")
gui.frmQRE.lblMNetP.visible("false")
gui.frmQRE.cmdPow.backcolor(-2147483633)

gui.frmQRE.lblQuickPrR1.caption("")
gui.frmQRE.lblQuickPrR.caption("")
gui.frmQRE.lblJobParGTotal.caption("")
gui.frmQRE.optAssem.enabled(true)
gui.frmQRE.optSingl.enabled(true)

gui.frmQRE.ddlMSupp.clearitems
				
Gui.frmQRE.txtOMarkup.text("")
Gui.frmQRE.txtOQTY.text("")
gui.frmQRE.txtQuickPr.text("")
gui.frmQRE.txtNotes.text("")
gui.frmQRE.txtBoostID.text("")
Gui.SS_Form.txtProdLength.text("")
Gui.SS_Form.txtProdWidth.text("")
Gui.SS_Form.txtPowdThick.text("")
Gui.SS_Form.txtPowdPrice.text("")
Gui.SS_Form.txtPowdCost.text("")
Gui.SS_Form.txtChemCost.text("")
Gui.SS_Form.txtMarkup.text("")
Gui.SS_Form.txtGap.text("")
Gui.SS_Form.txtMan.text("")
Gui.SS_Form.txtLabourRate.text("")
Gui.SS_Form.txtSetupCost.text("")
Gui.SS_Form.txtLineSpeed.text("")
Gui.SS_Form.txtLabourCost.text("")
Gui.SS_Form.txtPricePerUnit.text("")
Gui.SS_Form.ddlColour.text("")
Gui.SS_Form.lblNetPriceResult.caption("")
Gui.SS_Form.lblMinChargeResult.caption("")
Gui.SS_Form.lblID.caption("")
Gui.SS_Form.lblGT.caption("")
Gui.SS_Form.lblPart.caption("")
Gui.SS_Form.lblCalcPriceResult.caption("")
Gui.SS_Form.lblLJobT.caption("")
Gui.SS_Form.lblLPrtT.caption("")
gui.frmQRE.txtMDesc.text("")
gui.frmQRE.txtMPPWU.text("")
gui.frmQRE.txtMPart.text("")
gui.frmQRE.txtMQtyS.text("")
gui.frmQRE.txtMDesc.text("")
gui.frmQRE.txtMAltD.text("")
gui.frmQRE.txtMSupp.text("")
gui.frmQRE.txtMUoMC.text("")
gui.frmQRE.txtMQtyR.text("")
gui.frmQRE.txtMCost.text("")
gui.frmQRE.txtMSBox.text("")
gui.frmQRE.txtQuickPr.text("")
gui.frmQRE.txtQTY.enabled(false)
v.Global.lCount.Set(0)
'Garbage cleanup in GAB_4486_HEAD
'Need to remove line, it is fine, the browser doesn't find and garbage cleanup can happen when user closes program
'f.ODBC.Connection!conx.execute("DELETE from GAB_4486_QRE_HEAD WHERE QUOTEID=0")
f.Intrinsic.control.callsub(ReloadGridLab,"iVal",0)
Program.sub.clearsub.end
		
Program.Sub.createPreBuilt.Start
v.local.ssql.Declare(string)
v.Local.sparent.Declare(string)
v.Local.sMsg.Declare(string)
'Close table if exists
f.Intrinsic.Control.If(v.DataTable.dtB.Exists,=,true)
	f.Data.DataTable.Close("dtB")
f.Intrinsic.Control.EndIf
'Determine the part's parent
v.Local.ssql.Set("select DISTINCT FG_PART from gab_4486_build_rec where CUSTOMER_PART='{0}' AND CUST_REV='{1}' ORDER BY BUILDID asc")
f.Intrinsic.String.Build(v.Local.ssql,v.Args.sMyPart,v.Args.sMyRev,v.Local.ssql)
f.ODBC.Connection!conO.openconnection(v.Ambient.PDSN,v.Ambient.PUser,v.Ambient.PPass)
F.ODBC.Connection!conO.EXECUTEANDRETURN(v.Local.ssql,v.Local.sparent)
F.Intrinsic.Control.If(V.Local.SPARENT.Trim,<>,"")
	v.Local.ssql.Set("SELECT * FROM GAB_4486_BUILD_REC where PARENT='{0}' OR (CUSTOMER_PART='{1}' and CUST_REV='{2}') order by buildid asc")
	F.Intrinsic.String.Build(v.Local.ssql,v.Local.sparent.Trim,v.Args.sMyPart,v.Args.sMyRev,v.Local.ssql)
f.Intrinsic.Control.Else
	v.Local.ssql.Set("SELECT * FROM GAB_4486_BUILD_REC where (CUSTOMER_PART='{1}' and CUST_REV='{2}') order by buildid asc")
	F.Intrinsic.String.Build(v.Local.ssql,v.Local.sparent.Trim,v.Args.sMyPart,v.Args.sMyRev,v.Local.ssql)
F.Intrinsic.Control.EndIf
F.Data.DataTable.CreateFromSQL("dtB","conO",v.Local.ssql,true)
f.Data.DataTable.SetValue("dtB",-1,"OVERALL_QTY",v.Args.sMyQTY)
f.Intrinsic.Control.If(v.DataTable.dtB.RowCount,=,0)
	f.Intrinsic.String.Build("No buildup record found for: {0} {1}.  Please go to QRE program and do a calculation.",v.Args.sMyPart,v.Args.sMyRev,v.Local.sMsg)
	f.Intrinsic.UI.Msgbox(v.Local.sMsg)
	f.ODBC.Connection!conO.Close
	f.Intrinsic.UI.CloseWaitDialog
f.Intrinsic.Control.Else
	f.ODBC.Connection!conO.Close
f.Intrinsic.Control.EndIf
Program.Sub.createPreBuilt.End

Program.sub.disableAll.Start
gui.frmQRE.cmdSaveRouters.enabled(false)
gui.frmQRE.cmdCreateAll.enabled(false)
gui.frmQRE.cmdQuickPrice.enabled(false)
gui.frmQRE.cmdQuote.enabled(false)
gui.frmQRE.cmdRouter.enabled(false)
gui.frmQRE.chkPart.enabled(false)
gui.frmQRE.cmdClear.enabled(false)
gui.frmQRE.txtOMarkup.enabled(false)
gui.frmQRE.txtOQTY.enabled(false)
gui.frmQRE.txtRouterBuildQty.enabled(false)
gui.frmQRE.txtQuickPr.enabled(false)
gui.frmQRE.cmdRB.enabled(false)
gui.frmQRE.cmdBrwCpy.enabled(false)
gui.frmQRE.CMDCustBrowse.enabled(false)
gui.frmQRE.cmdDrawBrowse.enabled(false)
gui.frmQRE.trvRouters.enabled(false)
gui.frmQRE.cmdAddRouters.enabled(false)
gui.frmQRE.cmdRemRouters.enabled(false)
gui.frmQRE.cmdMB.enabled(false)
gui.frmQRE.cmdMAddM.enabled(false)
gui.frmQRE.cmdLAddL.enabled(false)
gui.frmQRE.cmdLRemv.enabled(false)
gui.frmQRE.tvFileD.enabled(false)
Program.Sub.disableAll.End

Program.sub.enableAll.Start
gui.frmQRE.cmdSaveRouters.enabled(true)
gui.frmQRE.cmdCreateAll.enabled(true)
gui.frmQRE.cmdQuickPrice.enabled(true)
gui.frmQRE.cmdQuote.enabled(true)
gui.frmQRE.cmdRouter.enabled(true)
gui.frmQRE.chkPart.enabled(true)
gui.frmQRE.cmdClear.enabled(true)
gui.frmQRE.txtOMarkup.enabled(true)
gui.frmQRE.txtOQTY.enabled(true)
gui.frmQRE.txtRouterBuildQty.enabled(true)
gui.frmQRE.txtQuickPr.enabled(true)
gui.frmQRE.cmdRB.enabled(true)
gui.frmQRE.cmdBrwCpy.enabled(true)
gui.frmQRE.CMDCustBrowse.enabled(true)
gui.frmQRE.cmdDrawBrowse.enabled(true)
gui.frmQRE.trvRouters.enabled(true)
gui.frmQRE.cmdAddRouters.enabled(true)
gui.frmQRE.cmdRemRouters.enabled(true)
gui.frmQRE.cmdMB.enabled(true)
gui.frmQRE.cmdMAddM.enabled(true)
gui.frmQRE.cmdLAddL.enabled(true)
gui.frmQRE.cmdLRemv.enabled(true)
gui.frmQRE.tvFileD.enabled(true)
Program.Sub.enableAll.End

program.Sub.checkCustomer.Start
v.Local.sCustomer.Declare(string)
v.Local.bExit.Declare(boolean)
v.Local.scustomer.Set(v.Screen.frmQRE!txtCustomer.text)

f.in.control.if(v.Local.scustomer.Trim,=,"")
	gui.frmQRE.txtCustomer.BackColor(8421631)
	v.local.bExit.set(true)
	f.Intrinsic.variable.AddRV("ra0",v.Local.bExit)
f.in.control.else
	gui.frmQRE.txtCustomer.BackColor(-2147483643)
f.in.control.endif
	
f.in.control.if(v.Local.bexit,=,true)
	F.Intrinsic.Control.CallSub(enableAll)
	f.intrinsic.control.exitsub
f.in.control.endif
program.Sub.checkCustomer.End

Program.Sub.checkDuplicatePart.Start
v.Local.i.Declare
v.Local.sHeadr.Declare
v.Local.ssql.Declare
v.Local.sret.Declare
v.Local.sErrorMesg.Declare
v.Local.lRet.Declare
v.Local.lFlag.Declare
v.Local.lFlag.Set(3)
v.Local.bExit.Declare

f.Intrinsic.Variable.AddRV("rExit",0)	

'Scroll through all parts and verify if they are duplicates
f.Intrinsic.Control.For(v.Local.i,0,v.Global.lthreshold,1)
	f.Intrinsic.String.Concat("Headr_",v.Local.i,v.Local.sHeadr)
	f.Intrinsic.Control.If(v.DataTable.[v.Local.sHeadr].RowCount,>,0)
		f.Intrinsic.String.Build("SELECT * FROM GAB_4486_QRE_HEAD WHERE CUST_PART='{0}' AND CUST_REV='{1}' AND ROUTER<>'{2}'",v.DataTable.[v.Local.sHeadr](0).CustPart!fieldvaltrim,v.DataTable.[v.Local.sHeadr](0).CustRevPart!fieldvaltrim,v.DataTable.[v.Local.sHeadr](0).BoostID!fieldval,v.Local.ssql)
		f.ODBC.Connection!conx.executeandreturn(v.Local.ssql,v.Local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
			f.Intrinsic.String.Concat(v.Local.sErrorMesg,"Part ",v.DataTable.[v.Local.sHeadr](0).CustPart!fieldvaltrim," ",v.DataTable.[v.Local.sHeadr](0).CustRevPart!fieldvaltrim," already exists.",v.Ambient.NewLine,v.Local.sErrorMesg)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.If(v.Local.sErrorMesg.Trim,<>,"")
	f.Intrinsic.String.Concat(v.Local.sErrorMesg,"Do you want to continue with save?",v.Local.sErrorMesg)
	f.Intrinsic.UI.Msgbox(v.Local.sErrorMesg,"Existing Part(s) Found",v.Local.lFlag,v.Local.lRet)
	f.Intrinsic.Control.If(v.Local.lRet,<>,6)
		f.Intrinsic.ui.CloseWaitDialog
		f.Intrinsic.Control.CallSub(enableAll)
		v.Local.bExit.Set(true)
		f.Intrinsic.Variable.AddRV("ra0",v.Local.bExit)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.EndIf

Program.Sub.checkDuplicatePart.End

Program.Sub.cmdSaveRouters_Click.Start
'Save routers in the beginning!
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(disableAll)
	v.Local.sfilename.Declare
	v.Local.sfilenameBOM.Declare
	v.Local.sFileDir.Declare
	v.Local.ssql.Declare
	v.Local.sret.Declare
	v.Local.bPartExit.Declare
	
	'check for duplicate parts
	f.Intrinsic.Control.callsub(checkDuplicatePart)
	f.Intrinsic.Variable.ArgToVar(ra0,v.Local.bPartExit)
	f.Intrinsic.Control.If(v.Local.bPartExit,=,1)
		f.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.Control.CallSub(enableAll)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'Check Customer
	f.Intrinsic.Control.CallSub(checkCustomer)
	v.Local.bCustExit.Declare(boolean)
	f.in.variable.argtovar(ra0,v.lo.bCustExit)
	f.Intrinsic.Control.If(v.local.bCustExit,=,True)
		F.Intrinsic.UI.CloseWaitDialog
		F.Intrinsic.Control.CallSub(enableAll)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'Check if Part exists
	f.Intrinsic.String.Build("SELECT * FROM GAB_4486_QRE_HEAD WHERE CUST_PART='{0}' AND CUST_REV='{1}' AND ROUTER<>'{2}'",v.Screen.frmQRE!txtCustPart.text,v.Screen.frmQRE!txtCustRevPart.text,v.Screen.frmQRE!txtBoostID.text,v.Local.ssql)
	f.ODBC.Connection!conx.executeandreturn(v.Local.ssql,v.Local.sret)
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"")
		f.Intrinsic.UI.Msgbox("Part Number exists under different ID")
		F.Intrinsic.Control.CallSub(enableAll)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'Do Save
	v.Local.sret0.Declare(string)
	f.in.control.callsub(SaveRouters)
	f.in.variable.argtovar(ra0,v.lo.sret0)
	f.Intrinsic.Control.If(v.lo.sret0.trim,=,"N")
		F.Intrinsic.Control.CallSub(enableAll)
		F.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	'f.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.Control.CallSub(initCalc,"sQTY",1,"PartCheck",v.Screen.frmQRE!chkPart.value)
	
	'
	'TAKE THIS NEXT 2 LINES OUT! FOR PLAYING ONLY
'	f.Intrinsic.Control.CallSub(quickprice)
'	
'	f.in.control.callsub(routerUpload,"sQTY","1")
'	f.in.Control.CallSub(uploadBOM,"Part",v.Local.spart,"Rev",v.Local.spartrev,"Qty",V.DataTable.dtAll(V.Local.i).SOQty!FIELDVALTrim,"UM","EA","Desc","","Vendor","","Category","","Source","F")
'	'Blank the Router & BOM File
'	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sfilename,V.Local.sFileDir)
'	f.Intrinsic.File.string2File(V.Local.sFileDir,"")
'	V.Local.sFileDir.Set("")
'	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sFilenameBOM,V.Local.sFileDir)
'	f.Intrinsic.File.string2File(V.Local.sFileDir,"")
'	'Upload into Global Shop
'	F.Global.General.CallWrapperSync(50,"UPLRTRH/A/X")
'	F.Global.General.CallWrapperSync(6010,"NS!*!50")
'	end of taking out lines
	F.Intrinsic.Control.CallSub(enableAll)	
	gui.frmQRE.txtCopy.setfocus(true)
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(enableAll)
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdSaveRouters_Click.End

Program.sub.cmdCreateAllReport_click.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(disableAll)
	v.Local.soqty.Declare(string)
	v.Local.somark.Declare(string)
	v.Local.scustomer.Declare(string)
	v.Local.bExit.Declare(boolean)
	v.local.soqty.set(v.screen.frmQRE!txtOQTY.text)
	v.local.somark.set(v.screen.frmQRE!txtOMarkup.text)
	v.Local.scustomer.Set(v.Screen.frmQRE!txtCustomer.text)
	
	f.in.control.if(v.Local.somark.Trim,=,"")
		gui.frmQRE.txtOMarkup.BackColor(8421631)
		v.local.bExit.set(true)
	f.in.control.else
		gui.frmQRE.txtOMarkup.BackColor(-2147483643)
	f.in.control.endif
	
	f.in.control.if(v.Local.soqty.Trim,=,"")
		gui.frmQRE.txtOQTY.BackColor(8421631)
		v.local.bExit.set(true)
	f.in.control.else
		gui.frmQRE.txtOQTY.BackColor(-2147483643)
	f.in.control.endif
	
	f.in.control.if(v.Local.bexit,=,true)
		F.Intrinsic.Control.CallSub(enableAll)
		f.intrinsic.control.exitsub
	f.in.control.endif
	
	'Check Customer
	f.Intrinsic.Control.CallSub(checkCustomer)
	v.Local.bCustExit.Declare(boolean)
	f.in.variable.argtovar(ra0,v.lo.bCustExit)
	f.Intrinsic.Control.If(v.local.bCustExit,=,True)
		F.Intrinsic.UI.CloseWaitDialog
		F.Intrinsic.Control.CallSub(enableAll)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'Save routers in the beginning!
	v.Local.sret0.Declare(string)
	f.in.control.callsub(SaveRouters)
	f.in.variable.argtovar(ra0,v.lo.sret0)
	f.Intrinsic.Control.If(v.lo.sret0.trim,=,"N")
		F.Intrinsic.UI.CloseWaitDialog
		F.Intrinsic.Control.CallSub(enableAll)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'Create qty of one, then all, then report
	f.intrinsic.control.callsub(initCalc,"sQTY",v.Local.soqty)
	f.Intrinsic.Control.CallSub(quickprice)
	f.Intrinsic.Control.CallSub(reportCalc,"sFlag","Y","sQTY",v.Local.soqty)
	F.Intrinsic.Control.CallSub(enableAll)
	gui.frmQRE.txtCopy.setfocus(true)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	F.Intrinsic.Control.CallSub(enableAll)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCreateAllReport_Click.End

Program.sub.cmdQuickPrice_click.Start
f.Intrinsic.Control.Try
	F.Intrinsic.Control.CallSub(disableAll)
	v.local.fUnitPrice.declare(float)
	v.local.bExit.declare(boolean)
	v.local.sqty.declare(string)
	v.Local.spart.Declare(string)
	v.Local.srev.Declare(string)
	v.Local.sPrg.Declare(string)
	f.Intrinsic.Control.If(v.Args.sMyQty,=,v.Ambient.Null)
		v.local.sqty.set(v.screen.frmQRE!txtQuickPr.text)
		v.local.spart.set(v.screen.frmQRE!txtCustPart.text)
		v.local.srev.set(v.screen.frmQRE!txtCustRevPart.text)
		
	f.Intrinsic.Control.Else
		v.Local.sqty.Set(v.Args.sMyQTY)
		v.Local.spart.Set(v.Args.sMyPart)
		v.Local.srev.Set(v.Args.sMyRev)
		v.Local.sPrg.Set(v.Args.sMyPrg)
	f.Intrinsic.Control.EndIf
	
	'Builup is happening outside of QRE program
	'Basic Checking, exit if values missing
	f.Intrinsic.Control.If(v.Args.sMyQTY,=,v.Ambient.null)
		f.in.control.if(v.Local.sqty.Trim,=,"")
			gui.frmQRE.txtQuickPr.BackColor(8421631)
			v.local.bExit.set(true)
		f.in.control.else
			gui.frmQRE.txtQuickPr.BackColor(-2147483643)
		f.in.control.endif
		f.in.control.if(v.Local.bexit,=,true)
			F.Intrinsic.Control.CallSub(enableAll)
			f.intrinsic.control.exitsub
		f.in.control.endif
	'Buildup is happening outside of QRE program
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.if(v.Local.sqty.Trim,=,"")
			f.Intrinsic.UI.Msgbox("QTY Missing, QRE Buildup program will now exit.")
			F.Intrinsic.Control.CallSub(enableAll)
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf

	'Check Customer
	f.Intrinsic.Control.CallSub(checkCustomer)
	v.Local.bCustExit.Declare(boolean)
	f.in.variable.argtovar(ra0,v.lo.bCustExit)
	f.Intrinsic.Control.If(v.local.bCustExit,=,True)
		F.Intrinsic.UI.CloseWaitDialog
		F.Intrinsic.Control.CallSub(enableAll)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'Save routers in the beginning!
	v.Local.sret0.Declare(string)
	f.in.control.callsub(SaveRouters)
	f.in.variable.argtovar(ra0,v.lo.sret0)
	f.Intrinsic.Control.If(v.lo.sret0.trim,=,"N")
		F.Intrinsic.UI.CloseWaitDialog
		F.Intrinsic.Control.CallSub(enableAll)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf

	'Call Calculation routine
	f.Intrinsic.Control.If(v.Args.sMyQTY,=,v.Ambient.null)
		f.in.control.callsub(initCalc,"sQTY",v.local.sQty)
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub(createPreBuilt,"sMyPart",v.local.spart,"sMyRev",v.Local.srev,"sMyQTY",v.Local.sqty)
	f.Intrinsic.Control.EndIf
	
	'Call Quick Price program
	f.in.control.callsub(QuickPrice)
	v.Local.lLastRow.Declare(long)
	v.Local.lLastRow.Set(v.DataTable.dtbb.RowCount--)
	
	f.Intrinsic.Control.If(v.Args.sMyQTY,=,v.Ambient.null)
		v.Local.fUnitPrice.Set(v.DataTable.dtBB(v.Local.lLastRow).UNIT_PRICE!FIELDVAL)
		f.Intrinsic.Math.Round(v.Local.fUnitPrice,2,v.Local.fUnitPrice)
		gui.frmQRE.lblQuickPrR.caption(v.Local.fUnitPrice)
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.If(v.Local.sPrg.Trim,=,"OE")
			V.Passed.000067.Set(v.DataTable.dtBB(v.Local.lLastRow).UNIT_PRICE!FIELDVAL)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.CallSub(enableAll)
	gui.frmQRE.txtCopy.setfocus(true)
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(enableAll)
	F.Intrinsic.UI.Msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.sub.cmdQuickPrice_click.End

Program.sub.cmdQuote_click.start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.CallSub(disableAll)
	v.local.sqty.declare(string)
	v.local.sqty.set(v.screen.frmQRE!txtOQTY.text)
	f.Intrinsic.UI.InvokeWaitDialog("Cost building up, please wait")
	
	'Check Customer
	f.Intrinsic.Control.CallSub(checkCustomer)
	v.Local.bCustExit.Declare(boolean)
	f.in.variable.argtovar(ra0,v.lo.bCustExit)
	f.Intrinsic.Control.If(v.local.bCustExit,=,True)
		F.Intrinsic.UI.CloseWaitDialog
		F.Intrinsic.Control.CallSub(enableAll)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'Save routers in the beginning!
	v.Local.sret0.Declare(string)
	f.in.control.callsub(SaveRouters)
	f.in.variable.argtovar(ra0,v.lo.sret0)
	f.Intrinsic.Control.If(v.lo.sret0.trim,=,"N")
		F.Intrinsic.UI.CloseWaitDialog
		F.Intrinsic.Control.CallSub(enableAll)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	f.in.Control.CallSub(initCalc,"sQty",v.Local.sqty)

	f.in.Control.CallSub(quickprice)
	f.in.Control.CallSub("reportCalc","sFlag","N")
	f.in.Control.CallSub(quoteUpload,"uploadType","False")
	f.Intrinsic.Control.CallSub(enableAll)
	gui.frmQRE.txtCopy.setfocus(true)
	f.Intrinsic.UI.CloseWaitDialog
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(enableAll)
	f.Intrinsic.UI.CloseWaitDialog
f.Intrinsic.Control.EndTry
Program.sub.cmdQuote_click.end

Program.sub.cmdRouter_click.start
'Save routers in the beginning!
f.Intrinsic.Control.Try
	f.Intrinsic.Control.CallSub(disableAll)
	
	'Check Customer
	f.Intrinsic.Control.CallSub(checkCustomer)
	v.Local.bCustExit.Declare(boolean)
	f.in.variable.argtovar(ra0,v.lo.bCustExit)
	f.Intrinsic.Control.If(v.local.bCustExit,=,True)
		F.Intrinsic.UI.CloseWaitDialog
		F.Intrinsic.Control.CallSub(enableAll)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	v.Local.sret0.Declare(string)
	f.in.control.callsub(SaveRouters)
	f.in.variable.argtovar(ra0,v.lo.sret0)
	f.Intrinsic.Control.If(v.lo.sret0.trim,=,"N")
		F.Intrinsic.UI.CloseWaitDialog
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf

	f.in.control.callsub(initCalc,"sQTY",v.Screen.frmQRE!txtRouterBuildQty.text)
	f.in.Control.CallSub(quickprice)
	f.in.control.callsub(routerUpload,"sQTY",v.Screen.frmQRE!txtRouterBuildQty.text)
	f.Intrinsic.Control.CallSub(enableAll)
	gui.frmQRE.txtCopy.setfocus(true)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.Intrinsic.Control.CallSub(enableAll)
	f.Intrinsic.UI.CloseWaitDialog
f.Intrinsic.Control.EndTry
Program.sub.cmdRouter_click.end

Program.sub.initCalc.Start
f.Intrinsic.Control.Try
'Create buildup cost for a qty of 1
v.Local..BulkDeclareString(sWarnMsg,sheader,sDraw,sSeqCheck,sTime,sCreateDate,sFullFilePath,sPath,sFileType,sKeys,sDrawings,sMyPart,sGSSPart,sMaterDT,sGVM,sGVL,sLabour,sMater,sMasterSQL,sMasterString,sPartRev,sSeq,sJobMfgTotal,sParTotal,sJobTotal,sRowState,sOQty,sOMark,sqrebuild,sCostUnit,sQtyBreak,sPart,sDesc,sUM,sPL,sSR,sAltDesc,sDrawing,sMat,sMatC,sMatD,sWC,sLMO,sCust,sCustPart,sStepUM,sStepDesc,sret,sAssemType,sOperations,sDuration,sTimeUnit,sParent,sPowdPrice,sSheetSell,sSellDesc,ssql,scmdpow)
v.Local..BulkDeclareFloat(fpphrun,fparGrandTotal,fjobMfgGrandTotal,fjobOHGrandTotal,fjobGrandTotal,fpargtotaldesc,fjobgtotaldesc,fSheetSell,fSellpartDesc,fMinimum,fRate,fOMarkup,fCost,fSell,fMark,fQtyR,fQtyS,fPPWU,fRunRate,fRunTime,fSetupRate,fSetupTime,fTimeSpentS,fTimeSpentR,fOperations,fDuration,fMatSetPrice,fSellPart,fSellSetup,fSheetPrice,fJobPrice,fMyPPWU,ftempret,fSellDesc)
v.Local..BulkDeclareLong(iCount,i,j,k,t,lSeq,ltemp,iIDreturn,iRefID,iDocID,lLen,lRet,lRetMat)
v.local.bSingl.declare(boolean)
v.local.bSingl.set(0)
V.Local.bMatSeq.Declare(boolean)
v.Local.sret0.Declare(string)
v.Local.sHeadr.Declare
v.Local.sPowdr.Declare
v.Local.sName.Declare

'If Table exists, close, continue to creation
f.Intrinsic.Control.If(v.DataTable.dtB.Exists)
	f.Data.DataTable.Close("dtB")
f.Intrinsic.Control.EndIf
v.Local.ssql.Set("SELECT * FROM GAB_4486_BUILDUP")
F.Data.DataTable.CreateFromSQL("dtB","conx",v.Local.ssql,true)
'Need to add this column, ultimate goal is to delete this database table!
F.Data.DataTable.AddColumn("dtB","Draw","String")
f.Intrinsic.String.Format(v.Ambient.Date,"YYYYMMDD",v.Local.sCreateDate)


'Set Parent & Clear Records
v.local.sParent.set(v.DataTable.Headr_0(0).BoostID!fieldval)

F.Intrinsic.Control.For(V.Local.i,0,v.global.lThreshold,1)
	f.Intrinsic.String.Concat("Headr_",v.Local.i,v.Local.sHeadr)
	f.Intrinsic.String.Concat("Powdr_",v.Local.i,v.Local.sPowdr)
	
	f.intrinsic.control.if(v.DataTable.[v.Local.sHeadr].RowCount,>,0)
	v.local.sName.set(v.DataTable.[v.Local.sHeadr](0).BOOSTID!FIELDVAL)
	v.local.sdesc.set(v.DataTable.[v.Local.sHeadr](0).DESC!FIELDVALTRIM)
	f.in.string.replace(v.Local.sdesc,"'","''",v.Local.sdesc)
	'v.local.scmdpow.set(v.screen.frmQRE!cmdPow[v.local.i].backcolor)
	v.local.sUM.set(v.DataTable.[v.Local.sHeadr](0).UM!FIELDVALTRIM)
	v.local.sPL.set(v.DataTable.[v.Local.sHeadr](0).UM!FIELDVALTRIM)
	v.local.sSR.set(v.DataTable.[v.Local.sHeadr](0).SRC!FIELDVALTRIM)
	v.local.sCust.set(v.DataTable.[v.Local.sHeadr](0).CUSTOMER!FIELDVALTRIM)
	v.local.sCustPart.set(v.DataTable.[v.Local.sHeadr](0).CUSTPART!FIELDVALTRIM)
	v.local.sPartRev.set(v.DataTable.[v.Local.sHeadr](0).CUSTREVPART!FIELDVALTRIM)
	v.Local.sDraw.Set(v.DataTable.[v.Local.sHeadr](0).DRAW!FIELDVALTRIM)
	f.Data.Dictionary.ReturnAllPairs(dctFiles[v.local.i],v.Local.sdrawing)
	f.Intrinsic.String.GSSPartString(v.Local.scustpart,v.Local.spartrev,v.Local.sgsspart)
	V.Local.SPART.Set(V.Local.sName)
	
	'Do a part check
	F.Intrinsic.String.Len(v.Local.sCustPart,v.Local.lLen)
	f.Intrinsic.Control.If(v.Local.lLen,>,17)
	f.Intrinsic.Control.AndIf(v.Args.PartCheck,=,1)
		f.Intrinsic.UI.MsgBox("WARNING, Part Number is greater than 17 characters and update part is checked, are you sure you want to continue?","WARNING",4,v.Local.lRet)
		f.Intrinsic.Control.If(v.Local.lret,=,6)
		f.Intrinsic.Control.Elseif(v.Local.lret,=,7)
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	'DO A MATERIAL CHECK
	f.intrinsic.control.if(v.DataTable.[v.Local.sHeadr].RowCount,>,0)
		f.intrinsic.control.for(v.local.k,0,v.DataTable.Mater_[v.local.i].rowcount--,1)
			f.Intrinsic.Control.If(v.DataTable.mater_[v.Local.i](v.Local.k).SEQ!Fieldvaltrim,=,"MAT")
				v.Local.bMatSeq.Set(true)
				v.Local.sSeqCheck.Set(v.DataTable.mater_[v.Local.i](v.Local.k).SEQ!Fieldval)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.k)
		f.Intrinsic.Control.If(v.Local.bMatSeq,=,False)
			f.Intrinsic.String.Build("WARNING, MATERIAL NOT FOUND AT ROUTER {0}, WILL CONTINUE WITH CALCULATION.",v.DataTable.[v.Local.sHeadr](0).BoostID!fieldval,v.Local.sWarnMsg)
			f.Intrinsic.UI.Msgbox(v.Local.sWarnMsg)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	'Assembly Tpye
	v.local.sAssemType.set("True")

	'Overall Markup
	v.Local.fOMarkup.Set(v.DataTable.[v.Local.sHeadr](0).OMarkup!fieldval)

	'Qty Break
	v.Local.sQTYBreak.Set(v.DataTable.[v.Local.sHeadr](0).OQty!fieldval)
	v.Local.soqty.Set(v.Args.sQty)
	
	f.intrinsic.control.if(v.DataTable.[v.Local.sHeadr].RowCount,>,0)
		f.in.string.build(v.local.ssql,v.Local.sName,v.local.ssql)
		f.in.string.concat(v.Local.sMasterSQL,v.Local.ssql,v.Local.sMasterSQL)
		v.local.lseq.set(0)
		f.intrinsic.math.add(v.local.lseq,1,v.local.lseq)
		f.intrinsic.control.for(v.local.j,0,v.DataTable.Mater_[v.local.i].rowcount--,1)
			v.local.srowstate.set(v.datatable.Mater_[v.local.i](v.local.j).rowstate)
			f.intrinsic.control.if(v.local.sRowState,<>,8)
				v.local.sAltDesc.set(v.datatable.Mater_[v.local.i](v.local.j).Alt!FieldVal)
				v.local.fMark.set(v.datatable.Mater_[v.local.i](v.local.j).Mark!FieldVal)
				v.local.smat.set(v.datatable.Mater_[v.local.i](v.local.j).Part!FieldVal)
				v.local.sstepdesc.set(v.datatable.Mater_[v.local.i](v.local.j).Descr!FieldVal)
				v.local.sstepUM.set(v.datatable.Mater_[v.local.i](v.local.j).UM!FieldVal)
				v.Local.sseq.Set(v.DataTable.mater_[v.Local.i](v.Local.j).SEQ!Fieldval)
				v.local.frate.set(v.datatable.Mater_[v.local.i](v.local.j).Cost!FieldValFloat)
				'If Material Sequence
				f.intrinsic.control.if(v.datatable.Mater_[v.local.i](v.local.j).LMO!FieldVal,=,"M")
					v.local.sLMO.set("M")
					v.local.fcost.set(v.datatable.Mater_[v.local.i](v.local.j).Cost!FieldValFloat)
					'F.IN.DEBUG.SHOWCALLERINFO
					f.intrinsic.control.if(v.local.fPPWU,>,v.datatable.Mater_[v.local.i](v.local.j).PPWU!FieldValFloat)
					f.intrinsic.control.else
					v.local.fPPWU.set(v.datatable.Mater_[v.local.i](v.local.j).PPWU!FieldValFloat)
					f.intrinsic.control.endif
					v.local.fMark.set(v.datatable.Mater_[v.local.i](v.local.j).Mark!FieldValFloat)
					v.local.fQtyR.set(v.datatable.Mater_[v.local.i](v.local.j).Run!FieldValFloat)
					v.local.fQtyS.set(v.datatable.Mater_[v.local.i](v.local.j).Setup!FieldValFloat)
					'If it is Parts per unit
					f.intrinsic.control.if(v.local.fPPWU,<>,0)
						f.intrinsic.control.if(v.datatable.Mater_[v.local.i](v.local.j).PPWU!FieldValFloat,=,0)
							f.intrinsic.math.mult(v.local.fQtyS,v.local.frate,v.local.fMatSetPrice)
							f.intrinsic.math.mult(v.local.fQtyR,v.local.fcost,v.local.fQtyR)
							f.intrinsic.math.mult(v.local.fQtyS,v.local.fCost,v.local.fQtyS)
							f.intrinsic.math.add(v.local.fQtyR,v.local.fQtyS,v.local.fcost)
							f.intrinsic.control.if(v.local.fMark,<>,0)
								f.intrinsic.math.div(v.local.fMark,100,v.local.fMark)
							f.intrinsic.control.endif
							f.intrinsic.math.add(v.local.fMark,1,v.local.fMark)
							f.intrinsic.math.mult(v.local.fcost,v.local.fMark,v.local.fSell)
						f.intrinsic.control.else
							f.in.string.Ucase(v.Local.saltdesc,v.Local.saltdesc)
							f.Intrinsic.Control.If(v.Local.saltdesc.trim,=,"WHOLE","or",v.Local.saltdesc.Trim,=,"")
								f.in.control.if(v.Local.fPPWU,>=,1)
									f.intrinsic.math.div(1,v.local.fPPWU,v.local.ftempret)
								f.in.control.else
									v.local.ftempret.set(v.Local.fppwu)
								f.in.control.endif
								f.intrinsic.math.ceiling(v.local.ftempret,v.local.ftempret)
								f.intrinsic.math.mult(v.local.ftempret,v.local.fcost,v.local.fCost)
								f.intrinsic.control.if(v.local.fMark,<>,0)
									f.intrinsic.math.div(v.local.fMark,100,v.local.fMark)
								f.intrinsic.control.endif
								f.intrinsic.math.add(v.local.fMark,1,v.local.fMark)
								f.intrinsic.math.mult(v.local.fCost,v.local.fMark,v.local.fSell)
							F.Intrinsic.Control.Else
								f.intrinsic.math.evaluate(v.local.sAltDesc,V.LOCAL.fTempRet)
								'f.Intrinsic.Math.Div(1,v.datatable.Mater_[v.local.i](v.local.j).PPWU!FieldValFloat,v.Local.fSell)
								f.Intrinsic.Math.mult(V.Local.fTempRet,V.Local.fcost,v.local.fSell)
								f.intrinsic.control.if(v.local.fMark,<>,0)
									f.intrinsic.math.div(v.local.fMark,100,v.local.fMark)
								f.intrinsic.control.endif
								f.intrinsic.math.add(v.local.fMark,1,v.local.fMark)
								f.Intrinsic.Math.Mult(v.Local.fSell,v.local.fmark,v.Local.fSell)	
							f.intrinsic.control.endif
						f.intrinsic.control.endif
					'If it is Quantity
					f.intrinsic.control.else
						f.intrinsic.math.mult(v.local.fQtyS,v.local.frate,v.local.fMatSetPrice)
						f.intrinsic.math.mult(v.local.fQtyR,v.local.fcost,v.local.fQtyR)
						f.intrinsic.math.mult(v.local.fQtyS,v.local.fCost,v.local.fQtyS)
						f.intrinsic.math.add(v.local.fQtyR,v.local.fQtyS,v.local.fcost)
						f.intrinsic.control.if(v.local.fMark,<>,0)
							f.intrinsic.math.div(v.local.fMark,100,v.local.fMark)
						f.intrinsic.control.endif
						f.intrinsic.math.add(v.local.fMark,1,v.local.fMark)
						f.intrinsic.math.mult(v.local.fcost,v.local.fMark,v.local.fSell)
					f.intrinsic.control.endif
					'Dealing with descriptions
					f.intrinsic.math.round(v.local.fSell,2,v.local.fSell)
					v.local.sSellDesc.set("")
					f.intrinsic.control.if(v.local.fQtyS,<>,"0")
						f.intrinsic.string.concat(v.local.sSellDesc,"$",v.local.fSell,"/unit",v.local.sSellDesc)
					f.intrinsic.control.elseif(v.local.fQtyR,<>,"0")
						f.intrinsic.string.concat(v.local.sSellDesc,"$",v.local.fSell,"/unit",v.local.sSellDesc)
					f.intrinsic.control.else
						f.in.math.mult(v.local.fCost,v.local.fMark,v.local.fSellDesc)
						f.in.control.if(v.Local.fselldesc,<>,0)
							f.in.control.if(v.Local.fQTYR,<>,0)
								f.in.math.div(v.Local.fSellDesc,v.Local.fQtyR,v.Local.fselldesc)
								f.in.math.round(v.Local.fselldesc,2,v.Local.fselldesc)
							f.in.control.else
								f.in.math.div(v.Local.fSellDesc,v.Local.fppwu,v.Local.fselldesc)
								f.in.math.round(v.Local.fselldesc,2,v.Local.fselldesc)
							f.in.control.endif
						f.in.control.else
							v.local.fSellDesc.set(0)
						f.in.control.endif
						f.intrinsic.string.concat(v.local.sSellDesc,"$",v.local.fSellDesc,"/part",v.local.sSellDesc)
					f.intrinsic.control.endif
					f.Intrinsic.String.Concat("Mater_",v.Local.i,v.Local.sMater)
					f.data.datatable.setvalue(v.local.sMater,v.local.j,"SellDesc",v.local.sSellDesc)
					'Reset it one more time for entry into table
					v.local.fQtyR.set(v.datatable.Mater_[v.local.i](v.local.j).Run!FieldValFloat)
					v.local.fQtyS.set(v.datatable.Mater_[v.local.i](v.local.j).Setup!FieldValFloat)
					v.Local.fMyPPWU.Set(v.datatable.Mater_[v.local.i](v.local.j).PPWU!FieldValFloat)
					f.Intrinsic.Math.Round(v.Local.fMyPPWU,4,v.Local.fMyPPWU)
					f.Data.DataTable.AddRow("dtB","FG_PART",v.Local.spart.Trim)
					
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"DRAW",v.Local.sDraw.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_DESCRIPTION",v.Local.sdesc.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_UM",v.Local.sum.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_PL",v.Local.sPL.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_SR",v.Local.sSR.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_CODE",v.Local.sMatC.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_COST",v.Local.fcost.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_PRICE",v.Local.fsell.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_PART",v.Local.smat.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_PPWU",v.Local.fmyppwu.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"TERMINAL",v.Caller.Terminal.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"USERID",v.Caller.User.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_MARKUP",v.Local.fOMarkup)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"STEP_DESC",v.Local.sStepDesc.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LMO",v.Local.sLMO.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUSTOMER",v.Local.sCust.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUSTOMER_PART",v.Local.sCustPart.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"STEP_UM",v.Local.sStepUM)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"RATE",v.Local.fRate)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"Drawing",v.Local.sDrawing)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_SET_PRICE",v.Local.fMatSetPrice)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"QTY_BREAK",v.Local.sQtyBreak.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PPH_RUN",v.Local.fQtyR)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PPH_SET",v.Local.fQtyS)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"SEQ",v.Local.sSeq.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"ALT_DESCRIPTION",v.Local.saltdesc.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_MARKUP",v.Local.fmark)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_UNITS_ORD",v.Local.ftempret)
					F.Intrinsic.Control.If(V.Local.i,<>,0)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PARENT",v.Local.sparent.Trim)
					F.Intrinsic.Control.EndIf
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"ASSEMBLY_TYPE",v.Local.sAssemType.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_QTY",v.Local.soqty.Trim)
					'f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_MARK",v.Local.somark)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUST_REV",v.Local.sPartRev.Trim)

				'If Outside Sequence or Powder
				f.intrinsic.control.elseif(v.datatable.Mater_[v.local.i](v.local.j).LMO!FieldVal,=,"O","or",v.datatable.Mater_[v.local.i](v.local.j).LMO!FieldVal,=,"P")
					v.local.sSellDesc.set("")
					v.local.sLMO.set(v.datatable.Mater_[v.local.i](v.local.j).LMO!FieldVal)
					v.local.fcost.set(v.datatable.Mater_[v.local.i](v.local.j).Cost!FieldValFloat)
					v.local.fQtyR.set(v.datatable.Mater_[v.local.i](v.local.j).Run!FieldValFloat)
					f.intrinsic.control.if(v.datatable.Mater_[v.local.i](v.local.j).LMO!FieldVal,=,"P")
						v.local.fQtyS.set(1)
					f.intrinsic.control.else
						v.local.fQtyS.set(v.datatable.Mater_[v.local.i](v.local.j).Setup!FieldValFloat)
					f.intrinsic.control.endif
					
					v.local.fMark.set(v.datatable.Mater_[v.local.i](v.local.j).Mark!FieldValFloat)
					f.in.math.mult(v.local.fMark,.01,v.Local.fmark)
					f.in.math.add(v.local.fMark,1,v.Local.fmark)
					f.intrinsic.math.mult(v.local.fQtyR,v.local.fcost,v.local.fQtyR)
					f.intrinsic.math.mult(v.local.fQtyS,v.local.fCost,v.local.fQtyS)
					'Find the minimum charge
					v.local.fMinimum.set(v.datatable.Mater_[v.local.i](v.local.j).Alt!FieldVal)
					F.INTRINSIC.MATH.MULT(v.local.fCost,v.local.fMark,v.local.fSell)
					f.in.control.if(v.Local.fsell,>,v.Local.fminimum)
						f.intrinsic.string.concat(v.local.sSellDesc,"$",v.local.fSell," ",v.local.sSellDesc)
					f.in.control.else
						f.intrinsic.string.concat(v.local.sSellDesc,"$",v.local.fminimum," ",v.local.sSellDesc)
					f.in.control.endif
					f.Intrinsic.String.Concat("Mater_",v.Local.i,v.Local.sMater)
					f.data.datatable.setvalue(v.local.sMater,v.local.j,"SellDesc",v.local.sSellDesc)
					'Reset it one more time for entry into table
					v.local.fQtyR.set(v.datatable.Mater_[v.local.i](v.local.j).Run!FieldValFloat)
					v.local.fQtyS.set(v.datatable.Mater_[v.local.i](v.local.j).Setup!FieldValFloat)
					
					f.Data.DataTable.AddRow("dtB","FG_PART",v.Local.spart.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"DRAW",v.Local.sDraw.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_DESCRIPTION",v.Local.sdesc.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_UM",v.Local.sum.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_PL",v.Local.spl.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_SR",v.Local.ssr.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OUTSIDE_COST",v.Local.fcost)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OUTSIDE_MARKED_UP",v.Local.fmark)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OUTSIDE_PRICE",v.Local.fSell)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"TERMINAL",v.caller.terminal.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"USERID",v.caller.user.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_MARKUP",v.Local.fOMarkup)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"STEP_DESC",v.Local.sStepDesc.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LMO",v.Local.sLMO.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUSTOMER",v.Local.sCust.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUSTOMER_PART",v.Local.sCustPart.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"STEP_UM",v.Local.sStepUM.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"RATE",v.Local.fRate)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_PART",v.Local.smat.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"DRAWING",v.Local.sdrawing)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"QTY_BREAK",v.Local.sQtyBreak.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PPH_RUN",v.Local.fQtyR)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PPH_SET",v.Local.fQtyS)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"SEQ",v.Local.sSeq.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"ALT_DESCRIPTION",v.Local.saltdesc.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_MARKUP",v.Local.fmark)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"MATERIAL_UNITS_ORD",v.Local.ftempret)
					F.Intrinsic.Control.If(V.Local.i,<>,0)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PARENT",v.Local.sparent.Trim)
					f.Intrinsic.Control.EndIf
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"ASSEMBLY_TYPE",v.Local.sAssemType.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_QTY",v.Local.soqty.Trim)
					'f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_MARK",v.Local.sdesc.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUST_REV",v.Local.sPartRev.Trim)
				f.intrinsic.control.endif
				f.data.datatable.setvalue(v.local.sMater,v.local.j,"Sell",v.local.fsell)
'				f.odbc.connection!conx.execute(v.local.ssql)
			f.intrinsic.control.endif
		f.intrinsic.control.next(v.local.j)
		
		'For Labour
		f.Intrinsic.String.Concat("Route_",v.Local.i,v.Local.sLabour)
		f.intrinsic.control.for(v.local.j,0,v.DataTable.Route_[v.local.i].rowcount--,1)
			v.local.sRowState.set(v.datatable.Route_[v.local.i](v.local.j).rowstate)
			f.intrinsic.control.if(v.local.sRowState,<>,8)
				v.local.sSheetSell.set("")
				V.local.sSellDesc.set("")
				f.intrinsic.math.add(v.local.lseq,1,v.local.lseq)
				v.local.sLMO.set("L")
				v.Local.fpphrun.Set(0)
				v.local.swc.set(v.datatable.Route_[v.local.i](v.local.j).Labour!FieldVal)
				v.local.fRunRate.set(v.datatable.Route_[v.local.i](v.local.j).LabourRate!FieldValFloat)
				v.local.fRunTime.set(v.datatable.Route_[v.local.i](v.local.j).TimeReq!FieldValFloat)
				v.local.fSetupRate.set(v.datatable.Route_[v.local.i](v.local.j).SetupRate!FieldValFloat)
				v.local.sTimeUnit.set(v.datatable.Route_[v.local.i](v.local.j).T!FieldVal)
				v.local.fSetupTime.set(v.datatable.Route_[v.local.i](v.local.j).SetupTime!FieldValFloat)
				v.local.fTimeSpentS.set(v.datatable.Route_[v.local.i](v.local.j).SetupTime!FieldValFloat)
				v.local.fTimeSpentR.set(v.datatable.Route_[v.local.i](v.local.j).TimeReq!FieldValFloat)
				v.local.sOperations.set(v.datatable.Route_[v.local.i](v.local.j).Operations!FieldValString)
				v.local.sstepdesc.set(v.datatable.Route_[v.local.i](v.local.j).Descr!FieldVal)
				v.local.sCostUnit.set(v.datatable.Route_[v.local.i](v.local.j).UM!FieldVal)
				v.local.sstepUM.set("HR")
				'v.local.ssql.set("SELECT COST_UNIT FROM GAB_4486_QRE_CONFIG WHERE USERID='{0}' and WORKCENTRE='{1}'")
				'f.intrinsic.string.build(v.local.ssql,v.caller.user.TRIM,v.local.swc,v.local.ssql)
				'F.ODBC.CONNECTION!CONX.EXECUTEANDRETURN(v.local.ssql,v.local.sCostUnit)
				
				'If it is UM JB
				F.INTRINSIC.CONTROL.IF(V.LOCAL.SCOSTUNIT.TRIM,=,"JB")
					f.intrinsic.control.if(v.local.sTimeUnit.trim,=,"S")
						f.in.math.div(v.Local.fruntime,60,v.Local.fruntime)
						f.in.math.div(v.Local.fruntime,60,v.Local.fruntime)
					f.intrinsic.control.elseif(v.local.sTimeUnit.trim,=,"M")
						f.in.math.div(v.Local.fruntime,60,v.Local.fruntime)
					f.intrinsic.control.endif		
					f.In.math.round(v.Local.fRunTime,4,v.Local.fRunTime)
					
					f.in.math.mult(v.local.frunrate,v.local.fruntime,v.local.fsell)
					f.in.math.round(v.local.fsell,2,v.Local.fsell)
					v.local.fSellPart.set(v.local.fSell)
					f.in.math.add(v.local.fjobOHGrandTotal,v.Local.fSell,v.Local.fjobOHGrandTotal)
					
					f.intrinsic.string.concat(v.local.sSellDesc,"$",v.local.fSell,"/job",v.local.sSellDesc)
					f.data.datatable.setvalue(v.local.sLabour,v.local.j,"SellDesc",v.local.sSellDesc)
					f.data.datatable.setvalue(v.local.sLabour,v.local.j,"SellPart",v.local.fSellPart)
					
					f.in.math.div(v.Local.fsetuptime,60,v.Local.fsetuptime)
					f.in.math.mult(v.local.fsetuprate,v.local.fsetuptime,v.local.fSellSetup)
					f.data.datatable.setvalue(v.local.sLabour,v.local.j,"SellSetup",v.local.fSellSetup)
					f.in.math.add(v.local.fjobMfgGrandTotal,v.Local.fSellSetup,v.Local.fjobMfgGrandTotal)
					f.in.math.add(v.local.fsellsetup,v.Local.fsellpart,v.Local.fsellsetup)
					f.Data.DataTable.AddRow("dtB","FG_PART",v.Local.spart.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"DRAW",v.Local.sDraw.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_DESCRIPTION",v.Local.sdesc.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_UM",v.Local.sum.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_PL",v.Local.spl.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_SR",v.Local.ssr.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_WC",v.Local.sWC.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_RUN_TIME",v.Local.fRunTime)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_SETUP_TIME",v.Local.fSetupTime)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_SETUP_PRICE",v.Local.fsellsetup)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_RUN_PRICE",0)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_TIME_SPENT_S",v.Local.fTimeSpentS)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_TIME_SPENT_R",v.Local.fTimeSpentR)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"TERMINAL",v.Caller.Terminal)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"USERID",v.Caller.User.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_MARKUP",v.Local.fOMarkup)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"DRAWING",v.Local.sdrawing.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"STEP_DESC",v.Local.sstepdesc.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LMO",v.Local.slmo.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUSTOMER",v.Local.scust.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUSTOMER_PART",v.Local.scustpart.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"STEP_UM",v.Local.sstepum.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"QTY_BREAK",v.Local.sQtyBreak.Trim)
					'f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"SEQ",v.Local.sSeq)
					F.Intrinsic.Control.If(V.Local.i,<>,0)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PARENT",v.Local.sparent.Trim)
					f.Intrinsic.Control.EndIf
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"ASSEMBLY_TYPE",v.Local.sAssemType.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_QTY",v.Local.soqty.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUST_REV",v.Local.sPartRev.Trim)
					f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_UNIT",v.Local.SCOSTUNIT.Trim)
										
				F.INTRINSIC.CONTROL.ELSE
					
					f.Intrinsic.String.RegExMatch(v.local.soperations,"\d+\.?\d*",true,v.Local.sret)
					f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
					f.Intrinsic.Control.Try
						f.Intrinsic.Math.ConvertToFloat(v.Local.sret(1),v.Local.fOperations)
					f.Intrinsic.Control.EndTry
					v.local.sDuration.set(v.datatable.Route_[v.local.i](v.local.j).Duration!FieldValString)
					f.Intrinsic.String.RegExMatch(v.local.sDuration,"\d+\.?\d*",true,v.Local.sret)
					f.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sret)
					f.Intrinsic.Control.Try
						f.Intrinsic.Math.ConvertToFloat(v.Local.sret(1),v.Local.fDuration)
					f.Intrinsic.Control.EndTry
					
					f.intrinsic.control.if(v.local.fPPWU,<>,0)
						f.intrinsic.control.if(v.local.sTimeUnit.trim,=,"M")
							f.intrinsic.math.div(v.local.fSetupTime,60,v.local.fSetupTime)
							f.intrinsic.math.mult(v.local.fSetupTime,v.local.fSetupRate,v.local.fSellSetup)
							f.in.math.add(v.local.fjobMfgGrandTotal,v.Local.fSellSetup,v.Local.fjobMfgGrandTotal)
							f.intrinsic.math.div(v.local.fRunTime,60,v.local.fRunTime)
							f.intrinsic.math.mult(v.local.fRuntime,v.local.fRunRate,v.local.fSell)
							f.In.math.round(v.Local.fRunTime,4,v.Local.fRunTime)
							F.INTRINSIC.CONTROL.IF(V.LOCAL.SCOSTUNIT.TRIM,=,"SH")
								v.local.fSheetSell.set(v.local.fsell)
								f.in.math.round(v.local.fsheetsell,2,v.Local.fsheetsell)
								f.intrinsic.string.concat("$",v.local.fsheetsell,"/sheet",v.local.sSheetSell)
								f.intrinsic.string.concat(v.local.sSellDesc,v.local.sSheetSell,v.ambient.newline,v.local.sSellDesc)
								f.intrinsic.math.div(v.local.fSell,v.local.fPPWU,v.local.fSellPart)
								f.in.math.add(v.local.fparGrandTotal,v.local.fSellPart,v.Local.fparGrandTotal)
								f.intrinsic.math.div(v.local.fRunRate,v.local.fPPWU,v.local.fSheetPrice)
								f.intrinsic.math.round(v.local.fsheetprice,2,v.local.fsheetprice)
								'Sheet parts per
								'f.Intrinsic.Debug.ShowCallerInfo
								F.Intrinsic.Math.Div(V.Local.fppwu,v.Local.fRunTime,v.Local.fpphrun)
								'f.Intrinsic.Math.Mult(v.Local.fpphrun,60,v.Local.fpphrun)
								'f.Intrinsic.Math.Div(1,v.Local.fPPWU,v.Local.fpphrun)
								'f.Intrinsic.Math.Mult(v.Local.fpphrun,v.Local.fRunTime,v.Local.fpphrun)
								
							f.intrinsic.control.else
								v.local.fSellPart.set(v.local.fSell)
								f.in.math.add(v.local.fparGrandTotal,v.local.fSellPart,v.Local.fparGrandTotal)
							F.intrinsic.control.endif
						f.intrinsic.control.elseif(v.local.sTimeUnit.trim,=,"S")
							f.intrinsic.math.div(v.local.fSetupTime,60,v.local.fSetupTime)
							f.intrinsic.math.mult(v.local.fSetupTime,v.local.fSetupRate,v.local.fSellSetup)
							f.in.math.add(v.local.fjobMfgGrandTotal,v.Local.fSellSetup,v.Local.fjobMfgGrandTotal)
							f.intrinsic.math.mult(v.local.fOperations,v.local.fDuration,v.local.fDuration)
							f.intrinsic.control.if(v.local.fDuration,=,0)
								v.local.fRunTime.set(v.datatable.Route_[v.local.i](v.local.j).TimeReq!FieldValFloat)
								f.intrinsic.math.div(v.local.fRunTime,60,v.local.fRunTime)
								f.intrinsic.math.div(v.local.fRunTime,60,v.local.fRunTime)
								f.intrinsic.math.mult(v.local.fRunTime,v.local.fRunRate,v.local.fSellPart)
								f.in.math.add(v.local.fparGrandTotal,v.local.fSellPart,v.Local.fparGrandTotal)
								f.In.math.round(v.Local.fRunTime,4,v.Local.fRunTime)
							f.intrinsic.control.else
								f.intrinsic.math.div(v.local.fDuration,60,v.local.fDuration)
								f.intrinsic.math.div(v.local.fDuration,60,v.local.fDuration)
								V.local.fRunTime.set(v.local.fDuration)
								f.intrinsic.math.mult(v.local.fDuration,v.local.fRunRate,v.local.fSellPart)
								f.in.math.add(v.local.fparGrandTotal,v.local.fSellPart,v.Local.fparGrandTotal)
								f.In.math.round(v.Local.fRunTime,4,v.Local.fRunTime)
							f.intrinsic.control.endif
						f.intrinsic.control.elseif(v.local.sTimeUnit.trim,=,"H")
							F.INTRINSIC.CONTROL.IF(V.LOCAL.SCOSTUNIT.TRIM,=,"SH")
								v.local.fSheetSell.set(v.local.fsell)
								v.local.fRunTime.set(v.datatable.Route_[v.local.i](v.local.j).TimeReq!FieldValFloat)
								f.intrinsic.math.mult(v.local.fRuntime,v.local.fRunRate,v.local.fsheetsell)
								f.in.math.round(v.local.fsheetsell,2,v.Local.fsheetsell)
								f.In.math.round(v.Local.fRunTime,4,v.Local.fRunTime)
								f.intrinsic.string.concat("$",v.local.fsheetsell,"/sheet",v.local.sSheetSell)
								f.intrinsic.string.concat(v.local.sSellDesc,v.local.sSheetSell,v.ambient.newline,v.local.sSellDesc)
								f.intrinsic.math.div(v.local.fsheetsell,v.local.fPPWU,v.local.fSellPart)
								f.intrinsic.math.round(v.local.fsheetprice,2,v.local.fsheetprice)
								'Sheet parts per
								F.Intrinsic.Math.Div(V.Local.fppwu,v.Local.fRunTime,v.Local.fpphrun)
								'f.Intrinsic.Math.Div(1,v.Local.fPPWU,v.Local.fpphrun)
								'f.Intrinsic.Math.Mult(v.Local.fpphrun,v.Local.fRunTime,v.Local.fpphrun)
							f.intrinsic.control.else
								f.intrinsic.math.mult(v.local.fRuntime,v.local.fRunRate,v.local.fSell)
								f.In.math.round(v.Local.fRunTime,4,v.Local.fRunTime)
								v.local.fSellPart.set(v.local.fSell)
							f.intrinsic.control.endif
							f.in.math.add(v.local.fparGrandTotal,v.local.fSellPart,v.Local.fparGrandTotal)
							f.intrinsic.math.div(v.local.fSetupTime,60,v.local.fSetupTime)
							f.intrinsic.math.mult(v.local.fSetupTime,v.local.fSetupRate,v.local.fSellSetup)
							f.in.math.add(v.local.fjobMfgGrandTotal,v.Local.fSellSetup,v.Local.fjobMfgGrandTotal)
						f.intrinsic.control.endif
						f.intrinsic.math.round(v.local.fSellpart,2,v.local.fSellpartDesc)
						f.intrinsic.math.round(v.local.fSELLSETUP,2,v.local.fSELLSETUP)
						F.INTRINSIC.CONTROL.IF(V.LOCAL.SCOSTUNIT.TRIM,=,"JB")
							f.intrinsic.string.concat(v.local.sSellDesc,"$",v.local.fSellSetup,"/job",v.local.sSellDesc)
						f.intrinsic.control.else
							f.intrinsic.string.concat(v.local.sSellDesc,"$",v.local.fSellPartDesc,"/part",v.local.sSellDesc)
						f.intrinsic.control.endif
						
						f.data.datatable.setvalue(v.local.sLabour,v.Local.j,"SellSetup",v.local.fSellSetup)
						f.data.datatable.setvalue(v.local.sLabour,v.local.j,"Sell",v.local.fSell)
						f.data.datatable.setvalue(v.local.sLabour,v.local.j,"SellPart",v.local.fSellPart)
						f.data.datatable.setvalue(v.local.sLabour,v.local.j,"SellDesc",v.local.sSellDesc)
						
						F.Data.DataTable.RunningTotal(v.local.sLabour,"SellPart",0,"+","SellRunGT")
						F.Data.DataTable.RunningTotal(v.local.sLabour,"SellSetup",0,"+","SellSetGT")
						f.in.math.round(v.datatable.Route_[v.local.i](v.local.j).SellSetGT!FieldVal,2,v.Local.fjobgtotaldesc)
						f.in.math.round(v.datatable.Route_[v.local.i](v.local.j).SellRunGT!FieldVal,2,v.Local.fpargtotaldesc)
						
						'Gui.frmQRE.lblLJobT[v.local.i].caption(v.local.fjobgtotaldesc)	
						'Gui.frmQRE.lblLPrtT[v.local.i].caption(v.local.fpargtotaldesc)
						f.Data.DataTable.AddRow("dtB","FG_PART",v.Local.spart.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"DRAW",v.Local.sDraw.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_DESCRIPTION",v.Local.sdesc.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_UM",v.Local.sum.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_PL",v.Local.spl.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_SR",v.Local.ssr.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_WC",v.Local.sWC.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_RUN_TIME",v.Local.fRunTime)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_SETUP_TIME",v.Local.fSetupTime)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_SETUP_PRICE",v.Local.fsellsetup)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_RUN_PRICE",V.Local.fSellPart)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_TIME_SPENT_S",v.Local.fTimeSpentS)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_TIME_SPENT_R",v.Local.fTimeSpentR)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"TERMINAL",v.Caller.Terminal)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"USERID",v.Caller.User.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_MARKUP",v.Local.fOMarkup)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"DRAWING",v.Local.sdrawing.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"STEP_DESC",v.Local.sstepdesc.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LMO",v.Local.slmo.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUSTOMER",v.Local.scust.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUSTOMER_PART",v.Local.scustpart.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"STEP_UM",v.Local.sstepum.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"QTY_BREAK",v.Local.sQtyBreak.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PPH_RUN",v.Local.fpphrun)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PPH_SET",v.Local.fSetupTime)
						'f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"SEQ",v.Local.sSeq)
						F.Intrinsic.Control.If(V.Local.i,<>,0)
							f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PARENT",v.Local.sparent.Trim)
						f.Intrinsic.Control.EndIf
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"ASSEMBLY_TYPE",v.Local.sAssemType.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_QTY",v.Local.soqty.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUST_REV",v.Local.sPartRev.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_UNIT",v.Local.SCOSTUNIT.Trim)
						
					f.intrinsic.control.else
						f.intrinsic.control.if(v.local.sTimeUnit.trim,=,"M")
							f.intrinsic.math.div(v.local.fSetupTime,60,v.local.fSetupTime)
							f.intrinsic.math.mult(v.local.fSetupTime,v.local.fSetupRate,v.local.fSellSetup)
							f.in.math.add(v.local.fjobMfgGrandTotal,v.Local.fSellSetup,v.Local.fjobMfgGrandTotal)
							f.intrinsic.math.mult(v.local.fOperations,v.local.fDuration,v.local.fDuration)
							f.intrinsic.math.div(v.local.fDuration,60,v.local.fDuration)
							f.intrinsic.math.mult(v.local.fDuration,v.local.fRunRate,v.local.fSellPart)
								f.in.math.add(v.local.fparGrandTotal,v.local.fSellPart,v.Local.fparGrandTotal)
						f.intrinsic.control.elseif(v.local.sTimeUnit.trim,=,"S")
							f.intrinsic.math.div(v.local.fSetupTime,60,v.local.fSetupTime)
							f.intrinsic.math.mult(v.local.fSetupTime,v.local.fSetupRate,v.local.fSellSetup)
							f.in.math.add(v.local.fjobMfgGrandTotal,v.Local.fSellSetup,v.Local.fjobMfgGrandTotal)
							f.intrinsic.math.mult(v.local.fOperations,v.local.fDuration,v.local.fDuration)
							f.intrinsic.math.div(v.local.fDuration,60,v.local.fDuration)
							f.intrinsic.math.div(v.local.fDuration,60,v.local.fDuration)
							V.local.fRunTime.set(v.local.fDuration)
							f.intrinsic.math.mult(v.local.fDuration,v.local.fRunRate,v.local.fSellPart)
							f.in.math.add(v.local.fparGrandTotal,v.local.fSellPart,v.Local.fparGrandTotal)
							f.In.math.round(v.Local.fRunTime,4,v.Local.fRunTime)
						f.intrinsic.control.endif
						f.intrinsic.math.round(v.local.fSellpart,2,v.local.fSellpart)
						f.intrinsic.math.round(v.local.fSELLSETUP,2,v.local.fSELLSETUP)
						
						F.INTRINSIC.CONTROL.IF(V.LOCAL.SCOSTUNIT.TRIM,=,"JB")
							f.intrinsic.string.concat(v.local.sSellDesc,"$",v.local.fSellSetup,"/job",v.local.sSellDesc)
						f.intrinsic.control.else
							f.intrinsic.string.concat(v.local.sSellDesc,"$",v.local.fSellPart,"/part",v.local.sSellDesc)
						f.intrinsic.control.endif
						f.data.datatable.setvalue(v.local.sLabour,v.local.j,"SellSetup",v.local.fSellSetup)
						f.data.datatable.setvalue(v.local.sLabour,v.local.j,"Sell",v.local.fSell)
						f.data.datatable.setvalue(v.local.sLabour,v.local.j,"SellPart",v.local.fSellPart)	
						f.data.datatable.setvalue(v.local.sLabour,v.local.j,"SellDesc",v.local.sSellDesc)	
						F.Data.DataTable.RunningTotal(v.local.sLabour,"SellPart",0,"+","SellRunGT")
						F.Data.DataTable.RunningTotal(v.local.sLabour,"SellSetup",0,"+","SellSetGT")
						'Gui.frmQRE.lblLJobT[v.local.i].caption(v.datatable.Route_[v.local.i](v.local.j).SellSetGT!FieldVal)					
						'Gui.frmQRE.lblLPrtT[v.local.i].caption(v.datatable.Route_[v.local.i](v.local.j).SellRunGT!FieldVal)
						
						f.Data.DataTable.AddRow("dtB","FG_PART",v.Local.spart.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"DRAW",v.Local.sDraw.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_DESCRIPTION",v.Local.sdesc.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_UM",v.Local.sum.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_PL",v.Local.spl.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"FG_SR",v.Local.ssr.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_WC",v.Local.sWC.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_RUN_TIME",v.Local.fRunTime)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_SETUP_TIME",v.Local.fSetupTime)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_SETUP_PRICE",v.Local.fsellsetup)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_RUN_PRICE",V.Local.fSellPart)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_TIME_SPENT_S",v.Local.fTimeSpentS)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_TIME_SPENT_R",v.Local.fTimeSpentR)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"TERMINAL",v.Caller.Terminal.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"USERID",v.Caller.User.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_MARKUP",v.Local.fOMarkup)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"DRAWING",v.Local.sdrawing.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"STEP_DESC",v.Local.sstepdesc.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LMO",v.Local.slmo.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUSTOMER",v.Local.scust.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUSTOMER_PART",v.Local.scustpart.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"STEP_UM",v.Local.sstepum.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"QTY_BREAK",v.Local.sQtyBreak.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"SEQ",v.Local.sSeq.Trim)
						F.Intrinsic.Control.If(V.Local.i,<>,0)
							f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"PARENT",v.Local.sparent.Trim)
						f.Intrinsic.Control.EndIf
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"ASSEMBLY_TYPE",v.Local.sAssemType.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"OVERALL_QTY",v.Local.soqty.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"CUST_REV",v.Local.sPartRev.Trim)
						f.Data.DataTable.SetValue("dtB",v.DataTable.dtB.RowCount--,"LABOUR_UNIT",v.Local.SCOSTUNIT.Trim)
					f.Intrinsic.Control.endif
				f.intrinsic.control.endif
			f.intrinsic.control.endif
		f.intrinsic.control.next(v.local.j)
	f.intrinsic.control.endif
	f.Intrinsic.String.Concat("GVWorkcentre",v.Local.i,v.local.sGVL)
	
	'Gui.frmQRE.gsGCRoute[v.local.i].SetGridViewProperty(v.Local.sGVL,"OptionsViewRowAutoHeight","True")
	V.LOCAL.fPPWU.SET(0)
	f.intrinsic.control.if(v.DataTable.[v.Local.sHeadr].RowCount,>,0)
		f.in.math.add(v.local.fjobGrandTotal,v.Local.fjobgtotaldesc,v.Local.fjobGrandTotal)
		F.Intrinsic.UI.InvokeWaitDialog("Creating/Update Part File, Please wait.")
		f.Intrinsic.Control.If(v.Args.CheckPart,=,1)
			v.Local.ssql.Set("SELECT PART FROM INVENTORY_MSTR WHERE PART='{0}'")
			
			'Use the autoincrementing ID for the part number
			F.Intrinsic.Control.If(v.Local.i,<>,0)
				f.Intrinsic.String.Concat("Headr_",v.Local.i,v.Local.sHeader)
				v.Local.sgsspart.Set(v.DataTable.[v.Local.sheader](0).BoostID!fieldval)
			F.Intrinsic.Control.EndIf
			f.Intrinsic.String.build(v.Local.sSQL,v.Local.sgsspart.UCase,v.Local.ssql)
			f.ODBC.Connection!conx.executeandreturn(v.Local.ssql,v.Local.sMyPart)
			f.Intrinsic.Control.If(v.Local.sMyPart.Trim,=,"")
				'f.Intrinsic.String.Left(v.Local.sgsspart,17,v.Local.sgsspart)
				f.Intrinsic.String.Left(v.Local.sdesc,30,v.Local.sdesc)
				f.Intrinsic.String.Left(v.Local.sum,2,v.Local.sum)
				f.Intrinsic.String.Build("INSERT INTO INVENTORY_MSTR (PART, PRODUCT_LINE, DESCRIPTION, UM_PURCHASING, UM_INVENTORY) VALUES ('{0}','{1}','{2}','{3}','{4}')",V.Local.sgsspart.UCase,"FG",v.Local.sdesc,v.Local.sum,v.Local.sum,v.Local.ssql)
				f.odbc.Connection!conx.execute(v.Local.ssql)
				f.Intrinsic.String.Build("INSERT INTO INVENTORY_MST2 (PART, CODE_SOURCE) VALUES ('{0}','{1}')",V.Local.sgsspart.UCase,"F",v.Local.ssql)
				f.odbc.Connection!conx.execute(v.Local.ssql)
				f.Intrinsic.String.Build("INSERT INTO INVENTORY_MST3 (PART,PART_CREATE_DATE) VALUES ('{0}','{1}')",V.Local.sgsspart.UCase,v.Local.sCreateDate,v.Local.ssql)
				f.odbc.Connection!conx.execute(v.Local.ssql)
				f.Intrinsic.String.Build("INSERT INTO INVENTORY_COST (PART,COST,MATL,LABOR,OVHD,OUTS,FREIGHT,OTH,CHG_BY,CHG_PGM) VALUES ('{0}','{1}','{1}','{1}','{1}','{1}','{1}','{1}','{2}','{3}')",V.Local.sgsspart.UCase,0,V.Caller.User,"QRE",v.Local.ssql)
				f.odbc.Connection!conx.execute(v.Local.ssql)
				'Keep getting temporary file errors, must omit for now. 22-03-18
				'f.Global.Inventory.CreatePart(v.Local.sgsspart,V.Local.sum,v.Local.sdesc,"","FG","F","","","","NOMAINT")
				F.Global.DocumentControl.CreateReference(V.Local.sGSSPart,"00030",V.Local.iIDreturn)
			f.Intrinsic.Control.EndIf
			f.Intrinsic.String.Build("UPDATE INVENTORY_MSTR SET DESCRIPTION='{0}' WHERE PART='{1}'",V.Local.sDesc,v.Local.sGSSPart.UCase,v.Local.ssql)
			f.ODBC.Connection!conx.execute(v.Local.ssql)
			
			f.Intrinsic.String.Split(v.Local.sDrawing,"!*!",v.Local.sdrawings)
			f.Intrinsic.String.Split(v.Local.sdrawings(0),"*!*",v.Local.sKeys)
			f.Global.DocumentControl.GetLinkID(v.Local.sgsspart,30,v.Local.iRefID)
			'f.Intrinsic.Debug.ShowCallerInfo
			f.Intrinsic.Control.If(v.Local.irefid,=,-1)
				F.Global.DocumentControl.CreateReference(V.Local.sGSSPart,"00030",V.Local.iRefID)
			f.Intrinsic.Control.EndIf
			
			v.Local.ssql.Set("DELETE FROM ATG_DOC_ASSOC WHERE LINK_ID='{0}'")
			F.Intrinsic.String.Build(v.Local.ssql,v.Local.irefid,v.Local.ssql)
			f.ODBC.Connection!conx.execute(v.Local.ssql)
			v.Local.ssql.Set("SELECT DISTINCT DOC_CONTROL_PATH FROM GAB_4486_QRE_CONFIG")
			F.Intrinsic.String.BUILD(v.Local.ssql,v.Caller.User,v.Local.ssql)
			f.ODBC.Connection!conx.executeandreturn(v.Local.ssql,v.Local.spath)
			F.Intrinsic.Control.For(V.Local.j,0,v.Local.sKeys.UBound,1)
				f.Intrinsic.String.Split(v.Local.sKeys(v.Local.j),".",v.Local.SFILETYPE)
				F.Intrinsic.String.Replace(V.Local.SFILETYPE(1),".","",V.Local.sFileType)
				f.Intrinsic.String.Concat(v.Local.SPAth,"",v.Local.sFullFilePath)
				v.Local.ssql.Set("INSERT INTO ATG_DOC_ASSOC VALUES ('','{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','','','','',0)")
				F.Intrinsic.String.Build(V.Local.SSQL,v.Local.irefid,v.Local.sfiletype,v.Local.sfullfilepath,v.Local.skeys(v.Local.j),"",v.Ambient.Now.PervasiveDate,v.Caller.User,-1,v.Local.ssql)
				f.ODBC.Connection!conx.execute(v.Local.ssql)
			f.Intrinsic.Control.Next(v.Local.j)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.UI.CloseWaitDialog
	f.in.control.endif
	f.in.Control.EndIf
	V.Local.bMatSeq.Set(false)
f.Intrinsic.Control.Next(v.Local.i)

f.in.math.round(v.local.fjobMfgGrandTotal,2,v.Local.fjobMfgGrandTotal)
f.in.math.round(v.local.fparGrandTotal,2,v.Local.fparGrandTotal)
f.intrinsic.string.concat(v.local.fjobMfgGrandTotal," setup/job",v.local.sJobMfgTotal)
f.intrinsic.string.concat(v.local.fparGrandTotal,"/part",v.local.spartotal)
f.intrinsic.string.concat(v.local.fjobOHGrandTotal," OvH/job",v.local.sJobTotal)

f.intrinsic.string.concat("$",v.Local.sJobMfgTotal,v.Local.smasterstring)
f.intrinsic.string.concat(v.Local.smasterstring,v.Ambient.NewLine,"$",v.Local.spartotal,v.Local.smasterstring)
f.intrinsic.string.concat(v.Local.smasterstring,v.Ambient.NewLine,"$",v.Local.sJobTotal,v.Local.smasterstring)

'gui.frmQRE.lblJobParGTotal.caption(v.Local.sMasterString)
'''''QUANTITY OF 1 CALCULATION FINISHED, NOW SAVE TO DB
'f.intrinsic.control.callsub(SaveRouters)
v.local.q.declare(long)
v.local.lBounds.declare(long)
f.in.string.split(v.Local.sMasterSQL,";",v.Local.sMasterSQL)
f.in.math.sub(v.Local.smastersql.UBound,1,v.Local.lbounds)
f.in.control.for(v.Local.q,0,v.Local.lbounds,1)
	f.odbc.connection!conx.execute(v.local.smastersql(v.Local.q))
f.in.control.next(v.Local.q)

''''''NOW DO THE BUILDUP
v.Local.ftempval.Declare(float,0)
v.Local.ftempval2.Declare(float,0)
v.Local.fTotal.Declare(Float,0)
v.Local.sExpression.Declare(string)

f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtB.RowCount--,1)
	f.Intrinsic.Control.If(v.DataTable.dtB(v.Local.i).LMO!FieldValTrim,=,"L")
		'Get Run Time calculated, if sheet then ignore, it has already been calculated
		F.Intrinsic.Control.If(V.DataTable.dtB(V.Local.I).LABOUR_UNIT!FIELDVAL,<>,"SH")
			f.Intrinsic.Control.If(v.DataTable.dtB(v.Local.i).LABOUR_RUN_TIME!FieldVal,<>,0)
				f.Intrinsic.Math.Div(1,v.DataTable.dtB(v.Local.i).LABOUR_RUN_TIME!FieldVal,v.Local.ftempval)
			F.Intrinsic.Control.EndIf
			f.Data.DataTable.SetValue("dtB",v.Local.i,"PPH_RUN",v.Local.ftempval)
			'If Job unit of measure
			F.Intrinsic.Control.If(V.DataTable.dtB(V.Local.I).LABOUR_UNIT!FIELDVAL,=,"JB")
				f.Intrinsic.Math.Add(v.DataTable.dtB(v.Local.i).LABOUR_RUN_TIME!Fieldval,v.DataTable.dtB(v.Local.i).LABOUR_SETUP_TIME!FieldVal,v.Local.ftempval)
				f.Data.DataTable.SetValue("dtB",v.Local.i,"PPH_SET",v.Local.ftempval)
				f.Data.DataTable.SetValue("dtB",v.Local.i,"PPH_RUN",0)	
			F.Intrinsic.Control.EndIF
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.ElseIf(v.DataTable.dtB(v.Local.i).LMO!FieldValTrim,=,"M")
		F.Intrinsic.Control.If(v.DataTable.dtB(v.Local.i).ALT_DESCRIPTION!FieldvalTrim,=,"WHOLE")	
			f.Intrinsic.Math.Div(1,v.DataTable.dtB(v.Local.i).MATERIAL_PPWU!FIELDVALFLOAT,v.Local.ftempret)
			f.Intrinsic.Math.Round(v.Local.ftempret,0,v.Local.ftempret)
			f.Data.DataTable.SetValue("dtB",v.Local.i,"MATERIAL_USED",v.Local.ftempret)
		f.Intrinsic.Control.Else
			f.Data.DataTable.SetValue("dtB",v.Local.i,"MATERIAL_USED",0)
		F.Intrinsic.Control.endif
		
		f.Intrinsic.Math.Ceiling(v.DataTable.dtB(v.Local.i).Material_units_ORD!FIELDVAL,v.Local.ftempret)
		f.Data.DataTable.SetValue("dtB",v.Local.i,"MATERIAL_UNITS_ORD",v.Local.ftempret)
		
		f.Intrinsic.Control.If(v.DataTable.dtB(v.Local.i).MATERIAL_UNITS_ORD!FIELDVAL,<>,0)
			f.Intrinsic.Math.Div(v.DataTable.dtB(v.Local.i).MATERIAL_COST!Fieldval,v.DataTable.dtB(v.Local.i).MATERIAL_UNITS_ORD!Fieldval,v.Local.ftempret)
			f.Data.DataTable.SetValue("dtB",v.Local.i,"MATERIAL_COST_UNIT",v.Local.ftempret)
		F.Intrinsic.Control.Else
			f.Data.DataTable.SetValue("dtB",v.Local.i,"MATERIAL_COST_UNIT",0)
		F.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.DataTable.dtB(v.Local.i).material_used!fieldval,<>,0)
			f.Data.DataTable.SetValue("dtB",v.Local.i,"PPH_RUN",v.DataTable.dtB(v.Local.i).MATERIAL_USED!Fieldval)
		f.Intrinsic.Control.Else
			f.Data.DataTable.SetValue("dtB",v.Local.i,"PPH_RUN",0)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	v.Local.sExpression.Set("SUM(MATERIAL_PRICE+LABOUR_SETUP_PRICE+LABOUR_RUN_PRICE+OUTSIDE_PRICE)*[v.Local.fOMarkup]")
f.Intrinsic.Control.Next(v.Local.i)

f.Intrinsic.UI.CloseWaitDialog

f.Data.DataTable.AddColumn("dtB","rtMATERIAL_PRICE","Float")
f.Data.DataTable.AddColumn("dtB","rtLABOUR_SETUP_PRICE","Float")
f.Data.DataTable.AddColumn("dtB","rtLABOUR_RUN_PRICE","Float")
f.Data.DataTable.AddColumn("dtB","rtOUTSIDE_PRICE","Float")

f.Data.DataTable.runningTotal("Dtb","MATERIAL_PRICE",0,"+","rtMATERIAL_PRICE")
f.Data.DataTable.runningTotal("Dtb","LABOUR_SETUP_PRICE",0,"+","rtLABOUR_SETUP_PRICE")
f.Data.DataTable.runningTotal("Dtb","LABOUR_RUN_PRICE",0,"+","rtLABOUR_RUN_PRICE")
f.Data.DataTable.runningTotal("Dtb","OUTSIDE_PRICE",0,"+","rtOUTSIDE_PRICE")

v.Local.lLastRow.Declare(long)
v.Local.lLastRow.Set(v.DataTable.dtB.RowCount--)
v.Local.fUnitPrice.Declare(float)
f.Intrinsic.Math.Add(v.DataTable.dtB(v.Local.lLastRow).rtMATERIAL_PRICE!Fieldval,v.DataTable.dtB(v.Local.lLastRow).rtLABOUR_SETUP_PRICE!Fieldval,v.local.fUnitPrice)
f.Intrinsic.Math.Add(v.Local.fUnitPrice,v.DataTable.dtB(v.Local.lLastRow).rtLABOUR_RUN_PRICE!Fieldval,v.local.fUnitPrice)
f.Intrinsic.Math.Add(v.Local.fUnitPrice,v.DataTable.dtB(v.Local.lLastRow).rtOUTSIDE_PRICE!Fieldval,v.local.fUnitPrice)

'Calculate Markup Percentage
f.intrinsic.control.if(v.local.fOMarkup,=,0)
f.intrinsic.control.else
f.intrinsic.math.div(v.local.fOMarkup,100,v.local.fOMarkup)
	f.intrinsic.control.endif
f.intrinsic.math.add(v.local.fOMarkup,1,v.local.fOMarkup)
	
f.Intrinsic.Math.Round(v.Local.fUnitPrice,2,v.Local.fUnitPrice)
f.Data.DataTable.RemoveColumn("dtB","UNIT_PRICE")
f.Data.DataTable.AddColumn("dtB","UNIT_PRICE","Float",v.Local.fUnitPrice)
f.Intrinsic.Control.catch
	f.Intrinsic.UI.msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.sub.initCalc.End

Program.Sub.QuickPrice.Start
f.Intrinsic.Control.Try
v.Local..BulkDeclareString(sLocation,sCustomer,sCustRevPart,sFinish,sMaterialPart,sAssemType,sQuoteNo,sAltDesc,sParent,scc,scustparthead,scustpartrev,sCustomerMast,sUploadType,sBuildData,sCustPO,sUM,sRouterFSQ,sDesc,sProdLineCD,sUser1,stemp,sUser3,sCustDesc,sSplitDesc,sCustTag,sString,sCustTagSplit,sTax,sSurveyID,sRtrFlag,sSQL,sRet,sQty)
v.Local..BulkDeclareFloat(fOutsideCost,fPowderMinCalc,fMarkup,fMatTotal,fWholeCalc,fRoundCheck,fTotalMatUse,fMinUseCalc,fMaterialUnitsOrder,fOutsideSell,fPowderSell,fMatUsed,fMinUse,fPPWU,fMMarkup,fOMarkup,ftempret,fRunQty,ftempqty,ftempval,ftempcost,norderqty,fPrice,fCost,fExtension,fExtTotal,nSplitCount,fLength,fWidth,fMatSell,fMatSEtupSell,fMatRunSell,fLabourRunSell,fLabourSetSell,fLabourTotal,fLabourSetSell1,fLabourRunSell1,fMaterialSell1,fOutsideSell1)
v.Local..BulkDeclareLong(nItemCtr,nSplitchar,nCount,nCount2,nSplitDesc,i,j)
v.Local.dDateNow.Declare(Date)
v.Local.dDateNow.Set(v.Ambient.Now)
v.Local.sAssemType.Set(v.DataTable.dtB(0).ASSEMBLY_TYPE!FIELDVAL)
v.Local.sparent.Set(v.DataTable.dtB(0).PARENT!FIELDVALTRIM)
v.Local.sCustomerMast.Set(v.DataTable.dtB(0).CUSTOMER!FIELDVAL)
v.Local.scustparthead.Set(v.Datatable.dtB(0).customer_part!FIELDVAL)
v.Local.scustpartrev.Set(v.DataTable.dtB(0).cust_rev!FIELDVAL)
v.local.sRouterFSQ.Set(v.DataTable.dtB(0).FG_PART!FIELDVAL)
v.Local.sUM.Set(v.DataTable.dtB(0).FG_UM!FIELDVAL)
v.Local.sDesc.Set(v.DataTable.dtB(0).FG_DESCRIPTION!FIELDVAL)
v.Local.sProdLineCD.Set(v.DataTable.dtB(0).FG_PL!FIELDVAL)
v.Local.sqty.set(v.DataTable.dtB(0).OVERALL_QTY!FIELDVAL)
v.Local.fOMarkup.Set(v.DataTable.dtb(0).OVERALL_MARKUP!FIELDVALFLOAT)
'Calculate Markup Percentage
f.intrinsic.control.if(v.local.fOMarkup,=,0)
f.intrinsic.control.else
	f.intrinsic.math.div(v.local.fOMarkup,100,v.local.fOMarkup)
f.intrinsic.control.endif
f.intrinsic.math.add(v.local.fOMarkup,1,v.local.fOMarkup)
f.Intrinsic.String.GSSPartString(v.Local.scustparthead,v.Local.scustpartrev,v.Local.sCustRevPart)

F.Intrinsic.Control.If(v.DataTable.dtBBB.Exists)
	f.Data.DataTable.Close("dtBBB")
f.Intrinsic.Control.endif
f.Data.DataTable.Clone("dtB","dtBBB",true)

'Rearrange column for 1st table
f.Data.DataTable.RemoveColumn("dtB","QUANTITY")
f.Data.DataTable.AddColumn("dtB","QUANTITY","Float",0)
f.Data.DataTable.RemoveColumn("dtB","UNIT_PRICE")
f.Data.DataTable.AddColumn("dtB","UNIT_PRICE","Float",0)
		
'Rearrange column for 3rd table
f.Data.DataTable.RemoveColumn("dtBBB","QUANTITY")
f.Data.DataTable.AddColumn("dtBBB","QUANTITY","Float",0)
f.Data.DataTable.RemoveColumn("dtBBB","UNIT_PRICE")
f.Data.DataTable.AddColumn("dtBBB","UNIT_PRICE","Float",0)
	
f.Intrinsic.String.SplitCSV(v.Local.sqty,v.Local.sqty)
f.Intrinsic.Control.For(v.Local.i,0,v.Local.sqty.UBound,1)
	v.local.norderqty.Set(v.Local.sqty(v.Local.i))
	'Close tables if it exists
	f.Intrinsic.Control.If(v.DataTable.dtBB.Exists)
		f.Data.DataTable.Close("dtBB")
	f.Intrinsic.Control.EndIf
	
	'Create a copy of the table
	f.Data.DataTable.Clone("dtB","dtBB",true)
	
	'Rearrange column for 2nd table
	f.Data.DataTable.RemoveColumn("dtBB","QUANTITY")
	f.Data.DataTable.AddColumn("dtBB","QUANTITY","Float",0)
	f.Data.DataTable.RemoveColumn("dtBB","UNIT_PRICE")
	f.Data.DataTable.AddColumn("dtBB","UNIT_PRICE","Float",0)

	f.Data.DataTable.Merge("dtB","dtBB",true,1)	
	f.Data.DataTable.RemoveColumn("dtBB","QUANTITY")
	f.Data.DataTable.AddColumn("dtBB","QUANTITY","Float",v.local.norderqty)
	'Make sure quantity is not zero
	F.Intrinsic.Control.If(v.local.norderqty,=,0)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.For(v.Local.j,0,V.DataTable.dtBB.RowCount--,1)
		'F.Intrinsic.DEBUG.ShowCallerInfo
		f.Intrinsic.Control.If(v.DataTable.dtbb(v.Local.j).LMO!FIELDVAL,=,"M")
			v.Local.SMaterialPart.Set(v.DataTable.dtbb(v.Local.j).MATERIAL_PART!FIELDVAL)
			F.Intrinsic.Control.If(v.Local.SMaterialPart.Trim,<>,"NOMATERIAL")
				F.Intrinsic.Control.If(v.DataTable.dtbb(v.Local.j).MATERIAL_PPWU!FIELDVAL,=,0)
					'Setup
					F.Intrinsic.String.Trim(v.Local.SMaterialPart,v.Local.SMaterialPart)
					F.Intrinsic.Control.If(V.Local.SMaterialPart.UCase,=,"PACKING")
					F.Intrinsic.Control.Else
						'Run
						f.Intrinsic.Math.Mult(v.local.norderqty,v.DataTable.dtbb(v.Local.j).MATERIAL_COST!FIELDVAL,v.Local.fMatSell)
						f.Intrinsic.Math.Mult(v.Local.fMatSell,v.DataTable.dtbb(v.Local.j).MATERIAL_MARKUP!FIELDVAL,v.Local.fMatSell)
						
						'Total
						f.Intrinsic.Math.Add(v.Local.fMatSell,v.Local.fMatSEtupSell,v.Local.fMattotal)
						f.Data.DataTable.SetValue("dtBB",v.Local.j,"MATERIAL_PRICE",v.Local.fmattotal)
					F.Intrinsic.CONTROL.EndIf
				f.Intrinsic.Control.Else
					v.Local.sAltDesc.set(v.DataTable.dtbb(v.Local.j).ALT_DESCRIPTION!FIELDVALTRIM)
					F.Intrinsic.String.UCase(V.Local.sAltDesc,V.Local.sAltDesc)
					F.Intrinsic.Control.If(V.Local.sAltDesc.tRIM,=,"WHOLE","or",v.Local.saltdesc.Trim,=,"")
						F.Intrinsic.Control.DoUntil(v.Local.fWholeCalc,>=,v.local.norderqty)
							f.Intrinsic.Math.Add(v.Local.fWholeCalc,v.DataTable.dtbb(v.Local.j).MATERIAL_PPWU!FIELDVAL,v.Local.fWholeCalc)
							F.Intrinsic.Math.Add(V.Local.fMatUsed,1,v.Local.fMatUsed)
						f.Intrinsic.Control.Loop
						
						f.Data.DataTable.SetValue("dtBB",v.Local.j,"MATERIAL_UNITS_ORD",v.Local.fMatUsed)
						f.Data.DataTable.SetValue("dtBB",v.Local.j,"MATERIAL_USED",v.Local.fMatUsed)
						
						f.Intrinsic.Math.Mult(v.Local.fMatUsed,V.DataTable.DTBB(v.local.j).MATERIAL_COST_UNIT!FIELDVAL,V.Local.fWholeCalc)
						f.Data.DataTable.SetValue("dtBB",v.Local.j,"MATERIAL_COST",v.Local.fWholeCalc)
						
						f.Intrinsic.Math.Mult(v.Local.fWholeCalc,V.DataTable.DTBB(v.local.j).MATERIAL_MARKUP!FIELDVAL,v.Local.fMatSell)
						f.Data.DataTable.SetValue("dtBB",v.Local.j,"MATERIAL_PRICE",v.Local.fMatSell)
						
						v.Local.fWholeCalc.Set(0)
						v.Local.fmatsell.Set(0)	
						v.Local.fMatUsed.Set(0)
					F.Intrinsic.Control.Else
						v.Local.SMaterialPart.Set(V.DataTable.DTBB(v.local.j).MATERIAL_PART!FIELDVAL)
						'Calculate Parts per whole unit
						f.Intrinsic.Math.Div(v.local.norderqty,V.DataTable.DTBB(v.local.j).MATERIAL_PPWU!FIELDVAL,v.local.fPPWU)
						
						'Calculate minimum usage
						f.intrinsic.math.evaluate(v.local.sAltDesc,v.local.fMinUse)
						
						'Trying to find material used
						'If Minimum usage is greater than parts per whole unit, use that, else qty/ppwu
						f.Intrinsic.Control.If(v.Local.fPPWU,<,v.Local.fMinUse)
							v.Local.fMatUsed.Set(v.Local.fMinUse)
						f.Intrinsic.Control.Else
							F.Intrinsic.Control.If(V.DataTable.DTBB(v.local.j).MATERIAL_PPWU!FIELDVAL,>,v.local.norderqty)
								F.Intrinsic.Math.Div(1,V.DataTable.DTBB(v.local.j).MATERIAL_PPWU!FIELDVAL,V.Local.fPPWU)
								F.Intrinsic.Math.Mult(v.local.norderqty,V.Local.fPPWU,V.Local.fPPWU)
								v.Local.fMatUsed.Set(v.Local.fPPWU)
							F.Intrinsic.Control.Else
								f.Intrinsic.Math.Div(v.local.norderqty,V.DataTable.DTBB(v.local.j).MATERIAL_PPWU!FIELDVAL,v.Local.fMinUseCalc)
								f.Intrinsic.Math.Round(v.Local.fMinUse,6,v.Local.fMinUse)
								f.Intrinsic.Control.DoUntil(v.Local.fMinUseCalc,<=,0)
									f.Intrinsic.Control.If(v.Local.fMinUseCalc,>,.0001)
										f.Intrinsic.Math.Sub(v.Local.fMinUseCalc,v.Local.fMinUse,v.Local.fMinUseCalc)
										f.Intrinsic.Math.Round(v.Local.fMinUseCalc,5,v.Local.fMinUseCalc)
										f.Intrinsic.Math.Add(v.Local.fTotalMatUse,v.Local.fMinUse,v.Local.fTotalMatUse)
									f.Intrinsic.Control.Else
										f.Intrinsic.Control.ExitDo
									f.Intrinsic.Control.EndIf
								f.Intrinsic.Control.Loop
								v.Local.fMatUsed.Set(v.Local.fTotalMatUse)
							F.Intrinsic.Control.EndIf
						f.Intrinsic.Control.EndIf
						f.Data.DataTable.SetValue("dtBB",v.Local.j,"MATERIAL_USED",v.Local.fMatUsed)
						
						v.Local.fTotalMatUse.set(0)
						'Determine how many units to purchase
						f.Intrinsic.Control.If(v.Local.fPPWU,<>,0)
						f.Intrinsic.Control.AndIf(v.local.norderqty,<>,0)
							F.Intrinsic.Math.Div(v.local.norderqty,V.DataTable.DTBB(v.local.j).MATERIAL_PPWU!FIELDVAL,v.Local.fMaterialUnitsOrder)
							f.Intrinsic.Math.Ceiling(v.Local.fMaterialUnitsOrder,v.Local.fMaterialUnitsOrder)
						f.Intrinsic.Control.EndIf
						'f.Intrinsic.Math.Mult(v.Local.fMaterialUnitsOrder,v.local.norderqty,v.Local.fMaterialUnitsOrder)
						f.Data.DataTable.SetValue("dtBB",v.Local.j,"MATERIAL_UNITS_ORD",v.Local.fMaterialUnitsOrder)
						
						'Determine Cost
						F.Intrinsic.Math.Mult(v.Local.fMatUsed,V.DataTable.DTBB(v.local.j).MATERIAL_COST!FIELDVAL,v.Local.ftempcost)
						f.Data.DataTable.SetValue("dtBB",v.Local.j,"MATERIAL_COST",v.Local.ftempcost)
						
						'Apply Markup and set price
						v.Local.fMMarkup.set(V.DataTable.DTBB(v.local.j).MATERIAL_MARKUP!FIELDVAL)
						f.Intrinsic.Math.Mult(v.Local.ftempcost,v.Local.fMMarkup,v.Local.fMatSell)
						f.Data.DataTable.SetValue("dtBB",v.Local.j,"MATERIAL_PRICE",v.Local.fMatSell)
						
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.ElseIF(V.DataTable.DTBB(v.local.j).LMO!FIELDVAL,=,"L")
			f.Intrinsic.Math.Mult(V.DataTable.DTBB(v.local.j).LABOUR_RUN_PRICE!FIELDVAL,v.local.norderqty,V.Local.fLabourRunSell)
			f.Data.DataTable.SetValue("dtBB",v.Local.j,"labour_run_price",v.Local.fLabourRunSell)
		f.Intrinsic.Control.ElseIf(V.DataTable.DTBB(v.local.j).LMO!FIELDVAL,=,"P")
			f.Intrinsic.Math.Mult(V.DataTable.DTBB(v.local.j).ALT_DESCRIPTION!FIELDVAL,V.DataTable.DTBB(v.local.j).OUTSIDE_MARKED_UP!FIELDVAL,v.Local.fPowderMinCalc)
			V.Local.sFinish.Set("Powdercoat")
			f.Intrinsic.Math.Mult(V.DataTable.DTBB(v.local.j).OUTSIDE_PRICE!FIELDVAL,v.local.norderqty,V.Local.fPowderSell)
			f.Intrinsic.Control.If(v.Local.fPowderSell,<,V.Local.fPowderMinCalc)
				v.Local.fPowderSell.Set(v.Local.fPowderMinCalc)
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.SetValue("dtBB",v.Local.j,"OUTSIDE_PRICE",v.Local.fPowderSell)
			V.Local.fPowderSell.Set(0)
			f.Data.DataTable.SetValue("dtBB",v.Local.j,"MATERIAL_UNITS_ORD",0)
		f.Intrinsic.Control.ElseIf(V.DataTable.DTBB(v.local.j).LMO!FIELDVAL,=,"O")
			V.Local.sFinish.Set(V.DataTable.DTBB(v.local.j).STEP_DESC!FIELDVAL)
			v.Local.fMMarkup.Set(V.DataTable.DTBB(v.local.j).OUTSIDE_MARKED_UP!FIELDVAL)
			f.Intrinsic.Math.Mult(V.DataTable.DTBB(v.local.j).OUTSIDE_PRICE!FIELDVAL,v.local.norderqty,V.Local.fOutsideSell)
			f.Intrinsic.Math.Mult(v.DataTable.dtbb(v.Local.j).OUTSIDE_COST!FIELDVAL,v.Local.norderqty,v.Local.fOutsideCost)
			f.Intrinsic.Control.If(v.Local.fOutsideCost,<,v.DataTable.dtbb(v.Local.j).ALT_DESCRIPTION!FIELDVAL)
				v.Local.fOutsideSell.Set(v.DataTable.dtbb(v.Local.j).ALT_DESCRIPTION!FIELDVAL)
				f.Intrinsic.Math.Mult(v.Local.fOutsideSell,v.Local.fMMarkup,v.Local.fOutsideSell)
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.SetValue("dtBB",v.Local.j,"STEP_DESC",V.DataTable.DTBB(v.Local.j).MATERIAL_PART!FIELDVAL)
			f.Data.DataTable.SetValue("dtBB",v.Local.j,"OUTSIDE_PRICE",v.Local.fOutsideSell)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.j)
	
	f.Data.DataTable.runningTotal("Dtbb","MATERIAL_PRICE",0,"+","rtMATERIAL_PRICE")
	f.Data.DataTable.runningTotal("Dtbb","LABOUR_SETUP_PRICE",0,"+","rtLABOUR_SETUP_PRICE")
	f.Data.DataTable.runningTotal("Dtbb","LABOUR_RUN_PRICE",0,"+","rtLABOUR_RUN_PRICE")
	f.Data.DataTable.runningTotal("Dtbb","OUTSIDE_PRICE",0,"+","rtOUTSIDE_PRICE")
	
	v.Local.lLastRow.Declare(long)
	v.Local.lLastRow.Set(v.DataTable.dtBb.RowCount--)
	v.Local.fUnitPrice.Declare(float)
	f.Intrinsic.Math.Add(v.DataTable.dtBb(v.Local.lLastRow).rtMATERIAL_PRICE!Fieldval,v.DataTable.dtBb(v.Local.lLastRow).rtLABOUR_SETUP_PRICE!Fieldval,v.local.fUnitPrice)
	f.Intrinsic.Math.Add(v.Local.fUnitPrice,v.DataTable.dtBb(v.Local.lLastRow).rtLABOUR_RUN_PRICE!Fieldval,v.local.fUnitPrice)
	f.Intrinsic.Math.Add(v.Local.fUnitPrice,v.DataTable.dtBb(v.Local.lLastRow).rtOUTSIDE_PRICE!Fieldval,v.local.fUnitPrice)
	
	f.Intrinsic.Math.Mult(v.Local.fUnitPrice,v.Local.fOMarkup,v.Local.fUnitPrice)
	F.Intrinsic.Control.If(V.Local.fUnitPrice,<>,0)
		F.Intrinsic.Math.Div(V.Local.fUnitPrice,v.local.norderqty,V.Local.fUnitPrice)
	F.Intrinsic.Control.EndIf
		
	f.Data.DataTable.RemoveColumn("dtBb","UNIT_PRICE")
	
	f.Data.DataTable.AddColumn("dtBb","UNIT_PRICE","Float",v.Local.fUnitPrice)
	f.Data.DataTable.Merge("dtBB","dtBBB",true,1)
f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.QuickPrice.End

Program.Sub.reportCalc.Start
f.Intrinsic.Control.Try
	v.Local.sShowForm.Declare(string)
	F.Intrinsic.Control.If(V.Args.SfLAG,<>,V.Ambient.Null)
		v.Local.sShowForm.Set(v.args.sFlag)
	F.Intrinsic.Control.EndIf
	v.local.bExit.declare(boolean)
	v.local.bExit.set(false)
	v.local.somark.declare(string)
	v.local.soqty.declare(string)
	
	v.Local.stempname.Declare(string)
	v.Local.stempdict.Declare(string)
	v.Local.stempclmn.Declare(string)
	v.Local.stemplab.declare(string)
	v.Local.stempout.Declare(string)
	v.Local.stempcom.Declare(string)
	v.Local.i.Declare(long,0)
	V.Local.j.Declare(long,0)
	v.Local.w.Declare(long,0)
	v.Local.lmatcount.Declare(long,1)
	v.Local.lLabCount.Declare(long)
	v.Local.fpq.Declare(float,0)
	v.Local.ftempOutMark.Declare(float)
	v.Local.smat.Declare(string)
	v.Local.suser4.Declare(string)
	v.Local.sCNCtag.Declare(string)
	v.Local.sFABtag.Declare(string)
	v.Local.sARFtag.Declare(string)
	v.Local.sLAStag.Declare(string)
	V.Local.sCADTag.Declare(string)
	V.Local.sTagNte.Declare(string)
	v.Local.sUser4t.Declare(string)
	V.Local.sRCheck.Declare(string)
	
	v.Local.fMatTotal.Declare(float)
	V.Local.fComTotal.Declare(float)
	v.Local.fLabTotal.Declare(float)
	v.Local.fOutTotal.Declare(Float)
	v.Local.fSubTotal.Declare(float)
	v.Local.fUnitPriceRd.Declare(float)
	v.Local.fTotalPrice.Declare(Float)
	v.Local.ftempmat.Declare(float)
	v.Local.ftempout.Declare(Float)
	v.Local.ftemplab.Declare(Float)
	v.Local.fPack.Declare(Float)
	v.Local.sMyQty.Declare(string)
	v.Local.sPacking.Declare(string)
	v.Local.sColor.Declare(string)
	v.Local.bret.Declare(boolean)

	F.Data.Dictionary.Create("dict")
	F.Data.Dictionary.Create("Clmn")
	f.Data.Dictionary.Create("Lab")
	f.Data.Dictionary.Create("Out")
	f.Data.Dictionary.Create("Com")
	f.Data.Dictionary.CreateFromSql("Cfg","conx","SELECT DISTINCT rtrim(WORKCENTRE) as 'WORKCENTRE', rtrim(USER_4) as 'USER_4' FROM GAB_4486_QRE_CONFIG")
	f.Data.Dictionary.SetDefaultReturn("Cfg","")
	
	'Create a separate datatable for price break down, start with Pricebreak, part, unit price
	f.Intrinsic.Control.If(v.DataTable.dtPB.Exists,=,true)
		f.Data.DataTable.Close("dtPB")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("dtPB",true)
	f.Data.DataTable.AddColumn("dtPB","PriceBreak","Float")
	f.Data.DataTable.AddColumn("dtPB","Part","String")
	f.Data.DataTable.AddColumn("dtPB","Rev","String")
	f.Data.DataTable.AddColumn("dtPB","UnitPrice","Float")
	f.Data.DataTable.AddColumn("dtPB","rMatTotal","Float")
	f.Data.DataTable.AddColumn("dtPB","rComTotal","Float")
	f.Data.DataTable.AddColumn("dtPB","rLabTotal","Float")
	f.Data.DataTable.AddColumn("dtPB","rOuttotal","Float")
	f.Data.DataTable.AddColumn("dtPB","rFinish","String")
	f.Data.DataTable.AddColumn("dtPB","rCustomer","String")
	f.Data.DataTable.AddColumn("dtPB","rDescription","String")
	f.Data.DataTable.AddColumn("dtPB","rPL","String")
	f.Data.DataTable.AddColumn("dtPB","rUM","String")
	f.Data.DataTable.AddColumn("dtPB","rUser4","String")
	f.Data.DataView.Create("dtBBB","dvBBB")
	f.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtQTY","Quantity*!*Unit_Price*!*CUSTOMER_PART*!*CUSt_REV*!*FG_PL*!*FG_UM*!*FG_DESCRIPTION*!*CUSTOMER*!*PARENT")
	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtQTY.RowCount--,1)
		'If no customer, then it's not the header record
		F.Intrinsic.Control.If(v.DataTable.dtqty(v.Local.i).PARENT!FIELDVALTRIM,=,"")
			f.Intrinsic.Math.Round(v.DataTable.dtQTY(v.Local.i).Unit_Price!FIELDVAL,2,v.Local.fUnitPriceRd)
			f.Data.DataTable.AddRow("dtPB","PriceBreak",v.DataTable.dtQTY(v.Local.i).Quantity!FIELDVAL,"Part",v.DataTable.dtQTY(v.Local.i).CUSTOMER_PART!FIELDVAL,"rPL",v.DataTable.dtQTY(v.Local.i).FG_PL!FIELDVAL,"Rev",v.DataTable.dtQTY(v.Local.i).CUST_REV!FIELDVAL,"rUM",v.DataTable.dtQTY(v.Local.i).FG_UM!FIELDVAL,"rDescription",v.DataTable.dtQTY(v.Local.i).FG_DESCRIPTION!FIELDVAL,"rCustomer",v.DataTable.dtQTY(v.Local.i).CUSTOMER!FIELDVAL,"UnitPrice",v.Local.fUnitPriceRd)
			f.Data.Dictionary.AddItem("dict",v.DataTable.dtqty(v.Local.i).Quantity!Fieldval,v.Local.w)
			f.Intrinsic.Math.Add(v.Local.w,1,v.Local.w)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	
	'First is material
	'Add in the columns
	f.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtMat","FG_PART*!*Material_Part*!*Seq*!*LMO")
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtMat.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DataTable.dtmat(v.Local.i).Material_Part!FieldvalTrim,=,"")
			f.Data.DataTable.DeleteRow("dtMat",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtMat.RowCount--,0,-1)
		v.Local.sPacking.Set(v.DataTable.dtmat(v.Local.i).Material_Part!FieldvalTrim)
		f.Intrinsic.Control.If(v.Local.sPacking.UCase,=,"PACKING")
			f.Data.DataTable.DeleteRow("dtMat",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtMat.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DataTable.dtmat(v.Local.i).SEQ!FieldValTrim,<>,"MAT")
			f.Data.DataTable.DeleteRow("dtMat",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtMat.RowCount--,1)
		f.Intrinsic.string.Build("MATERIAL_PART{0}",v.Local.i,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"String")
		f.Intrinsic.string.Build("MATERIAL_PPWU{0}",v.Local.i,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"float")
		f.Intrinsic.string.Build("MATERIAL_UNITS_ORD{0}",v.Local.i,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"float")
		f.Intrinsic.string.Build("MATERIAL_USED{0}",v.Local.i,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"float")
		f.Intrinsic.string.Build("MATERIAL_COST_UNIT{0}",v.Local.i,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"float")
		f.Intrinsic.string.Build("MATERIAL_COST{0}",v.Local.i,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"float")
		f.Intrinsic.string.Build("MATERIAL_PRICE{0}",v.Local.i,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"float")
		f.Data.Dictionary.AddItem("Clmn",V.Local.stempname,v.Local.i)
	f.Intrinsic.Control.Next(v.Local.i)
	'Update the materials rows, next step 
	f.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtMV","CUSTOMER_PART*!*CUST_REV*!*MATERIAL_PART*!*QUANTITY*!*MATERIAL_CODE*!*MATERIAL_PPWU*!*MATERIAL_UNITS_ORD*!*MATERIAL_USED*!*MATERIAL_COST_UNIT*!*MATERIAL_COST*!*MATERIAL_PRICE*!*SEQ*!*LMO")
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtMV.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DataTable.dtMV(v.Local.i).Material_Part!FieldvalTrim,=,"")
			f.Data.DataTable.DeleteRow("dtMV",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtMV.RowCount--,0,-1)
		v.Local.sPacking.Set(v.DataTable.dtMV(v.Local.i).Material_Part!FieldvalTrim)
		f.Intrinsic.Control.If(v.Local.sPacking.UCase,=,"PACKING")
			f.Data.DataTable.DeleteRow("dtMV",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtMV.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DataTable.dtMV(v.Local.i).SEQ!FieldValTrim,<>,"MAT")
			f.Data.DataTable.DeleteRow("dtMV",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	'F.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtMV.RowCount--,1)
		v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtmv(v.Local.i).Quantity!FieldVal])
		f.Intrinsic.Control.If(v.Local.sMyQty,<>,v.Local.stempdict)
			v.Local.fMatTotal.Set(0)
			v.Local.w.Set(0)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.string.Build("MATERIAL_PART{0}",v.Local.w,v.Local.stempname)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtMV(v.Local.i).MATERIAL_PART!fieldval)
		f.Intrinsic.string.Build("MATERIAL_PPWU{0}",v.Local.w,v.Local.stempname)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtMV(v.Local.i).MATERIAL_PPWU!fieldval)
		f.Intrinsic.string.Build("MATERIAL_UNITS_ORD{0}",v.Local.w,v.Local.stempname)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtMV(v.Local.i).MATERIAL_UNITS_ORD!fieldval)
		f.Intrinsic.string.Build("MATERIAL_USED{0}",v.Local.w,v.Local.stempname)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtMV(v.Local.i).MATERIAL_USED!fieldval)
		f.Intrinsic.string.Build("MATERIAL_COST_UNIT{0}",v.Local.w,v.Local.stempname)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtMV(v.Local.i).MATERIAL_COST_UNIT!fieldval)
		f.Intrinsic.string.Build("MATERIAL_COST{0}",v.Local.w,v.Local.stempname)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtMV(v.Local.i).MATERIAL_COST!fieldval)
		f.Intrinsic.string.Build("MATERIAL_PRICE{0}",v.Local.w,v.Local.stempname)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtMV(v.Local.i).MATERIAL_PRICE!fieldval)
		'Mat Subtotal
		f.Intrinsic.Math.Round(v.DataTable.dtMV(v.Local.i).MATERIAL_PRICE!fieldval,2,v.Local.ftempmat)
		f.Intrinsic.Math.Add(v.Local.fMatTotal,v.Local.ftempmat,v.local.fMatTotal)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rMatTotal",v.Local.fMatTotal)
		v.Local.sMyQty.Set(v.Local.stempdict)
		f.Intrinsic.Math.Add(v.Local.w,1,v.Local.w)
	f.Intrinsic.Control.Next(v.Local.i)
	v.Local.sMyQty.Set("")
	
	'Next is components
	'Add in the columns
	f.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtCOM","FG_PART*!*Material_Part*!*Seq*!*LMO")
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtCOM.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DataTable.dtCOM(v.Local.i).Material_Part!FieldvalTrim,=,"")
			f.Data.DataTable.DeleteRow("dtCOM",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtCOM.RowCount--,0,-1)
		v.Local.sPacking.Set(v.DataTable.dtCOM(v.Local.i).Material_Part!FieldvalTrim)
		f.Intrinsic.Control.If(v.Local.sPacking.UCase,=,"PACKING")
			f.Data.DataTable.DeleteRow("dtCOM",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtCOM.RowCount--,1)
		f.in.control.if(v.DataTable.dtCom(v.Local.i).SEQ!FieldValTrim,<>,"MAT")
			f.Data.DataTable.AddColumn("dtPB","Component_Cost","float")
			f.Data.DataTable.AddColumn("dtPB","Component_Price","float")
			f.Intrinsic.Control.ExitFor(v.Local.i)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	'Update the component rows, next step 
	f.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtCV","FG_PART*!*MATERIAL_PART*!*QUANTITY*!*MATERIAL_CODE*!*MATERIAL_PPWU*!*MATERIAL_UNITS_ORD*!*MATERIAL_USED*!*MATERIAL_COST_UNIT*!*MATERIAL_COST*!*MATERIAL_PRICE*!*SEQ*!*LMO")
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtCV.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DataTable.dtCV(v.Local.i).Material_Part!FieldvalTrim,=,"")
			f.Data.DataTable.DeleteRow("dtCV",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtCV.RowCount--,0,-1)
		v.Local.sPacking.Set(v.DataTable.dtCV(v.Local.i).Material_Part!FieldvalTrim)
		f.Intrinsic.Control.If(v.Local.sPacking.UCase,=,"PACKING")
			f.Data.DataTable.DeleteRow("dtCV",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtCV.RowCount--,1)
		f.Intrinsic.Control.If(v.DataTable.dtCV(v.Local.i).LMO!FIELDVAL,=,"M")
			f.Intrinsic.Control.If(v.DataTable.dtCV(v.Local.i).SEQ!FIELDVALTRIM,<>,"MAT")
				v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtCV(v.Local.i).Quantity!FieldVal])
				f.Intrinsic.Math.Round(v.DataTable.dtCV(v.Local.i).MATERIAL_PRICE!fieldval,2,v.Local.ftempmat)
				f.Intrinsic.Math.Add(v.Local.fComTotal,v.Local.ftempmat,v.local.fComTotal)
				f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"Component_Price",v.Local.fComTotal)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	v.Local.sMyQty.Set("")
	
	'Next is labour
	'add the rows
	f.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtLab","QUANTITY*!*LABOUR_WC*!*LABOUR_TIME_SPENT_S*!*LABOUR_TIME_SPENT_R*!*LABOUR_SETUP_PRICE*!*LABOUR_RUN_PRICE*!*LABOUR_RUN_TIME*!*LABOUR_SETUP_TIME*!*LABOUR_UNIT")
	f.Data.DataTable.AddColumn("dtLab","USER_4","String")
	f.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtLV","LABOUR_WC")
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtLV.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DataTable.dtLV(v.Local.i).LABOUR_WC!FieldvalTrim,=,"")
			f.Data.DataTable.DeleteRow("dtLV",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtLab.RowCount--,0,-1)
		f.Intrinsic.Control.If(v.DataTable.dtLab(v.Local.i).LABOUR_WC!FieldvalTrim,=,"")
			f.Data.DataTable.DeleteRow("dtLab",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtLV.RowCount--,1)
		f.Intrinsic.string.Build("{0}_RunTime_{1}",v.DataTable.dtLV(v.Local.i).LABOUR_WC!FIELDVAL,v.Local.i,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"String")
		f.Intrinsic.string.Build("{0}_Setup_{1}",v.DataTable.dtLV(v.Local.i).LABOUR_WC!FIELDVAL,v.Local.i,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"float")
		f.Intrinsic.string.Build("{0}_Price_{1}",v.DataTable.dtLV(v.Local.i).LABOUR_WC!FIELDVAL,v.Local.i,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"float")
		f.Data.Dictionary.AddItem("Lab",v.DataTable.dtLV(v.Local.i).LABOUR_WC!Fieldval,v.Local.i)
	f.Intrinsic.Control.Next(v.Local.i)
	'Update the Labour values	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtLab.RowCount--,1)
		'Run Price
		V.Local.stemplab.Set(v.dictionary.lab![v.DataTable.dtLab(v.Local.i).LABOUR_WC!FieldVal])
		f.Intrinsic.string.Build("{0}_Price_{1}",v.DataTable.dtLab(v.Local.i).LABOUR_WC!FIELDVAL,v.Local.stemplab,v.Local.stempname)
		v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtLab(v.Local.i).Quantity!FieldVal])
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtLab(v.Local.i).LABOUR_RUN_PRICE!fieldval)
		'Setup Price
		V.Local.stemplab.Set(v.dictionary.lab![v.DataTable.dtLab(v.Local.i).LABOUR_WC!FieldVal])
		f.Intrinsic.string.Build("{0}_Setup_{1}",v.DataTable.dtLab(v.Local.i).LABOUR_WC!FIELDVAL,v.Local.stemplab,v.Local.stempname)
		v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtLab(v.Local.i).Quantity!FieldVal])
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtLab(v.Local.i).LABOUR_SETUP_PRICE!fieldval)
		'Runtime Price
		V.Local.stemplab.Set(v.dictionary.lab![v.DataTable.dtLab(v.Local.i).LABOUR_WC!FieldVal])
		f.Intrinsic.string.Build("{0}_RunTime_{1}",v.DataTable.dtLab(v.Local.i).LABOUR_WC!FIELDVAL,v.Local.stemplab,v.Local.stempname)
		v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtLab(v.Local.i).Quantity!FieldVal])
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtLab(v.Local.i).LABOUR_RUN_TIME!fieldval)
		'Labour Subtotal
		f.Intrinsic.Control.If(v.Local.sMyQty,<>,v.Local.stempdict)
			v.Local.fLabTotal.Set(0)
		f.Intrinsic.Control.EndIf
		'f.Intrinsic.Debug.ShowCallerInfo
		f.Intrinsic.Math.Round(v.DataTable.dtLab(v.Local.i).LABOUR_RUN_PRICE!fieldval,2,v.Local.ftemplab)
		f.Intrinsic.Math.Add(v.Local.fLabTotal,v.Local.ftemplab,v.local.fLabTotal)
		f.Intrinsic.Math.Round(v.DataTable.dtLab(v.Local.i).LABOUR_SETUP_PRICE!fieldval,2,v.Local.ftemplab)
		f.Intrinsic.Math.Add(v.Local.fLabTotal,v.Local.ftemplab,v.local.fLabTotal)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rLabTotal",v.Local.fLabTotal)
		'Set User 4 field, make change to include CNC/FAB
		''''
		''''
		'START HERE PROGRAMMING UPDATES!!!!
		''''
		''''
		'Establish the fabrication tag
		f.Data.datatable.FillFromDictionary("dtLab","Cfg","LABOUR_WC","USER_4")
		f.Intrinsic.Control.If(v.DataTable.dtLab(v.Local.i).USER_4!FIELDVALTRIM,=,"FAB")
			v.Local.sFABtag.Set("Y")
		f.Intrinsic.Control.ElseIf(v.DataTable.dtLab(v.Local.i).USER_4!FIELDVALTRIM,=,"CNC")
			v.Local.sCNCtag.Set("Y")
		f.Intrinsic.Control.ElseIf(v.DataTable.dtlab(v.Local.i).USER_4!FIELDVALTRIM,=,"ARFI")
			v.Local.sARFtag.Set("Y")
		f.Intrinsic.Control.ElseIf(v.DataTable.dtlab(v.Local.i).USER_4!FIELDVALTRIM,=,"LAS")
			v.Local.sLAStag.Set("Y")
		f.Intrinsic.Control.ElseIf(v.DataTable.dtlab(v.Local.i).USER_4!FIELDVALTRIM,=,"CAD")
			v.Local.sCADTag.Set("Y")
		F.Intrinsic.Control.EndIf
	
		'Additional logic for ARFI + FAB + CNC + CAD
		
		
		f.Intrinsic.Control.If(v.Local.sCNCTag.Trim,=,"Y")
			f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rUser4","CNC")
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.sLAStag.Trim,=,"Y")
		f.Intrinsic.Control.AndIf(v.Local.sCNCtag.Trim,=,"")
		f.Intrinsic.Control.AndIf(v.Local.sARFtag.Trim,=,"")
		f.Intrinsic.Control.AndIf(v.Local.sFABTag.Trim,=,"")
			f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rUser4","LAS")
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.sFABtag.Trim,=,"Y")
			f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rUser4","FAB")
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.sARFTag.Trim,=,"Y")
		f.Intrinsic.Control.AndIf(v.Local.sCNCtag.Trim,=,"Y")
			f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rUser4","ARFI + CNC")
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.sARFTag.Trim,=,"Y")
		f.Intrinsic.Control.AndIf(v.Local.sFABtag.Trim,=,"Y")
			f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rUser4","ARFI + FAB")
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.sCNCtag.Trim,=,"Y")
		f.Intrinsic.Control.AndIf(v.Local.sFABtag.Trim,=,"Y")
			f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rUser4","CNC + FAB")
		f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.If(v.Local.sCNCtag.Trim,=,"Y")
		f.Intrinsic.Control.AndIf(v.Local.sFABtag.Trim,=,"Y")
		f.Intrinsic.Control.AndIf(v.Local.sARFtag.Trim,=,"Y")
			f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rUser4","ARFI + CNC + FAB")
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.sCADTag.Trim,=,"Y")
			f.Intrinsic.String.Concat(v.DataTable.dtpB(v.Local.stempdict).rUser4!fieldvaltrim," + CAD",v.Local.sTagNte)
			f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rUser4",v.Local.sTagNte)
		f.Intrinsic.Control.EndIf
		
		v.Local.sMyQty.Set(v.Local.stempdict)
	f.Intrinsic.Control.Next(v.Local.i)	
	V.Local.sMyQty.Set("")
	
	'Next is Outside Process/Finish
	'Add the columns
	f.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtOut","MATERIAL_PART*!*LMO*!*OUTSIDE_COST*!*OUTSIDE_MARKED_UP*!*OUTSIDE_PRICE*!*QUANTITY")
	f.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtOV","MATERIAL_PART*!*LMO")
	F.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtOQP","QUANTITY")
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtOV.RowCount--,0,-1)
		F.Intrinsic.Control.If(V.DataTable.dtOV(v.Local.i).LMO!FieldvalTrim,<>,"O")
		f.Intrinsic.Control.AndIf(V.DataTable.dtOut(v.Local.i).LMO!FieldvalTrim,<>,"P")
			f.Data.DataTable.DeleteRow("dtOV",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtOut.RowCount--,0,-1)
		F.Intrinsic.Control.If(V.DataTable.dtOut(v.Local.i).LMO!FieldvalTrim,<>,"O")
		f.Intrinsic.Control.AndIf(V.DataTable.dtOut(v.Local.i).LMO!FieldvalTrim,<>,"P")
			f.Data.DataTable.DeleteRow("dtOut",v.Local.i)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.i)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtOV.RowCount--,1)
		f.Intrinsic.string.Build("OutsideCost_{0}",v.DataTable.dtOV(v.Local.i).MATERIAL_PART!FIELDVAL,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"Float")
		f.Intrinsic.string.Build("OutsideMark_{0}",v.DataTable.dtOV(v.Local.i).MATERIAL_PART!FIELDVAL,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"float")
		f.Intrinsic.string.Build("OutsidePrice_{0}",v.DataTable.dtOV(v.Local.i).MATERIAL_PART!FIELDVAL,v.Local.stempname)
		f.Data.DataTable.AddColumn("dtPB",v.Local.stempname,"float")
	f.Intrinsic.Control.Next(v.Local.i)
	'Move dictionary down to here to capture quantity/price only for the outside finish/process
	F.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtOQP.RowCount--,1)
		f.Data.Dictionary.AddItem("Out",v.DataTable.dtOQP(v.Local.i).Quantity!Fieldval,v.Local.i)	
	f.Intrinsic.Control.Next(v.Local.i)
	'Update the values	
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtOut.RowCount--,1)
		'Outside Cost
		f.Intrinsic.string.Build("OutsideCost_{0}",v.DataTable.dtOut(v.Local.i).MATERIAL_PART!FIELDVAL,v.Local.stempname)
		v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtOut(v.Local.i).Quantity!FieldVal])
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtOut(v.Local.i).OUTSIDE_COST!fieldval)
		'Outside Markup Price
		f.Intrinsic.string.Build("OutsideMark_{0}",v.DataTable.dtOut(v.Local.i).MATERIAL_PART!FIELDVAL,v.Local.stempname)
		v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtOut(v.Local.i).Quantity!FieldVal])
		f.Intrinsic.Math.Mult(v.DataTable.dtOut(v.Local.i).OUTSIDE_MARKED_UP!fieldval,v.DataTable.dtOut(v.Local.i).OUTSIDE_COST!fieldval,v.Local.ftempOutMark)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.Local.ftempOutMark)
		'Outside Job Price
		f.Intrinsic.string.Build("OutsidePrice_{0}",v.DataTable.dtOut(v.Local.i).MATERIAL_PART!FIELDVAL,v.Local.stempname)
		v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtOut(v.Local.i).Quantity!FieldVal])
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,v.Local.stempname,v.DataTable.dtOut(v.Local.i).OUTSIDE_PRICE!fieldval)
		'Finish Set	
		v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtOut(v.Local.i).Quantity!FieldVal])
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rFinish",v.DataTable.dtOut(v.Local.i).MATERIAL_PART!fieldval)
		'Outside Subtotal
		f.Intrinsic.Control.If(v.Local.sMyQty,<>,v.Local.stempdict)
			v.Local.fOutTotal.Set(0)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Math.Round(v.DataTable.dtOut(v.Local.i).OUTSIDE_PRICE!fieldval,2,v.Local.ftempout)
		f.Intrinsic.Math.Add(v.Local.fOutTotal,v.Local.ftempout,v.local.fOutTotal)
		f.Data.DataTable.SetValue("dtPB",v.Local.stempdict,"rOutTotal",v.Local.fOutTotal)
		v.Local.sMyQty.Set(v.Local.stempdict)
	f.Intrinsic.Control.Next(v.Local.i)	
	
	'Next is the Totals Columns for formatting purposes
	f.Data.DataTable.AddColumn("dtPB","MaterialSubTotal","float")
	f.Data.DataTable.AddColumn("dtPB","LabourSubTotal","float")
	f.Data.DataTable.AddColumn("dtPB","FinishSubTotal","float")
	
	'Next is the packing!
	f.Data.DataView.ToDataTableDistinct("dtBBB","dvBBB","dtPak","MATERIAL_PART*!*MATERIAL_PRICE")	
	f.Intrinsic.Control.For(v.Local.i,v.DataTable.dtPak.RowCount--,0,-1)
		v.Local.sPacking.Set(v.DataTable.dtPak(v.Local.i).Material_Part!FieldvalTrim)
		f.Intrinsic.Control.If(v.Local.sPacking.UCase,<>,"PACKING")
			f.Data.DataTable.DeleteRow("dtPak",v.Local.i)
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)	
	f.Intrinsic.Control.If(v.DataTable.dtPak.RowCount--,=,-1)
		v.Local.fPack.Set(0)
	f.Intrinsic.Control.Else
		v.Local.fPack.Set(v.DataTable.dtPak(0).MATERIAL_PRICE!FIELDVAL)
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.AddColumn("dtPB","Packing","float",v.Local.fPack)
	
	'Next is the Subtotal, Markup, and Grand Total!
	f.Data.DataTable.AddColumn("dtPB","Subtotal","float")
	f.Data.DataTable.AddColumn("dtPB","Markup","float")
	f.Data.DataTable.AddColumn("dtPB","TotalPrice","float")
	'Next update the values
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtPB.RowCount--,1)
		f.Data.DataTable.SetValue("dtPB",v.Local.i,"MaterialSubTotal",v.DataTable.dtPB(v.Local.i).rMatTotal!fieldval)	
		f.Data.DataTable.SetValue("dtPB",v.Local.i,"FinishSubTotal",v.DataTable.dtPB(v.Local.i).rOutTotal!fieldval)	
		f.Data.DataTable.SetValue("dtPB",v.Local.i,"LabourSubTotal",v.DataTable.dtPB(v.Local.i).rLabTotal!fieldval)	
		f.Intrinsic.Math.Add(v.Local.fSubTotal,v.DataTable.dtPB(v.Local.i).rMatTotal!fieldval,V.local.fSubTotal)
		f.Intrinsic.Math.Add(v.Local.fSubTotal,v.DataTable.dtPB(v.Local.i).rOutTotal!fieldval,v.local.fSubTotal)
		f.Intrinsic.Math.Add(v.Local.fSubTotal,v.DataTable.dtPB(v.Local.i).rLabTotal!fieldval,v.local.fSubTotal)
		f.Intrinsic.Math.Add(v.Local.fSubTotal,v.DataTable.dtPB(v.Local.i).PACKING!fieldval,v.Local.fSubTotal)
		f.Data.DataTable.SetValue("dtPB",v.Local.i,"SubTotal",v.Local.fSubTotal)
		f.Intrinsic.Math.Mult(v.DataTable.dtBBB(0).OVERALL_MARKUP!fieldval,.01,V.Local.fTotalPrice)
		F.Intrinsic.Math.Mult(V.Local.fSubTotal,V.Local.fTotalPrice,V.Local.fTotalPrice)
		f.Data.DataTable.SetValue("dtPB",v.Local.i,"Markup",v.Local.fTotalPrice)
		f.Intrinsic.Math.Mult(v.DataTable.dtPB(v.Local.i).UNITPRICE!FIELDVAL,v.DataTable.dtPB(v.Local.i).pricebreak!FIELDVAL,v.Local.fTotalPrice)
		f.Intrinsic.Math.Round(v.Local.fTotalPrice,2,v.Local.fTotalPrice)
		f.Data.DataTable.SetValue("dtPB",v.Local.i,"TotalPrice",v.Local.fTotalPrice)
		v.Local.fSubTotal.Set(0)
	f.Intrinsic.Control.Next(v.Local.i)
	f.Data.DataView.Create("dtPB","dvPBF")
	
	f.Intrinsic.Control.If(v.Local.sShowForm,<>,"N")
		'NOW onto the fun stuff, the properties!
		'Set Gridview Property
		gui.frmQREBuild.gsgcBuildup.anchor(15)
		gui.frmQREBuild.gsgcBuildup.datasource("dtPB")
		gui.frmQREBuild.gsgcBuildup.AddGridviewFromDatatable("gvPB","dtPB")	
		GUI.frmQREBuild.gsgcBuildup.SetGridviewProperty("gvPB","EnableAppearanceOddRow",True)
		'Set properties for some of the first ones
		gui.frmQREBuild.gsgcBuildup.setColumnProperty("gvPB","PriceBreak","Fixed","Left")
		gui.frmQREBuild.gsgcBuildup.setColumnProperty("gvPB","Part","Fixed","Left")
		gui.frmQREBuild.gsgcBuildup.setColumnProperty("gvPB","Rev","Fixed","Left")
		gui.frmQREBuild.gsgcBuildup.setColumnProperty("gvPB","UnitPrice","Fixed","Left")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","UnitPrice","DisplayCustomNumeric","$#,###,###.00")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","rLabTotal","Visible","False")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","rMatTotal","Visible","False")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","rOutTotal","Visible","False")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","rComTotal","Visible","False")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","rFinish","Visible","False")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","rCustomer","Visible","False")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","rDescription","Visible","False")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","rUser4","Visible","False")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","rPL","Visible","False")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","rUM","Visible","False")
	
		
		'Set Properties for Material
		v.Local.w.Set(0)
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtMV.RowCount--,1)
			v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtmv(v.Local.i).Quantity!FieldVal])
			f.Intrinsic.Control.If(v.Local.sMyQty,<>,v.Local.stempdict)
				v.Local.fMatTotal.Set(0)
				v.Local.w.Set(0)
			f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.If(v.Local.w,=,0)
				v.Local.sColor.Set(v.Color.LtCyan)
			f.Intrinsic.Control.ElseIf(v.Local.w,=,1)
				v.Local.sColor.Set(v.Color.LtRed)
			f.Intrinsic.Control.Elseif(v.Local.w,=,2)
				v.Local.sColor.Set(v.Color.LtGreen)
			f.Intrinsic.Control.Elseif(v.Local.w,=,3)
				v.Local.sColor.Set(v.Color.Yellow)
			f.Intrinsic.Control.ElseIf(v.Local.w,=,4)
				v.Local.sColor.Set(v.Color.Pink)
			f.Intrinsic.Control.Else
				v.Local.sColor.Set(v.Color.LtGrey)
			f.Intrinsic.Control.EndIf
			f.Intrinsic.string.Build("MATERIAL_PART{0}",v.Local.w,v.Local.stempname)
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","110")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"Caption","Material Part")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"CellBackColor",v.local.sColor)
			f.Intrinsic.string.Build("MATERIAL_PPWU{0}",v.Local.w,v.Local.stempname)
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","110")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"Caption","Parts per Mat. Unit")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"CellBackColor",v.local.sColor)
			f.Intrinsic.string.Build("MATERIAL_UNITS_ORD{0}",v.Local.w,v.Local.stempname)
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","110")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"Caption","Mat. Units to Order")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"CellBackColor",v.local.sColor)
			f.Intrinsic.string.Build("MATERIAL_USED{0}",v.Local.w,v.Local.stempname)
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","110")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"Caption","Mat. Units Used")
			gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB",v.Local.stempname,"DisplayCustomNumeric","##,###,###.00000")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"CellBackColor",v.local.sColor)
			f.Intrinsic.string.Build("MATERIAL_COST_UNIT{0}",v.Local.w,v.Local.stempname)
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","110")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"Caption","Cost per Mat. Unit")
			gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB",v.Local.stempname,"DisplayCustomNumeric","$#,###,###.00")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"CellBackColor",v.local.sColor)
			f.Intrinsic.string.Build("MATERIAL_COST{0}",v.Local.w,v.Local.stempname)
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","110")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"Caption","Mat. Cost")
			gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB",v.Local.stempname,"DisplayCustomNumeric","$#,###,###.00")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"CellBackColor",v.local.sColor)
			f.Intrinsic.string.Build("MATERIAL_PRICE{0}",v.Local.w,v.Local.stempname)
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","110")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"Caption","Mat. Sell Price")
			gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB",v.Local.stempname,"DisplayCustomNumeric","$#,###,###.00")
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"CellBackColor",v.local.sColor)
			v.Local.sMyQty.Set(v.Local.stempdict)
			f.Intrinsic.Math.Add(v.Local.w,1,v.Local.w)
		f.Intrinsic.Control.Next(v.Local.i)
		'Set Properties for Components
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtCom.RowCount--,1)
			f.in.control.if(v.DataTable.dtCom(v.Local.i).SEQ!FieldValTrim,<>,"MAT")
				gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB","Component_Cost","MinWidth","150")
				gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","Component_Cost","DisplayCustomNumeric","$#,###,###.00")
				gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB","Component_Price","MinWidth","150")
				gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","Component_Price","DisplayCustomNumeric","$#,###,###.00")
			F.IN.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.i)
		'Set Properties for Labour	
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtLV.RowCount--,1)
			f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtQty.RowCount--,1)
				v.Local.stempdict.Set(v.dictionary.dict![v.DataTable.dtQty(v.Local.j).Quantity!FieldVal])
				f.Data.Dictionary.returnkeyfromvalue("lab",v.Local.i,v.Local.stemplab)
				f.Intrinsic.string.Build("{0}_RunTime_{1}",v.Local.stemplab,v.local.i,v.Local.stempname)
				gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","125")
				gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB",v.Local.stempname,"DisplayCustomNumeric","###,###.##")
				f.Intrinsic.string.Build("{0}_Setup_{1}",v.Local.stemplab,v.Local.i,v.Local.stempname)
				gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","125")
				gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB",v.Local.stempname,"DisplayCustomNumeric","$#,###,###.00")
				f.Intrinsic.string.Build("{0}_Price_{1}",v.Local.stemplab,v.Local.i,v.Local.stempname)
				gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","150")
				gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB",v.Local.stempname,"DisplayCustomNumeric","$#,###,###.00")
			f.Intrinsic.Control.Next(v.Local.j)		
		f.Intrinsic.Control.Next(v.Local.i)
		'Set Properties for Outside/finish
		f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtOut.RowCount--,1)
			'Outside Cost
			f.Intrinsic.string.Build("OutsideCost_{0}",v.DataTable.dtOut(v.Local.i).MATERIAL_PART!FIELDVAL,v.Local.stempname)
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","150")
			gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB",v.Local.stempname,"DisplayCustomNumeric","$#,###,###.00")
			'Outside Markup Price
			f.Intrinsic.string.Build("OutsideMark_{0}",v.DataTable.dtOut(v.Local.i).MATERIAL_PART!FIELDVAL,v.Local.stempname)
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","150")
			gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB",v.Local.stempname,"DisplayCustomNumeric","$#,###,###.00")
			'Outside Price Lot
			f.Intrinsic.string.Build("OutsidePrice_{0}",v.DataTable.dtOut(v.Local.i).MATERIAL_PART!FIELDVAL,v.Local.stempname)
			gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB",v.Local.stempname,"MinWidth","150")
			gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB",v.Local.stempname,"DisplayCustomNumeric","$#,###,###.00")
		f.Intrinsic.Control.Next(v.Local.i)
		'Set Properties for Subtotals
		gui.frmQREBuild.gsgcBuildup.SetColumnProperty("gvPB","LabourSubTotal","MinWidth","110")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","LabourSubTotal","DisplayCustomNumeric","$#,###,###.00")
		gui.frmQREBuild.gsgcBuildup.setcolumnproperty("gvPB","FinishSubTotal","MinWidth","110")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","FinishSubTotal","DisplayCustomNumeric","$#,###,###.00")
		gui.frmQREBuild.gsgcBuildup.setcolumnproperty("gvPB","MaterialSubTotal","MinWidth","110")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","MaterialSubTotal","DisplayCustomNumeric","$#,###,###.00")
		gui.frmQREBuild.gsgcBuildup.setcolumnproperty("gvPB","SubTotal","MinWidth","110")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","SubTotal","DisplayCustomNumeric","$#,###,###.00")
		gui.frmQREBuild.gsgcBuildup.setcolumnproperty("gvPB","Markup","MinWidth","110")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","Markup","DisplayCustomNumeric","$#,###,###.00")
		gui.frmQREBuild.gsgcBuildup.setcolumnproperty("gvPB","TotalPrice","MinWidth","110")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","TotalPrice","DisplayCustomNumeric","$#,###,###.00")
		gui.frmQREBuild.gsgcBuildup.setcolumnproperty("gvPB","Packing","MinWidth","110")
		gui.frmQREBuild.gsgcBuildup.setcolumnProperty("gvPB","Packing","DisplayCustomNumeric","$#,###,###.00")
		
		
		V.Local.sFileExport.Declare(string)
		V.Local.bExcel.Declare(boolean)
		V.Local.bFileLocked.Declare(boolean)
		V.Local.sMsg.Declare(string)
		v.Local.sDate.Declare(string)
		f.Intrinsic.String.Format(V.Ambient.Now,"YYYYMMDDHHNNSS",v.Local.sDate)
		F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
		f.Intrinsic.Control.If(v.Local.bExcel)
			F.Intrinsic.String.Build("{0}\GAB_4486_QRE_{1}_Export.xlsx",V.Caller.LocalGssTempDir,v.Local.sDate,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				gui.frmQREBuild.gsgcBuildup.Export(V.Local.sFileExport,"xlsx")
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Else
			f.Intrinsic.UI.Msgbox("Excel Not Found.")
		f.Intrinsic.Control.EndIf

	f.Intrinsic.Control.EndIf
	
	'Close the datatables
	f.Data.DataTable.close("dtQTY")
	f.Data.DataTable.close("dtMAT")
	f.Data.DataTable.close("dtLAB")
	f.Data.DataTable.close("dtMV")
	f.Data.Dictionary.Close("Lab")
	f.Data.Dictionary.Close("clmn")
	f.Data.Dictionary.close("dict")
	f.Data.Dictionary.Close("Out")
	f.Data.Dictionary.Close("Com")
	F.Data.Dictionary.Close("Cfg")
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.sub.reportCalc.End

Program.Sub.quoteUpload.Start
v.Local.suploadtype.Declare(string)
v.Local.sbuilddata.Declare(string)
v.Local.dDateNow.Declare(Date)
v.Local.sCustPO.Declare(string)
v.local.sCustomer.Declare(string)
v.local.sLocation.Declare(string)
v.local.nItemCtr.declare(long)
v.local.nOrderQty.declare(float)
v.local.sUM.declare(string)
v.local.sRouterFSQ.declare(string)
v.local.fPrice.declare(Float)
v.local.fCost.declare(Float)
v.local.sDesc.declare(string)
v.local.sProdLineCD.declare(string)
v.local.sUser1.declare(string)
v.local.stemp.declare(string)
v.local.sUser3.declare(string)
v.local.fExtension.declare(Float)
v.local.fExtTotal.declare(Float)
v.local.sCustDesc.declare(string)
v.local.sSplitDesc.declare(string)
v.local.nSplitCount.declare(Float)
v.local.sCustTag.declare(string)
v.local.sString.declare(string)
v.local.nSplitchar.Declare(long)
v.local.sCustTagSplit.declare(string)
v.local.nCount.declare(long)
v.local.nCount2.declare(long)
v.local.sTax.declare(string)
v.local.nSplitDesc.declare(long)
v.local.sSurveyID.declare(string)
v.local.sRtrFlag.declare(string)
v.local.fLength.declare(Float)
v.local.fWidth.declare(Float)
V.Local.SSQL.Declare(STRING) 
v.Local.sret.Declare(string)
v.Local.sqty.Declare(string)
v.Local.fMatSell.Declare(float)
v.Local.fMatSEtupSell.Declare(float)
v.Local.fMatRunSell.Declare(Float)
V.Local.fLabourRunSell.Declare(float)
v.Local.fLabourSetSell.Declare(float)
v.Local.fLabourTotal.Declare(Float)
v.Local.fLabourSetSell1.Declare(float)
v.Local.fLabourRunSell1.Declare(float)
v.Local.fMaterialSell1.Declare(float)
v.Local.fOutsideSell1.Declare(float)
v.Local.i.Declare(long)
v.Local.ftempret.Declare(float)
v.Local.fRunQty.Declare(float)
v.Local.sAltDesc.Declare(string)
V.Local.ftempqty.Declare(float)
v.Local.ftempcost.Declare(float)
v.Local.dDateNow.Set(v.Ambient.Now)
v.Local.squoteno.Declare(string)
v.Local.fOMarkup.Declare(float)
v.Local.scustomerpart.Declare(string)
v.Local.suploadtype.Set("Q")
v.Local.bUploadSOType.Declare(boolean)
v.Local.bUploadSOType.Set(v.Args.uploadType)
f.Intrinsic.Control.If(v.Local.bUploadSOType)
	v.Local.suploadtype.Set("O")
f.Intrinsic.Control.EndIf
v.Local.spartrev.Declare(string)
v.Local.j.Declare(long)
v.Local.sfinish.Declare(string)
v.Local.sgsspart.Declare(string)
v.Local.squantity.Declare(string)
v.Local.sUser4.Declare(string)
f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtPB.RowCount--,1)	
	f.Intrinsic.String.GSSPartString(v.datatable.dtPB(v.Local.j).PART!FIELDVAL,v.datatable.dtPB(v.Local.j).REV!FIELDVAL,V.Local.sgsspart)
	v.local.sRouterFSQ.Set(v.Local.sgsspart)
	v.local.sCustomer.Set(v.datatable.dtPB(v.Local.j).rCustomer!FIELDVAL)
	v.Local.sUM.Set(v.datatable.dtPB(v.Local.j).rUM!FIELDVAL)
	v.Local.sDesc.Set(v.datatable.dtPB(v.Local.j).rDescription!FIELDVAL)
	v.Local.sProdLineCD.Set(v.datatable.dtPB(v.Local.j).rPL!FIELDVAL)
	V.local.nOrderQty.Set(v.datatable.dtPB(v.Local.j).PRICEBREAK!FIELDVAL)
	V.Local.fPrice.Set(v.datatable.dtPB(v.Local.j).UNITPRICE!FIELDVAL)
	v.Local.sfinish.Set(v.datatable.dtPB(v.Local.j).rFinish!FIELDVAL)
	v.Local.sUser4.Set(v.datatable.dtPB(v.Local.j).rUser4!FIELDVAL)
	
	F.Intrinsic.String.RPad(V.Local.sUploadType.Trim," ",1,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Customer
	F.Intrinsic.String.RPad(V.local.sCustomer.Trim," ",7,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Order Number / Quote
	F.Intrinsic.String.RPad(" "," ",7,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Freight
	F.Intrinsic.String.RPad("","0",10,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Blank
	F.Intrinsic.String.RPad(" "," ",1,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Blank
	F.Intrinsic.String.RPad(" "," ",1,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Date Due
	F.Intrinsic.String.Format(V.Local.dDateNow,"YYYYMMDD",V.Local.sTemp)
	F.Intrinsic.String.RPad(""," ",8,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Date Ordered
	F.Intrinsic.String.Format(V.Local.dDateNow,"YYYYMMDD",V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Blank 3 user fields
	F.Intrinsic.String.RPad(" "," ",90,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'User field 4
	F.Intrinsic.String.RPad(v.Local.sUser4," ",30,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'User field 5
	F.Intrinsic.String.RPad(" "," ",30,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'GSS User
	F.Intrinsic.String.RPad(V.Caller.User," ",8,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Cust PO
	F.Intrinsic.String.RPad(V.Local.sCustPO," ",15,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'After Cust PO
	F.Intrinsic.String.RPad(" "," ",15,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'FreightCurrencyFlag 1 to used order currency
	F.Intrinsic.String.RPad("1"," ",1,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	
	'Blank Shipping data not used here except Ship Via and Carrier
	'(putting an S would require reading the ShipTo Address and populating it.
	F.Intrinsic.String.RPad(" "," ",1,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Ship Via (20) try not putting in the Ship-Via and Carrier V.Screen.FMain!txtShipMethod.Text
	F.Intrinsic.String.RPad(" "," ",20,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Carrier code 
	F.Intrinsic.String.RPad(" "," ",6,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Was blanking all 382 but reduced for 1 + 20 + 6 above
	F.Intrinsic.String.RPad(" "," ",355,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	
	'Transfer Location
	F.Intrinsic.String.RPad(V.local.sLocation," ",2,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Blank
	F.Intrinsic.String.RPad(" "," ",85,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Line Number 3 char
	F.Intrinsic.String.Format(V.Local.nItemCtr,"000",V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Line no zero on the right for record no kinda
	F.Intrinsic.String.RPad("0","0",1,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Quantity - note position 1353 will be set to 1 to allow if nOrderQty is negative
	F.Intrinsic.Control.If(V.local.nOrderQty,=,0)
			F.Intrinsic.String.Format(V.local.nOrderQty,"000000000.0000",V.Local.sTemp)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Format(V.local.nOrderQty,"000000000.0000",V.Local.sTemp)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Replace(V.Local.sTemp,".","",V.Local.sTemp)
	F.Intrinsic.String.Replace(V.Local.sTemp,"-","",V.Local.sTemp)
	F.Intrinsic.String.LPad(V.Local.sTemp," ",13,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Freight
	F.Intrinsic.String.RPad("0","0",10,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'UM not required can pull from inventory
	F.Intrinsic.String.RPad(V.Local.sUM.Trim," ",2,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Part
	F.Intrinsic.String.RPad(V.Local.sgsspart," ",20,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'blank
	F.Intrinsic.String.RPad(" "," ",18,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Location
	F.Intrinsic.String.RPad(V.local.sLocation," ",2,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'V.Local.sPrice - Try with a value of 1 as in 0.0001 16 (10,6)
	F.Intrinsic.String.Format(V.Local.fPrice,"0000000000.000000",V.Local.sTemp)
	F.Intrinsic.String.Replace(V.Local.sTemp,".","",V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'V.Local.sPrice Quote price ?  16 (10,6)
	F.Intrinsic.String.Format(V.Local.fPrice,"0000000000.000000",V.Local.sTemp)
	F.Intrinsic.String.Replace(V.Local.sTemp,".","",V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'V.Local.sCost  16 (10,6)
	F.Intrinsic.String.Format(V.Local.fCost,"0000000000.000000",V.Local.sTemp)
	F.Intrinsic.String.Replace(V.Local.sTemp,".","",V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'V.Local.sLineDesc
	F.Intrinsic.String.Left(V.Local.sDesc,30,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",30,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'V.local.sProdLineCode-not required - This will be required as we are creating items that might not be parts
	F.Intrinsic.String.RPad(V.Local.sProdLineCD," ",3,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Date - Line order
	F.Intrinsic.String.Format(V.Local.dDateNow,"YYYYMMDD",V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'Date - Line promised
	'F.Intrinsic.Date.DateAddWorkdays(V.Ambient.Date,V.Local.nLeadtime,V.Local.dDateProm)
	'F.Intrinsic.String.Format(V.Local.dDateProm,"YYYYMMDD",V.Local.sTemp)
	F.Intrinsic.String.Format(V.Local.dDateNow,"YYYYMMDD",V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'	'User Fields 5 x 30
	'User Fields 1 x 30
	F.Intrinsic.String.RPad(v.Local.sfinish.Trim," ",30,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp.Left30,V.Local.sBuildData)
	'User Fields 1 x 30
	F.Intrinsic.String.RPad(" "," ",30,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'User Fields 1 x 30
	F.Intrinsic.String.RPad(V.Local.sUser3.Trim," ",30,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp.Left30,V.Local.sBuildData)
	'User Fields 1 x 30
	F.Intrinsic.String.RPad(v.Local.sUser4.Trim," ",30,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	'User Fields 1 x 30
	F.Intrinsic.String.RPad(" "," ",30,V.Local.sTemp)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Local.sTemp,V.Local.sBuildData)
	F.Intrinsic.String.Concat(V.Local.sBuildData,V.Ambient.NewLine,V.Local.sBuildData)

f.Intrinsic.Control.Next(v.Local.j)

v.Local.sfile.Declare(string)
v.Local.sparams.Declare(string)
v.Local.sfiledir.Declare(string)
F.Intrinsic.String.Concat("LD",V.Caller.Terminal,V.Caller.CompanyCode,V.Local.sFile)
F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sFile,V.Local.sFileDir)
F.Intrinsic.File.String2File(V.Local.sFileDir,V.Local.sBuildData)
'Temp Testing
F.Intrinsic.String.Concat(V.Caller.TempDir,"\",V.Local.sFile,"-Test.txt",V.Local.sTemp)
F.Intrinsic.File.String2File(V.Local.sTemp,V.Local.sBuildData)
F.Intrinsic.String.Concat(V.Caller.CompanyCode,"!*!",V.Caller.User,"!*!",V.Local.sFile,V.Local.sParams)
F.Global.General.CallWrapperSync(6004,V.Local.sParams)
v.Local.soutput.Declare(string)
v.Local.sNewQuoteNo.Declare(string)
f.Intrinsic.String.Concat(v.Caller.FilesDir,"\","ORDQTE.TXT",v.Local.soutput)
f.Intrinsic.File.File2String(v.Local.soutput,v.Local.sNewQuoteNo)
	
f.Intrinsic.Control.If(v.Local.bUploadSOType)
	F.Intrinsic.String.Concat(V.Local.sNewQuoteNo,"!*!O!*!",v.Local.sCustomer,v.Local.sparams)
	f.Global.General.CallWrapperAsync(200000,v.local.sparams)
f.Intrinsic.Control.Else
	F.Global.General.CallWrapperSyncbio(920000,v.Local.sNewQuoteNo)
	V.Local.sREV.Declare(String," ")
	V.Local.sQTYDEC.Declare(String," ")
	V.Local.sPRTEXT.Declare(String,"Y")
	V.Local.sPRTTOT.Declare(String,"N")
	V.Local.sPRTALL.Declare(String,"N")
	V.Local.sCOMMENTS.Declare(String," ")
	v.Local.spn.Declare(string)
	v.Local.spv.Declare(string)
	V.Local.sPN.Set("Terminal*!*REPORTID*!*REV*!*QTYDEC*!*PRTEXT*!*PRTTOT*!*PRTALL*!*COMMENTS")
	F.Intrinsic.String.Concat(V.caller.Terminal,"*!*000001*!*",V.Local.sREV,"*!*",V.Local.sQTYDEC,"*!*",V.Local.sPRTEXT,"*!*",V.Local.sPRTTOT,"*!*",V.Local.sPRTALL,"*!*",V.Local.sCOMMENTS,V.Local.sPV)
	F.Intrinsic.String.Split(V.Local.sPN,"*!*",V.Local.sPN)
	F.Intrinsic.String.Split(V.Local.sPV,"*!*",V.Local.sPV)
	
	V.Local.sDate.Declare(String)
	F.Intrinsic.String.Format(V.Ambient.Date,"DDMMYYYY",V.Local.sDate)
	V.Local.sTime.Declare(string)
	f.Intrinsic.String.Format(v.Ambient.Now,"HhNnSs",v.Local.sTime)
	V.Local.sfileqte.Declare(String)
	'f.Intrinsic.Debug.ShowCallerInfo
	F.Intrinsic.String.Concat(V.caller.TempDir,"\QRE\QUOTE-",V.Local.sNewQuoteNo,"-",V.Local.sDate,"_",v.Local.sTime,".pdf",V.local.sfileqte)
	V.Local.STEMPQRE.Declare(STRING)
	F.Intrinsic.String.Concat(V.Caller.TempDir,"\QRE\",V.Local.stempQRE)
	F.Global.BI.SaveReport("000001",1,V.Local.sPN,V.Local.sPV,V.Local.sfileqte)
	f.Intrinsic.Task.ShellExec(1,"", v.Local.STEMPQRE, "", "", 1)
f.Intrinsic.Control.EndIf

Program.Sub.quoteUpload.End

Program.Sub.routerUpload.Start
'arguments, Number, part, RunTime,  Comment, um, lmo,workcenter, overlap
'LMO need to be C for comment
'LMO needs to be L for workcenter
'LMO needs to be M for material RunTime is quantity when LMO is M
V.Local.iCt.Declare(Long)
v.Local.j.Declare(long)
v.Local.lLast.Declare(long)
V.Local.shold.Declare(String)
V.Local.iPLine.Declare(Long)
V.Local.iPSeq.Declare(Long)
V.Local.sSQL.Declare(String)
V.Local.sOp.Declare(String)
V.Local.sDesc.Declare(String)
V.Local.sLMO.Declare(String)
V.Local.sGSSPart.Declare(string)
v.Local.sBuildRtr.Declare(string)
v.Local.sCustomer.Declare(string)
v.Local.sProdLineCD.Declare(string)
V.Local.sRate.Declare(string)
v.Local.sUM.Declare(string)
V.Local.sfilename.Declare(string)
v.Local.sMyQty.Declare(string)
v.Local.sMyQty.Set(v.Args.sQty)
f.Intrinsic.Control.For(v.Local.j,0,v.DataTable.dtBB.RowCount--,1)	
	'Delete the router in the system
	F.Intrinsic.String.Concat("DELETE FROM ROUTER_HEADER WHERE ROUTER='",V.local.sGSSPart,"'",V.Local.squery)
	F.ODBC.connection!conx.Execute(V.Local.squery)
	f.Intrinsic.String.GSSPartString(v.datatable.dtBB(v.Local.j).customer_part!FIELDVAL,v.datatable.dtBB(v.Local.j).cust_rev!FIELDVAL,V.Local.sgsspart)
	v.local.sCustomer.Set(v.datatable.dtBB(v.Local.j).CUSTOMER!FIELDVAL)
	v.Local.sUM.Set(v.datatable.dtBB(v.Local.j).FG_UM!FIELDVAL)
	v.Local.sDesc.Set(v.datatable.dtBB(v.Local.j).FG_DESCRIPTION!FIELDVAL)
	v.Local.sProdLineCD.Set(v.datatable.dtBB(v.Local.j).FG_PL!FIELDVAL)
	f.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"M")
		v.Local.sRate.Set(v.datatable.dtBB(v.Local.j).MATERIAL_COST_UNIT!FIELDVAL)
	f.Intrinsic.Control.ElseIf(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"O")
		v.Local.sRate.Set(v.DataTable.dtBB(v.Local.j).OUTSIDE_COST!FIELDVAL)
	f.Intrinsic.Control.ElseIf(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"L")
		v.Local.sRate.Set(0)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Math.Add(V.Local.iPSeq,100,V.Local.iPSeq)

	'Router Number
	F.Intrinsic.String.RPad(v.Local.sGSSPart," ",20,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,20,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Header Desc
	F.Intrinsic.String.RPad(V.Local.sDesc," ",30,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,30,V.Local.sHold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Sequence
	f.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"O","or",v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"P")
		f.Intrinsic.Math.Add(v.DataTable.dtBB.RowCount,V.Local.j,v.Local.lLast)
		f.Intrinsic.Math.Mult(v.Local.lLast,100,v.Local.lLast)
		F.Intrinsic.String.Format(V.local.lLast,"000000",V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	f.Intrinsic.Control.Else
		F.Intrinsic.String.Format(V.local.iPSeq,"000000",V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	f.Intrinsic.Control.EndIf
	
	'LMO
	f.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"P")
		F.Intrinsic.String.RPad("L"," ",1,V.Local.shold)
		F.Intrinsic.String.Left(V.Local.shold,1,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	f.Intrinsic.Control.Else
		F.Intrinsic.String.RPad(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL," ",1,V.Local.shold)
		F.Intrinsic.String.Left(V.Local.shold,1,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.Control.EndIf
	
	'Part
	F.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"M","or",v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"O")
		F.Intrinsic.String.RPad(v.datatable.dtBB(v.Local.j).MATERIAL_PART!FIELDVAL," ",20,V.Local.shold)
		F.Intrinsic.String.Left(V.Local.shold,20,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)		
		F.Intrinsic.String.RPad(" "," ",4,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	f.Intrinsic.Control.EndIf
	
	'Workcenter
	F.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"L")
		F.Intrinsic.String.RPad(" "," ",20,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
		F.Intrinsic.String.RPad(v.datatable.dtBB(v.Local.j).LABOUR_WC!FIELDVAL," ",4,V.Local.shold)
		F.Intrinsic.String.Left(V.Local.shold,4,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.Control.ElseIF(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"P")
		F.Intrinsic.String.RPad(" "," ",20,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
		F.Intrinsic.String.RPad("PC"," ",4,V.Local.shold)
		F.Intrinsic.String.Left(V.Local.shold,4,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.Control.EndIf
	
	'Seq Desc
	F.Intrinsic.String.RPad(v.datatable.dtBB(v.Local.j).STEP_DESC!FIELDVAL," ",30,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,30,V.Local.sDesc)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Setup
	F.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"L")
		F.Intrinsic.String.LPad(v.datatable.dtBB(v.Local.j).PPH_SET!FIELDVAL," ",16,V.Local.shold)
		F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"M")
		F.Intrinsic.String.LPad(v.datatable.dtBB(v.Local.j).MATERIAL_UNITS_ORD!FIELDVAL," ",16,V.Local.shold)
		F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"O")
		F.Intrinsic.String.LPad(1," ",16,V.Local.shold)
		F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"P")
		F.Intrinsic.String.LPad(1," ",16,V.Local.shold)
		F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
		f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.Control.EndIf
	
	'Runtime/Material
	F.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).LMO!FIELDVAL,=,"L")
		F.Intrinsic.Control.If(v.datatable.dtBB(v.Local.j).PPH_RUN!FIELDVAL,<>,"0")
			F.Intrinsic.String.LPad(v.datatable.dtBB(v.Local.j).PPH_RUN!FIELDVAL," ",16,V.Local.shold)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.LPad("00000000000.0000"," ",16,V.Local.shold)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else 
			F.Intrinsic.String.LPad("00000000000.0000"," ",16,V.Local.shold)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Customer
	F.Intrinsic.String.RPad(V.Local.sCustomer," ",6,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,6,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Orig Date
	F.Intrinsic.String.Format(V.Ambient.Date,"MMDDYY",v.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Op Code
	F.Intrinsic.String.RPad(""," ",6,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,6,V.Local.sOp)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Rate
	F.Intrinsic.Control.If(V.Local.sRate,=,"")
		V.Local.shold.Set("00000000000.0000")
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Local.sRate,=,0)
			V.Local.shold.Set("00000000000.0000")
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Format(V.Local.sRate,"#.0000",V.Local.shold)
			F.Intrinsic.String.LPad(V.Local.shold,"0",16,V.Local.shold)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'UM
	F.Intrinsic.String.RPad(v.datatable.dtBB(v.Local.j).STEP_UM!FIELDVAL," ",2,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,2,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Desc 1-3
	F.Intrinsic.String.RPad(""," ",71,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,71,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.String.RPad(""," ",71,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,71,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.String.RPad(""," ",71,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,71,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Quantity 1-10
	F.Intrinsic.String.LPad(v.local.sMyQty,"0",16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.String.LPad("","0",16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.String.LPad("","0",16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.String.LPad("","0",16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Purge
	F.Intrinsic.String.LPad(""," ",1,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,1,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Frequency
	F.Intrinsic.String.LPad(""," ",16,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Machine
	F.Intrinsic.String.LPad("0.00","0",16,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Overlap
	F.Intrinsic.String.LPad(""," ",16,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'WC Factor
	f.Intrinsic.String.Concat(v.local.sBuildRtr,"                ",v.local.sBuildRtr)
	
	'Min Flag
	f.Intrinsic.String.Concat(v.local.sBuildRtr,"N",v.local.sBuildRtr)
	
	'Min Outside
	F.Intrinsic.String.LPad("0.0000"," ",16,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Crew Size
	F.Intrinsic.String.LPad("0.0000"," ",16,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Lead Time
	F.Intrinsic.String.LPad(""," ",16,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Part Loc
	F.Intrinsic.String.RPad(""," ",2,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,2,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Tooling Switch
	F.Intrinsic.String.RPad(""," ",1,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,1,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Sort Code
	'Adding in Metco QRE 7th November
	F.Intrinsic.String.RPad(v.datatable.dtBB(v.Local.j).SEQ!FIELDVAL," ",20,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,20,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Drawing No
	F.Intrinsic.String.RPad(v.datatable.dtBB(v.Local.j).DRAW!FIELDVALTRIM," ",30,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,30,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'PAD
	F.Intrinsic.String.RPad(" "," ",250,V.Local.shold)
	F.Intrinsic.String.Concat(v.local.sBuildRtr,V.Local.shold,v.local.sBuildRtr)
	
	'Scrap
	F.Intrinsic.String.LPad("0.000"," ",16,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Cust Part
	F.Intrinsic.String.RPad(""," ",20,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,20,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Sort 1
	F.Intrinsic.String.RPad(""," ",20,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,20,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Sort 2
	F.Intrinsic.String.RPad(""," ",20,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,20,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Commission
	F.Intrinsic.String.LPad("0.00"," ",16,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Quantities
	F.Intrinsic.String.LPad("","0",16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.String.LPad("","0",16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.String.LPad("","0",16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.String.LPad("","0",16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.String.LPad("","0",16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	F.Intrinsic.String.LPad("","0",16,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Signoff User
	F.Intrinsic.String.RPad(""," ",8,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,8,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Signoff Type
	F.Intrinsic.String.RPad(""," ",1,V.Local.shold)
	F.Intrinsic.String.Left(V.Local.shold,1,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	'Prod Line
	F.Intrinsic.String.lpad(V.Local.sProdLineCD," ",2,V.Local.shold)
	f.Intrinsic.String.Concat(v.local.sBuildRtr,v.Local.shold,v.local.sBuildRtr)
	
	F.Intrinsic.String.Concat(v.local.sBuildRtr,v.Ambient.NewLine,v.local.sBuildRtr)
f.Intrinsic.Control.Next(v.Local.j)

V.Local.sfilename.Set("ROUTERHD.TXT")
v.Local.sFileDir.Declare(string)
v.Local.squery.Declare(string)
'output file
F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sfilename,V.Local.sFileDir)
f.Intrinsic.File.Append2File(V.Local.sFileDir,V.Local.sBuildRtr)

Program.Sub.routerUpload.End

Program.Sub.uploadBOM.Start
v.Local.sError.Declare(String)
V.Local.sLine.Declare(String)
V.Local.sParent.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sSeq.Declare(String)
V.Local.sDescription.Declare(String)
V.Local.sCount.Declare(String)
V.Local.sUM.Declare(String)
V.Local.sCategory.Declare(String)
V.Local.sSource.Declare(String)
V.Local.sMisc.Declare(String)
V.Local.iFor.Declare(Long)
V.Local.i7.Declare(Long)
V.Local.sRev.Declare(String)
V.Local.schild.Declare(String)
V.Local.sqty.Declare(String)
V.Local.spno.Declare(String)
V.Local.suom.Declare(String)
V.Local.sDesc.Declare(String)
V.Local.spad.Declare(String)
V.Local.spad1.Declare(String)
V.Local.spad2.Declare(String)
V.Local.spad3.Declare(String)
V.Local.sRMLine.Declare(String)
V.Local.sRMParent.Declare(String)
v.Local.ssql.Declare(String)
V.Local.sVendcode.Declare(String)
v.Local.sPL.Declare(string)
V.Local.sTempCategory.Declare(String)
v.local.sBuildBOMs.Declare(string)
v.Local.i.Declare(long)
v.Local.sFilename.Declare(string)
v.Local.sfiledir.Declare(string)
v.Local.iInternal.Declare(long)
v.Local.iInternal.Set(0)
V.Local.sfilename.Set("BOMHDR.txt")
F.Data.DataView.Create("dtBB","dvBOM")
'F.Intrinsic.Debug.ShowCallerInfo
f.Data.DataView.ToDataTableDistinct("dtBB","dvBOM","dtBOM","CUSTOMER_PART*!*CUST_REV*!*QTY_BREAK")
f.Intrinsic.Control.If(v.DataTable.dtbom.RowCount,>,1)
	f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtBOM.RowCount--,1)
		
		V.local.sqty.Set(v.DataTable.dtBOM(v.local.i).QTY_BREAK!FIELDVAL)
		F.Intrinsic.Control.If(v.Local.sqty.Trim,=,"")
			v.Local.sqty.Set(1)
		f.Intrinsic.Control.EndIf
		'Parent
		F.Intrinsic.String.RPad(v.Args.Part," ",17,V.Local.sPart)
		F.Intrinsic.String.Left(V.Local.sPart,17,V.Local.sPart)
		F.Intrinsic.String.RPad(v.Args.Rev," ",3,V.Local.sRev)
		F.Intrinsic.String.Left(V.Local.sRev,3,V.Local.sRev)
		f.Intrinsic.String.GSSPartString(v.Local.spart,v.Local.sRev,v.Local.sParent)
		F.Intrinsic.String.RPad(V.Local.sParent," ",20,V.Local.sParent)
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,v.Local.sParent,v.local.sBuildBOMs)
		
		'Sequences
		f.Intrinsic.String.LPad(v.local.iInternal,"0",4,v.Local.sLine)
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,v.Local.sLine,v.local.sBuildBOMs)
		
		'Quantity
		F.Intrinsic.String.Format(v.Local.sqty,"####.0000", V.local.sqty)
		F.Intrinsic.String.LPad(V.local.sqty,"0",16,V.Local.sqty)
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,V.Local.sqty,v.local.sBuildBOMs)
		
		'Part & Rev put together
		F.Intrinsic.String.GSSPartString(V.DataTable.DTBOM(v.Local.i).CUSTOMER_PART!FIELDVALTRIM,v.DataTable.dtbom(v.Local.i).CUST_REV!FIELDVALTRIM,V.Local.sPart)
		'v.Local.sPart.Set(V.DataTable.DTBOM(v.Local.i).FG_PART!FIELDVALTRIM)
		f.Intrinsic.Control.If(V.Local.sParent.Trim,=,v.Local.sPart.Trim)
			v.Local.sPart.Set("")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.String.RPad(v.Local.sPart," ",20,v.Local.sPart)
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,V.Local.sPart,v.local.sBuildBOMs)
		
		'UM
		F.Intrinsic.String.RPad(v.Args.UM," ",2,V.Local.sUM)
		F.Intrinsic.String.Left(V.Local.sUM,2,V.Local.sUM)
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,V.Local.sUM,v.local.sBuildBOMs)
		
		'Descriptions
		F.Intrinsic.String.RPad(" "," ",30,V.Local.sdesc)
		F.Intrinsic.String.Left(V.Local.sdesc,30,V.Local.sdesc)
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,V.Local.sdesc,v.local.sBuildBOMs)
		
		'Free Pad
		F.Intrinsic.String.RPad(V.Local.spad1," ",60,V.Local.spad1)
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,V.Local.spad1,v.local.sBuildBOMs)
		
		'Vendor Code
		F.Intrinsic.String.RPad(v.Args.Vendor," ",6,V.Local.sVendcode)
		F.Intrinsic.String.Left(V.Local.sVendcode,6,V.Local.sVendcode)
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,V.Local.svendcode,v.local.sBuildBOMs)
		
		'Free Pad
		F.Intrinsic.String.RPad(V.Local.spad2," ",48,V.Local.spad2)
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,V.Local.spad2,v.local.sBuildBOMs)
		
		'Category
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,V.args.Category,v.local.sBuildBOMs)
		
		'Source
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,V.args.Source,v.local.sBuildBOMs)
		
		'Free Pad
		F.Intrinsic.String.RPad(V.Local.spad3," ",90,V.Local.spad3)
		F.Intrinsic.String.Concat(v.local.sBuildBOMs,V.Local.spad3,v.local.sBuildBOMs)
		
		f.Intrinsic.String.Concat(v.local.sBuildBOMs,v.Ambient.NewLine,v.local.sBuildBOMs)
		f.Intrinsic.Math.add(v.Local.iInternal,1,v.Local.iInternal)
	f.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.Control.EndIf

'Bring string into File
F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sfilename,V.Local.sfiledir)
f.Intrinsic.File.Append2File(v.Local.sfiledir,v.local.sBuildBOMs)

'Delete the BOM in system
f.Intrinsic.String.Build("Delete from BOM_Eng where part IN ('{0}')",v.Local.sParent.Trim,V.Local.ssql)
f.ODBC.Connection!con.Execute(V.Local.ssql)
f.Intrinsic.String.Build("Delete from bom_mstr where parent IN ('{0}')",v.Local.sParent.Trim,V.Local.ssql)
F.ODBC.Connection!con.execute(V.Local.ssql)
Program.Sub.uploadBOM.End

Program.Sub.autoInc.Start
v.Local.ssql.Declare(string)
v.Local.lRouter.Declare(long)
v.Local.ssuffixpad.Declare(string)
v.Local.srouter.Declare(string)
v.Local.sparent.Declare(string)
V.Local.sHeadr.Declare(string)
V.Local.sTime.Declare(string)
v.Local.sret.Declare(string)
	f.in.string.format(v.Ambient.Now,"YYYY-MM-DD HH:NN:SS",v.Local.stime)
V.Local.sHeadr.Set("Headr_0")
v.local.ssql.set("SELECT F_LONG FROM OP_HEADER WHERE ID='400508' AND SEQUENCE='0001'")
F.odbc.connection!conx.executeandreturn(v.local.ssql,v.local.lRouter)
f.intrinsic.math.add(v.local.lrouter,1,v.local.lrouter)
v.local.ssql.set("UPDATE OP_HEADER SET F_LONG='{0}' WHERE ID='400508' AND SEQUENCE='0001'")
f.intrinsic.string.build(v.local.ssql,v.local.lrouter,v.local.ssql)
f.odbc.connection!conx.execute(v.local.ssql)
f.in.string.concat(v.local.lrouter,"_",v.local.sSuffixPad,v.local.srouter)
v.Local.ssql.Set("SELECT DISTINCT IFNULL(DEFAULT_PL,'FG'), IFNULL(DEFAULT_UM,'EA'), IFNULL(DEFAULT_SRC,'F') FROM GAB_4486_QRE_CONFIG")
f.odbc.connection!conx.executeandreturn(v.local.ssql,v.local.SRET)
f.intrinsic.string.split(v.local.sret,"*!*",v.local.sret)

f.Intrinsic.Control.If(v.Args.iNumber,=,0)
	f.Intrinsic.String.Concat("Headr_",v.Args.iNumber,v.Local.sHeadr)
	f.Data.DataTable.AddRow(v.Local.sHeadr,"BoostID",v.Local.srouter,"CustPart",v.Local.srouter,"CustRevPart","","PL",v.Local.sret(0),"UM",v.Local.sret(1),"SRC",v.Local.sret(3))
	f.Intrinsic.String.Build("INSERT INTO GAB_4486_QRE_HEAD (ROUTER,parent,date_last_updated,cust_part,cust_rev,quoteid,PL,UM,SRC) VALUES ('{0}','{1}','{2}','','',0,'{3}','{4}','{5}')",v.Local.srouter,"",v.Local.stime,V.Local.sret(0),V.Local.sret(1),V.Local.sret(2),v.Local.ssql)
f.Intrinsic.Control.Else
	f.Intrinsic.String.Build("INSERT INTO GAB_4486_QRE_HEAD (ROUTER,parent,date_last_updated,cust_part,cust_rev,quoteid,PL,UM,SRC) VALUES ('{0}','{1}','{2}','','',0,'{3}','{4}','{5}')",v.Local.srouter,v.DataTable.[v.Local.sHeadr](0).BoostID!FIELDVALTRIM,v.Local.stime,V.Local.sret(0),V.Local.sret(1),V.Local.sret(2),v.Local.ssql)
	f.Intrinsic.String.Concat("Headr_",v.Args.iNumber,v.Local.sHeadr)
	f.Data.DataTable.AddRow(v.Local.sHeadr,"BoostID",v.Local.srouter,"CustPart",v.Local.srouter,"CustRevPart","","PL",v.Local.sret(0),"UM",v.Local.sret(1),"SRC",v.Local.sret(3))
f.Intrinsic.Control.EndIf
f.ODBC.Connection!conx.execute(v.Local.ssql)
'Return next router number
f.in.variable.addrv("RA0",v.local.srouter)
Program.Sub.autoInc.End

Program.Sub.addrouter.Start
v.Local.iPlusOne.Declare(long)
v.Local.lThreshold.Declare(long)
v.Local.ssql.Declare(string)
v.Local.sRouterNum.Declare(string)
v.Local.bCustExit.Declare(Boolean)
v.Local.sret.Declare(string)
v.Local.sheadr.Declare(string)
v.Local.sMastHeadr.Declare(string)
v.Local.sMastHeadr.Set("Headr_0")
v.local.ssql.set("SELECT DISTINCT THRESHOLD FROM GAB_4486_QRE_CONFIG")
F.odbc.connection!conx.executeandreturn(v.local.ssql,v.local.lThreshold)

f.Intrinsic.Math.Add(v.args.i,1,v.Local.iPlusOne)
F.Intrinsic.Control.If(V.Local.iPlusOne,>,V.Local.lThreshold)
	F.Intrinsic.UI.Msgbox("Threshold Exceeded")
F.Intrinsic.Control.Else
	'Check customer
	f.Intrinsic.Control.CallSub(checkCustomer)
	f.in.variable.argtovar(ra0,v.lo.bCustExit)
	f.Intrinsic.Control.If(v.local.bCustExit,=,True)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.CallSub(autoInc,"iNumber",v.Local.iPlusOne)
	f.intrinsic.variable.argtovar(ra0,v.local.sRouterNum)
	gui.frmQRE.trvRouters.AddTreeNode(0,1,v.local.iPlusOne,v.Local.sRouterNum,TRUE) 
	gui.frmQRE.txtName.text(v.Local.sRouterNum)
	v.Local.ssql.set("SELECT DISTINCT DEFAULT_UM, DEFAULT_PL, DEFAULT_SRC, DEFAULT_PACKING,THRESHOLD FROM GAB_4486_QRE_CONFIG")
	f.ODBC.connection!conx.executeandreturn(v.Local.ssql,v.Local.sret)
	f.Intrinsic.string.split(v.Local.SRET,"*!*",v.Local.SRET)
	f.Intrinsic.String.Concat("Headr_",v.Local.iPlusOne,v.Local.sheadr)
	f.Data.DataTable.SetValue(v.Local.sheadr,0,"UM",V.Local.SRET(0),"PL",v.Local.sret(1),"SRC",v.Local.sret(2),"Customer",v.DataTable.[v.Local.sMastHeadr](0).CUSTOMER!FIELDVALTRIM)

	f.Intrinsic.control.callsub(ReloadGridLab,"iVal",v.Local.iPlusOne)
F.Intrinsic.Control.EndIf
Program.Sub.addRouter.End

Program.Sub.remRouter.Start
v.Local.sOptOutside.Declare(string)
v.Local.sDCTFiles.Declare(string)
v.Local.sRouter.Declare(string)
v.Local.sRoute.Declare(string)
v.Local.sMater.Declare(string)
v.Local.sPowdr.Declare(string)
v.Local.sHeadr.Declare(string)
v.Local.ssql.Declare(string)
v.Local.lHID.Declare(long)

'Set Values
f.Intrinsic.String.Concat("Route_",v.Args.i,v.Local.sRoute)
f.Intrinsic.String.Concat("Powdr_",v.Args.i,v.Local.sPowdr)
f.Intrinsic.String.Concat("Headr_",v.Args.i,v.Local.sHeadr)
f.Intrinsic.String.Concat("dctFiles",v.Args.i,v.Local.sDCTFiles)
f.Intrinsic.String.Concat("Mater_",v.Args.i,v.Local.sMater)
f.Intrinsic.String.Concat("optOutside",v.Args.i,"_click",v.Local.sOptOutside)
f.Data.DataTable.DeleteRow(v.Local.sRoute)
v.Local.sRouter.Set(v.DataTable.[v.Local.sHeadr](0).BOOSTID!FIELDVALTRIM)

'Delete from Database
f.Intrinsic.String.Build("SELECT HID FROM GAB_4486_QRE_HEAD WHERE Router='{0}'",v.Local.srouter,v.Local.ssql)
f.ODBC.Connection!conx.executeandreturn(v.Local.ssql,v.Local.lHID)
F.Intrinsic.String.Build("DELETE FROM GAB_4486_QRE_HEAD WHERE HID='{0}'",v.Local.lHID,v.Local.ssql)
f.ODBC.Connection!conx.execute(v.Local.ssql)
F.Intrinsic.String.Build("DELETE FROM GAB_4486_QRE_MATER WHERE HID='{0}'",v.Local.lHID,v.Local.ssql)
f.ODBC.Connection!conx.execute(v.Local.ssql)
F.Intrinsic.String.Build("DELETE FROM GAB_4486_QRE_LABOUR WHERE HID='{0}'",v.Local.lHID,v.Local.ssql)
f.ODBC.Connection!conx.execute(v.Local.ssql)
F.Intrinsic.String.Build("DELETE FROM GAB_4486_QRE_POWDER WHERE HID='{0}'",v.Local.lHID,v.Local.ssql)
f.ODBC.Connection!conx.execute(v.Local.ssql)

'Delete from Memory
GUI.frmQRE.trvRouters.RemoveItem(v.Args.i)

f.Data.DataTable.DeleteRow(v.Local.sMater)
f.Data.DataTable.DeleteRow(v.Local.sPowdr)
f.Data.DataTable.DeleteRow(v.Local.sHeadr)
f.data.dictionary.clear(v.Local.sDCTFiles)
gui.frmQRE.txtID.text(0)
Program.Sub.remRouter.End

Program.Sub.cmdCopyRt_click.Start

Program.Sub.cmdCopyRt_click.End

Program.Sub.cmdBrwCpy_click.Start
f.Intrinsic.control.try
	v.Local.sGSSPart.Declare(string)
	v.Local.sError.Declare(string)
	v.Local.sRet.Declare(string)
	v.Local.sRetPH.Declare(string)
	v.Local.sSQL.Declare(string)
	v.Local.sTitles.Declare(string)
	v.Local.sWidths.Declare(string)
	v.Local.sPart.Declare(string)
	v.Local.sRev.Declare(string)
	v.Local.sPartRev.Declare(string)
	v.Local.sDrawings.Declare(string)
	v.Local.sPair.declare(string)
	v.Local.sval.declare(string)
	v.Local.sPowd.declare(string)
	v.Local.sCallSub.declare(string)
	v.Local.sNewRouterNum.Declare(string)
	v.Local.sHeadr.Declare(string)
	v.Local.sMyRouter.Declare(string)
	v.Local.lMyHid.declare(long)
	v.Local.p.declare(long)
	v.Local.x.declare(long)
	v.Local.lFlag.declare(long)
	f.Intrinsic.string.split("Customer Part*!*Revision*!*Description*!*Customer Name*!*Customer*!*UM*!*User*!*BoostID#*!*HID","*!*",v.Local.sTitles)
	f.Intrinsic.string.split("2000*!*3000*!*3000*!*3000*!*2000*!*3000*!*3000*!*2000*!*100","*!*",v.Local.sWidths)
	f.Intrinsic.ui.setbrowserhottypeahead(true)
	v.Local.ssql.set("SELECT CUST_PART, CUST_REV, DESCRIPTION, NAME_CUSTOMER, GAB_4486_QRE_HEAD.CUSTOMER, UM, USERID,ROUTER,HID from GAB_4486_QRE_HEAD LEFT JOIN V_CUSTOMER_MASTER ON GAB_4486_QRE_HEAD.CUSTOMER = V_CUSTOMER_MASTER.CUSTOMER WHERE PARENT='' AND CUST_PART<>'' order by DATE_LAST_UPDATED DESC")
	f.Intrinsic.UI.Browser("Select a Router","conx",v.Local.sSQL,v.Local.sTitles,v.Local.sWidths,17000,10000,v.Local.sRet)
	f.Intrinsic.string.split(v.Local.sret,"*!*",v.Local.sRet)
	f.Intrinsic.Control.SelectCase(v.Local.sret)
	f.Intrinsic.control.Case("***CANCEL***")
	f.Intrinsic.control.CaseElse("")
		f.Intrinsic.control.if(v.Screen.frmQRE!txtName.text,<>,"")
			f.Intrinsic.UI.MsgBox("Existing routing open, do you want to save it?","Save Routers",3,v.Local.lFlag)
				f.Intrinsic.control.if(v.Local.lFlag,=,6)
					f.Intrinsic.control.callsub(saveRouters)
					f.Intrinsic.control.callsub(clearsub)
				f.Intrinsic.control.elseif(v.Local.lFlag,=,7)
					f.Intrinsic.control.callsub(clearsub)
				f.Intrinsic.control.else
				f.Intrinsic.control.exitsub
			f.Intrinsic.control.endif
		f.Intrinsic.control.endif
		f.Intrinsic.ui.invokewaitdialog("Loading Assembly")
		v.Local.ssql.set("SELECT * FROM GAB_4486_QRE_HEAD WHERE HID='{0}' OR PARENT='{1}' ORDER BY HID ")
		f.Intrinsic.string.build(v.Local.ssql,v.Local.sRet(8),v.Local.sret(7),v.Local.ssql)
		f.Intrinsic.Control.If(v.DataTable.dtCopy.Exists)
			f.Data.DataTable.Close("dtCopy")
		f.Intrinsic.Control.EndIf
		f.Data.DataTable.CreateFromSQL("dtCopy","conx",v.Local.ssql)
		
		f.Intrinsic.control.if(v.global.lThreshold,<,v.DataTable.dtCopy.RowCount)
			f.Intrinsic.ui.msgbox("The Part you tried loading exceeds your routing threshold.  Please go to QRE Config to update before loading this part again.  Routine will now exit.")
			f.Intrinsic.ui.closewaitdialog
			f.Intrinsic.control.exitsub
		f.Intrinsic.control.endif
		gui.frmQRE.txtName.text(v.Local.sret(7).Trim)
		
		f.Intrinsic.control.for(v.Local.p,0,v.DataTable.dtCopy.RowCount--,1)
			f.Intrinsic.Math.Add(v.Global.lcount,1,v.Global.lcount)
			v.Local.lMyHid.Set(v.DataTable.dtCopy(v.Local.p).HID!FIELDVAL)
			v.Local.sMyRouter.Set(v.DataTable.dtCopy(v.Local.p).ROUTER!FIELDVALTRIM)
			'Gui.frmQRE.txtName.text("")
			'Gui.frmQRE.txtBoostID.text("")
			Gui.frmQRE.txtCustRevPart.text("")
			f.Intrinsic.Control.CallSub(autoInc,"iNumber",v.Local.p)
			f.intrinsic.variable.argtovar(ra0,v.local.sNewRouterNum)
			f.Intrinsic.Control.If(v.Local.p,=,0)
				gui.frmQRE.txtBoostID.text(v.Local.sNewRouterNum)
			f.Intrinsic.Control.EndIf
			'gui.frmQRE.txtName.text(v.Local.sNewRouterNum)
			'gui.frmQRE.txtBoostID.text(v.Local.sNewRouterNum)
			
			f.Intrinsic.String.Concat("Headr_",v.Local.p,v.Local.sHeadr)
			f.Intrinsic.control.callsub(loadvals,"iVal",v.Local.p,"lHID",v.Local.lMyHid,"sCopy",v.Local.sNewRouterNum,"RouterNum",V.Local.sMyRouter,"ParentNum",v.Local.sRet(7))
			'f.Data.DataTable.SetValue(v.Local.sHeadr,0,"BoostID",v.Local.sNewRouterNum)
		f.Intrinsic.control.next(v.Local.p)
	f.Intrinsic.Control.EndSelect
	
	f.Intrinsic.Control.CallSub(triggerLoad,"MyIndex",0,"Static",0)
	
	f.Intrinsic.ui.closewaitdialog
f.Intrinsic.control.catch
	f.Intrinsic.ui.msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.control.endtry
Program.Sub.cmdBrwCpy_click.End


Program.Sub.formatLab.Start
v.local.ssql.declare(string)
v.local.sTimes.declare(string)
v.local.sTimes.set(" *!*M*!*S*!*H")
v.local.sWorkcentresDDL.declare(string)	
v.Local.x.Declare(long)

'Select WC Descriptions
v.Local.ssql.Set("SELECT * FROM GAB_4486_QRE_CONFIG ORDER BY WC_DESCRIPTION")
f.Data.DataTable.CreateFromSQL("dtWCL","conx",v.Local.ssql,true)
f.Intrinsic.Control.For(v.Local.x,0,v.DataTable.dtWCL.RowCount--,1)
	f.intrinsic.string.concat(v.local.sWorkcentresDDL,v.DataTable.dtWCL(v.Local.x).WC_DESCRIPTION!FIELDVALTRIM,"*!*",v.local.sWorkcentresDDL)
f.Intrinsic.Control.Next(v.Local.x)
f.Data.DataTable.Close("dtWCL")

v.Local.sRoute.Declare(string)
v.Local.sGVWorkcentre.Declare(string)
f.Intrinsic.String.Concat("Route_",v.Args.i,v.Local.sRoute)
f.Intrinsic.String.Concat("GVWorkcentre_",V.Args.I,v.Local.sGVWorkcentre)

gui.frmQRE.gsGCRoute[v.args.i].datasource(v.Local.sRoute)
gui.frmQRE.gsGCRoute[v.args.i].addGridviewFromDataTable(v.Local.sGVWorkcentre,v.Local.sRoute)

'Hide Column
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Labour","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"LID","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"HID","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Sell","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SellSetup","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SellPart","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SellRunGT","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SellSetGT","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Description","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Omit","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Attr","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"ExtraDesc","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"MinChrge","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"OpCode","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"LeadTime","Visible","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"FinTag","Visible","False")

'Widths
gui.frmQRE.gsGCRoute[v.args.i].columnEdit(v.Local.sGVWorkcentre,"Descr","Dropdownlist",v.local.sworkcentresDDL)
gui.frmQRE.gsGCRoute[v.args.i].columnEdit(v.Local.sGVWorkcentre,"T","Dropdownlist",v.local.sTimes)
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Labour","Width","100")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Operations","Width","90")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Duration","Width","90")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"T","Width","15")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"TimeReq","Width","40")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SetupTime","Width","50")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SetupRate","Width","50")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Descr","Width","135")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"LabourRate","Width","50")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"UM","Width","20")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Up","Width","15")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Down","Width","15")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SellDesc","Width","60")

'Caption
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Descr","Caption","Labour Type")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"TimeReq","Caption","Time")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"LabourRate","Caption","Labour Rate")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SetupTime","Caption","Setup Time")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SetupRate","Caption","Setup Rate")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SellDesc","Caption","Cost")

'Cell Font Size
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Labour","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Operations","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Duration","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"T","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"TimeReq","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SetupTime","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SetupRate","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Descr","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"LabourRate","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"UM","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Up","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Down","CellFontSize","10")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SellDesc","CellFontSize","10")

'ReadOnly
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Labour","ReadOnly","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Operations","ReadOnly","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Duration","ReadOnly","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"T","ReadOnly","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"TimeReq","ReadOnly","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SetupTime","ReadOnly","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SetupRate","ReadOnly","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Descr","ReadOnly","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"LabourRate","ReadOnly","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SellDesc","ReadOnly","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Up","ReadOnly","True")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Down","ReadOnly","True")
'Editable
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Up","AllowEdit","False")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"Down","AllowEdit","False")
'Wordwrap
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"SellDesc","CellWordWrap","wrap")

'Gridview properties
Gui.frmQRE.gsGCRoute[v.args.i].SetGridViewProperty(v.Local.sGVWorkcentre,"AllowDeleteRows","True")
Gui.frmQRE.gsGCRoute[v.args.i].SetGridViewProperty(v.Local.sGVWorkcentre,"OptionsViewRowAutoHeight","True")
gui.frmQRE.gsGCRoute[v.args.i].setcolumnproperty(v.Local.sGVWorkcentre,"LabourRate","EditMaskType","numeric")
	
Program.Sub.formatLab.End

Program.Sub.Preflight.Start
Program.Sub.Preflight.End

Program.Sub.addOut.Start
v.Local.soptOutside.Declare(string)
v.Local.sOptMat.Declare(string)
v.Local.sTxtMCost.Declare(string)
v.Local.sTXTMPPWU.Declare(string)
v.Local.sTxtMAltD.Declare(string)
v.Local.sTxtMUoMC.Declare(string)
v.Local.sTxtMMark.Declare(string)
v.Local.sOptStd.Declare(string)
v.Local.sDDLMFinh.Declare(string)
v.Local.sTxtMPart.Declare(string)
v.Local.stxtMQtyS.Declare(string)
v.Local.stxtMQtyR.Declare(string)
v.Local.stxtmdesc.Declare(string)
v.Local.sTxtMSupp.Declare(string)
v.Local.sTxtMCode.Declare(string)
v.Local.sDDLMSupp.Declare(string)
v.Local.slblMMinR.Declare(string)
v.Local.sCHKMWaiv.Declare(string)
V.Local.fMMarkup.Declare(Float)
v.Local.sMater.Declare(string)
f.Intrinsic.String.Concat("Mater_",v.args.i,v.Local.sMater)
F.ODBC.Connection!CONX.ExecuteAndReturn("select (MATERIAL_2-1)*100 AS MATERIAL_MARKUP from V_MARKUP_PCT",V.Local.fMMarkup)
f.Intrinsic.String.Concat("optOutside",v.args.i,v.Local.soptOutside)
f.Intrinsic.String.Concat("optMat",v.args.i,v.Local.sOptMat)
f.Intrinsic.String.Concat("txtMCost",v.args.i,v.Local.sTxtMCost)
F.Intrinsic.String.Concat("txtMPPWU",v.args.i,v.Local.sTxtMPPWU)
F.Intrinsic.String.Concat("txtMUoMC",v.args.i,v.Local.sTxtMUoMC)
f.Intrinsic.String.Concat("TxtMMark",v.Args.i,v.Local.sTxtMMark)
f.Intrinsic.String.Concat("optStd",v.args.i,v.Local.sOptStd)
f.Intrinsic.String.Concat("DDLMFinh",v.args.i,v.Local.sDDLMFinh)
f.Intrinsic.String.Concat("TxtMPart",v.args.i,v.Local.sTxtMPart)
f.Intrinsic.String.Concat("txtMQtyS",v.args.i,v.Local.stxtMQtyS)
f.Intrinsic.String.Concat("txtMQtyR",v.args.i,v.Local.stxtMQtyR)
f.Intrinsic.String.Concat("txtmdesc",v.args.i,v.Local.stxtmdesc)
f.Intrinsic.String.Concat("TxtMAltD",v.args.i,v.Local.sTxtMAltD)
f.Intrinsic.String.Concat("TxtMSupp",v.args.i,v.Local.sTxtMSupp)
f.Intrinsic.String.Concat("TxtMCode",v.args.i,v.Local.sTxtMCode)
f.Intrinsic.String.Concat("DDLMSupp",v.args.i,v.Local.sDDLMSupp)
f.Intrinsic.String.Concat("CHKMWaiv",v.Args.i,v.Local.sCHKMWaiv)
f.Intrinsic.String.Concat("lblMMinR",v.Args.i,v.Local.slblMMinR)

'If material radio added
f.in.control.if(v.Screen.frmQRE![v.Local.sOptMat].value,=,"1")
	v.local.bCostC.declare(Boolean)
	v.local.bPPWUC.declare(Boolean)
	v.local.bAltDC.declare(Boolean)
	v.local.fCost.declare(float)
	F.Intrinsic.Control.SelectCase(v.screen.frmQRE![v.Local.sTxtMCost].Text)
		f.Intrinsic.Control.Case("")
			f.intrinsic.control.if(v.screen.frmQRE![v.local.sTxtMPart].Text,<>,"NOMATERIAL")
				gui.frmQRE.[v.local.sTXTMCost].BackColor(8421631)
				v.local.bCostC.set(True)
			f.intrinsic.control.else
				gui.frmQRE.[v.local.sTXTMCost].backcolor(-2147483643)
			f.intrinsic.control.endif
	F.Intrinsic.Control.EndSelect
	v.local.fCost.set(v.screen.frmQRE![v.local.sTXTMCost].Text)
	F.Intrinsic.Control.SelectCase(v.local.fCost)
		f.Intrinsic.Control.Case(0)
			f.intrinsic.control.if(v.screen.frmQRE![v.local.sTxtMPart].Text,<>,"NOMATERIAL")
				gui.frmQRE.[v.local.sTXTMCost].BackColor(8421631)
				v.local.bCostC.set(True)
			f.intrinsic.control.else
				gui.frmQRE.[v.local.sTXTMCost].backcolor(-2147483643)
			f.intrinsic.control.endif
		f.in.control.CaseElse
			gui.frmQRE.[v.local.sTXTMCost].backcolor(-2147483643)
	F.Intrinsic.Control.EndSelect
	
	'If PPWU is blank or 0, then error
	F.Intrinsic.Control.SelectCase(v.screen.frmQRE![v.local.sTXTMPPWU].Text)
		f.Intrinsic.Control.Case("")
			gui.frmQRE.[v.local.sTXTMPPWU].BackColor(8421631)
			v.local.bPPWUC.set(True)
		f.Intrinsic.Control.Case(0)
			gui.frmQRE.[v.local.sTXTMPPWU].BackColor(8421631)
			v.local.bPPWUC.set(True)
		f.in.control.CaseElse
			gui.frmQRE.[v.local.sTXTMPPWU].backcolor(-2147483643)
	F.Intrinsic.Control.EndSelect
	
	'If Min charge is blank or 0, then error
	F.Intrinsic.Control.SelectCase(v.screen.frmQRE![v.local.sTxtMAltD].Text)
		f.Intrinsic.Control.Case("")
			gui.frmQRE.[v.local.sTxtMAltD].BackColor(8421631)
			v.local.bAltDC.set(True)
		f.Intrinsic.Control.Case(0)
			gui.frmQRE.[v.local.sTxtMAltD].BackColor(8421631)
			v.local.bAltDC.set(True)
		f.in.control.CaseElse
			gui.frmQRE.[v.local.sTxtMAltD].backcolor(-2147483643)
	F.Intrinsic.Control.EndSelect
	
	'If those checks fail, then exit routine
	f.in.control.if(v.Local.bCostC)
		f.in.control.exitsub
	f.in.control.endif
	f.in.control.if(v.Local.bPPWUC)
		f.in.control.exitsub
	f.in.control.endif
	f.in.control.if(v.Local.bAltDC)
		f.in.control.exitsub
	f.in.control.endif
'logic for components and others.....
f.in.control.else
	gui.frmQRE.[v.local.sTXTMPPWU].text(0)
f.in.control.endif

'Set Sequence type
v.local.stype.declare(string)
f.in.control.if(v.Screen.frmQRE![v.Local.sOptMat].value,=,"1")
	v.local.stype.set("MAT")
f.in.control.else
	v.local.stype.set("")
f.in.control.endif

'Check if Material is already existing
v.local.bMat.declare(boolean)
v.local.sMat.declare(string)
v.local.x.declare(long,0)
f.in.control.if(v.Screen.frmQRE![v.Local.sOptMat].value,=,"1")
	f.in.control.for(v.Local.x,0,v.DataTable.Mater_[v.Args.i].RowCount--,1)
		f.in.control.if(v.DataTable.Mater_[v.Args.i](v.Local.x).SEQ!FieldValTrim,=,"MAT")
			f.in.ui.msgbox("Material already exists, cannot add to this routing.")
			f.in.control.exitsub
		f.in.control.endif
	f.in.control.next(v.Local.x)
f.in.control.endif

v.local.sret.declare(string)
v.local.sval.declare(string)
v.local.sMO.declare(string)
v.local.bval.declare(boolean)
v.local.bval2.declare(boolean)
v.local.bval.set(v.screen.frmQRE![v.Local.sOptStd].value)
F.Intrinsic.Control.SelectCase(v.local.bval)
	f.Intrinsic.Control.Case(True)
		F.Intrinsic.Control.SelectCase(v.Screen.frmQRE![v.Local.sDDLMFinh].value)
			f.Intrinsic.Control.Case("Powdercoat")
				v.local.sMO.set("P")
			f.Intrinsic.Control.CaseElse
				v.local.sMO.set("O")
		f.intrinsic.control.EndSelect
	f.Intrinsic.Control.CaseElse
		v.local.sMO.set("M")
f.intrinsic.control.EndSelect

f.in.control.if(v.Local.sMO,=,"O","or",v.Local.sMO,=,"P")
	F.intrinsic.string.concat(v.screen.frmQRE![v.Local.sDDLMFinh].value,"-----",v.screen.frmQRE![v.local.sTXTMPPWU].text,"-----",v.screen.frmQRE![v.Local.sTxtMUoMC].text,"-----",v.screen.frmQRE![v.local.sTXTMCost].text,"-----",V.screen.frmQRE![v.Local.stxtMQtyS].text,"-----",v.screen.frmQRE![v.Local.sTxtMQtyR].text,"-----",v.screen.frmQRE![v.Local.stxtmdesc].text,"-----",v.screen.frmQRE![v.local.sTxtMAltD].text,"-----",v.screen.frmQRE![v.Local.sTxtMSupp].text,"-----",v.screen.frmQRE![v.Local.sTxtMCode].text,"-----",v.screen.frmQRE![v.Local.sTxtMMark].text,v.local.sval)
f.in.control.else
	F.intrinsic.string.concat(v.screen.frmQRE![v.local.sTxtMPart].text,"-----",v.screen.frmQRE![v.local.sTXTMPPWU].text,"-----",v.screen.frmQRE![v.Local.sTxtMUoMC].text,"-----",v.screen.frmQRE![v.local.sTXTMCost].text,"-----",V.screen.frmQRE![v.Local.stxtMQtyS].text,"-----",v.screen.frmQRE![v.Local.sTxtMQtyR].text,"-----",v.screen.frmQRE![v.Local.stxtmdesc].text,"-----",v.screen.frmQRE![v.local.sTxtMAltD].text,"-----",v.Ambient.DblQuote,v.screen.frmQRE![v.Local.sTxtMSupp].text,"-----",v.screen.frmQRE![v.Local.sTxtMCode].text,"-----",v.screen.frmQRE![v.Local.sTxtMMark].text,v.local.sval)
f.in.control.endif
F.intrinsic.string.split(v.local.sval,"-----",v.local.sret)
			
F.Intrinsic.Control.SelectCase(v.local.sret(5).trim)
	f.Intrinsic.Control.Case("")
		v.local.sret(5).set(0)
f.intrinsic.control.EndSelect

F.Intrinsic.Control.SelectCase(v.local.sret(8).trim)
	f.Intrinsic.Control.Case("")
		v.local.sret(8).set(0)
f.intrinsic.control.EndSelect

F.Intrinsic.Control.SelectCase(v.local.sret(1).trim)
	f.Intrinsic.Control.Case("")
		v.local.sret(1).set(0)
f.intrinsic.control.EndSelect

F.Intrinsic.Control.SelectCase(v.local.sret(3).trim)
	f.Intrinsic.Control.Case("")
		v.local.sret(3).set(0)
f.intrinsic.control.EndSelect

F.Intrinsic.Control.SelectCase(v.local.sret(4).trim)
	f.Intrinsic.Control.Case("")
		v.local.sret(4).set(0)
f.intrinsic.control.EndSelect

F.Intrinsic.Control.SelectCase(v.local.sret(10).trim)
	f.Intrinsic.Control.Case("")
		v.local.sret(10).set(0)
f.intrinsic.control.EndSelect


f.in.control.if(v.Local.sMO,=,"O","or",v.Local.sMO,=,"P")
	f.data.datatable.addrow(v.Local.sMater,"Part",v.local.sret(0),"LMO",v.local.sMO,"PPWU",v.local.sret(1),"UM","EA","Cost",v.local.sret(3),"Setup",V.local.sret(4),"Run",0,"Descr",v.local.sret(6),"Alt",v.Screen.frmQRE![v.Local.slblMMinR].caption,"Supp",v.local.sret(5),"Code",v.Screen.frmQRE![v.Local.sCHKMWaiv].value,"Mark",v.local.sret(10),"Sell",0)
	gui.frmQRE.[v.local.sTxtMPart].text("")
	gui.frmQRE.[v.local.sTXTMPPWU].text("")
	gui.frmQRE.[v.Local.sTxtMUoMC].text("")
	gui.frmQRE.[v.local.sTXTMCost].text("")
	gui.frmQRE.[v.Local.stxtMQtyS].text("")
	gui.frmQRE.[v.Local.stxtMQtyR].text("")
	gui.frmQRE.[v.Local.stxtmdesc].text("")
	gui.frmQRE.[v.local.sTxtMAltD].text("")
	gui.frmQRE.[v.Local.sTxtMSupp].text("")
	gui.frmQRE.[v.Local.sTxtMCode].text("")
	gui.frmQRE.[v.Local.sTxtMMark].text(V.Local.fMMarkup)
	gui.frmQRE.[v.Local.sTxtMCode].text("")
	gui.frmqre.lblMMinR[v.args.i].visible(True)
f.in.control.else		
	f.data.datatable.addrow(v.Local.sMater,"Part",v.local.sret(0),"LMO",v.local.sMO,"PPWU",v.local.sret(1),"UM",v.local.sret(2),"Cost",v.local.sret(3),"Setup",V.local.sret(4),"Run",v.local.sret(5),"Descr",v.local.sret(6),"Alt",v.local.sret(7),"Supp",v.local.sret(8),"Code",v.local.sret(9),"Mark",v.local.sret(10),"Sell",0,"SEQ",v.Local.stype)
	gui.frmQRE.[v.local.sTxtMPart].text("")
	gui.frmQRE.[v.local.sTXTMPPWU].text("")
	gui.frmQRE.[v.Local.sTxtMUoMC].text("")
	gui.frmQRE.[v.local.sTXTMCost].text("")
	gui.frmQRE.[v.Local.stxtMQtyS].text("")
	gui.frmQRE.[v.Local.stxtMQtyR].text("")
	gui.frmQRE.[v.Local.stxtmdesc].text("")
	gui.frmQRE.[v.Local.sTxtMAltD].text("")
	gui.frmQRE.[v.Local.sTxtMSupp].text("")
	gui.frmQRE.[v.Local.sTxtMCode].text("")
	gui.frmQRE.[v.Local.sTxtMMark].text(V.Local.fMMarkup)
	gui.frmQRE.[v.Local.sTxtMCode].text("")
	gui.frmQRE.[v.Local.sDDLMSupp].ClearItems
f.in.control.endif
Program.Sub.addOut.End

Program.Sub.FormatGridsMat.Start
Variable.Local.ssql.declare(string)
v.Local.sMater.Declare
v.Local.iVal.Declare
v.Local.iVal.Set(v.Args.ival)
f.Intrinsic.String.Concat("Mater_",v.Local.iVal,v.Local.sMater)
gui.frmQRE.gsGCMater.datasource(v.Local.sMater)
gui.frmQRE.gsGCMater.addGridviewFromDataTable("GVMater",v.Local.sMater)
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","MID","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","HID","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","LMO","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","SEQ","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Supp","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Code","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Sell","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Setup","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","EntryDate","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Omit","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","LeadTime","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","CodeSource","Visible","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","PPWU","ReadOnly","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Cost","ReadOnly","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Setup","ReadOnly","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Run","ReadOnly","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Descr","ReadOnly","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Mark","ReadOnly","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Alt","ReadOnly","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","UM","ReadOnly","False")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Part","Width","60")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","PPWU","Width","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","UM","Width","1")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Cost","Width","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Setup","Width","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Run","Width","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Descr","Width","120")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Mark","Width","1")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","SellDesc","Width","50")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","PPWU","CellFontSize","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Cost","CellFontSize","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Setup","CellFontSize","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Run","CellFontSize","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Descr","CellFontSize","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Mark","CellFontSize","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Alt","CellFontSize","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","UM","CellFontSize","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Part","CellFontSize","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","SellDesc","CellFontSize","10")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","PPWU","Caption","Parts/Unit")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Alt","Caption","Min. Usage")
gui.frmQRE.gsGCMater.setcolumnproperty("GVMater","Descr","Caption","Description")
Gui.frmQRE.gsGCMater.SetGridViewProperty("GVMater","AllowDeleteRows","True")
Gui.frmQRE.gsGCMater.SetGridViewProperty("GVMater","Editable","True")
Gui.frmQRE.gsGCMater.SetGridViewProperty("GVMater","ReadOnly","False")
Program.Sub.formatgridsmat.End


Program.Sub.ReloadGridLab.Start
v.Local.x.declare(long)
v.Local.ssql.declare(string)
v.Local.sTimes.declare(string)
v.Local.sTimeLong.declare(string)
v.Local.sdura.declare(string)
v.Local.soper.declare(string)
v.Local.sspac.declare(string)
v.Local.ssepr.declare(string)
v.Local.sRoute.Declare
v.Local.iVal.Declare
v.Local.iVal.Set(v.Args.iVal)
f.Intrinsic.String.Concat("Route_",v.Local.iVal,v.Local.sRoute)
v.Local.sspac.set("          ")

v.Local.ssepr.set("/")
v.Local.sTimes.set(" *!*M*!*S*!*H")

v.Local.ssql.set("SELECT * FROM GAB_4486_QRE_CONFIG WHERE WORKCENTRES_DISPLAY<>'' ORDER BY WORKCENTRES_ORDER")
f.Intrinsic.control.if(v.Datatable.dtLWC.exists)
	f.Data.datatable.close("dtLWC")
f.Intrinsic.control.endif
f.Data.DataTable.Createfromsql("dtLWC","conx",v.Local.ssql,true)
f.Intrinsic.control.for(v.Local.x,0,v.Datatable.dtLWC.RowCount--,1)
	f.Intrinsic.Control.SelectCase(v.Datatable.dtLWC(v.Local.x).DEFAULT_RUN_TYPE!FIELDVAL)
	f.Intrinsic.Control.Case("S")
		v.Local.sTimeLong.set("Seconds")
	f.Intrinsic.Control.Case("M")
		v.Local.sTimeLong.set("Minutes")
	f.Intrinsic.Control.Case("H")
		v.Local.sTimeLong.set("Hours")
	f.Intrinsic.Control.EndSelect
	f.Intrinsic.Control.SelectCase(v.Datatable.dtLWC(v.Local.x).LABOUR_UNIT_DESC2!FieldVal)
	f.Intrinsic.Control.Case("")
		f.Data.DataTable.AddRow(v.Local.sRoute,"UM",v.Datatable.dtLWC(v.Local.x).COST_UNIT!Fieldval,"Labour",v.Datatable.dtLWC(v.Local.x).WORKCENTRE!Fieldval,"T",v.Datatable.dtLWC(v.Local.x).DEFAULT_RUN_TYPE!Fieldval,"LabourRate",v.Datatable.dtLWC(v.Local.x).DEFAULT_RUN_RATE!fieldval,"SetupTime",v.Datatable.dtLWC(v.Local.x).DEFAULT_SETUP_TIME!Fieldval,"SetupRate",v.Datatable.dtLWC(v.Local.x).DEFAULT_SETUP_RATE!Fieldval,"Descr",v.Datatable.dtLWC(v.Local.x).WC_DESCRIPTION!fieldvaltrim,"Operations",v.Local.sOper,"Duration",v.Local.sdura)
	f.Intrinsic.Control.CaseElse
		f.Intrinsic.string.concat(v.Local.sspac,v.Datatable.dtLWC(v.Local.x).LABOUR_UNIT_DESC2!fieldval,v.Local.ssepr,v.Datatable.dtLWC(v.Local.x).COST_UNIT!Fieldval,v.Local.soper)
		f.Intrinsic.string.concat(v.Local.sspac,v.Local.stimelong,v.Local.ssepr,v.Datatable.dtLWC(v.Local.x).LABOUR_UNIT_DESC1!FieldVal,v.Local.sdura)
		f.Data.DataTable.AddRow(v.Local.sRoute,"T",v.Datatable.dtLWC(v.Local.x).DEFAULT_RUN_TYPE!Fieldval,"Labour",v.Datatable.dtLWC(v.Local.x).WORKCENTRE!fieldval,"LabourRate",v.Datatable.dtLWC(v.Local.x).DEFAULT_RUN_RATE!Fieldval,"SetupTime",v.Datatable.dtLWC(v.Local.x).DEFAULT_SETUP_TIME!fieldval,"SetupRate",v.Datatable.dtLWC(v.Local.x).DEFAULT_SETUP_RATE!fieldval,"Descr",v.Datatable.dtLWC(v.Local.x).WC_DESCRIPTION!fieldvaltrim,"Operations",v.Local.sOper,"Duration",v.Local.sdura)
	f.Intrinsic.Control.EndSelect
	v.Local.sOper.set("")
	v.Local.sDura.set("")
f.Intrinsic.control.next(v.Local.x)
f.Data.datatable.close("dtLWC")
Program.Sub.ReloadGridLab.End

Program.Sub.FormatGridsLab.Start
v.Local.ssql.declare(string)
v.Local.sTimes.declare(string)
v.Local.sWorkcentresDDL.declare(string)
v.Local.sGCRoute.Declare(string,"gsgcRoute")
v.Local.sGV.Declare(string,"GVWorkcentre")
v.Local.sRoute.Declare
v.local.i.Declare(long)
v.Local.iVal.Declare(long)
v.Local.iVal.Set(v.Args.ival)

f.Intrinsic.String.Concat("Route_",v.Local.iVal,v.Local.sRoute)
v.Local.sTimes.set(" *!*M*!*S*!*H")
v.Local.ssql.set("SELECT * FROM GAB_4486_QRE_CONFIG ORDER BY WC_DESCRIPTION")
f.Data.DataTable.CreateFromSQL("dtL","conx",v.Local.ssql)
f.Intrinsic.Control.For(v.Local.i,0,v.DataTable.dtL.RowCount--,1)
	f.Intrinsic.string.concat(v.Local.sWorkcentresDDL,v.DataTable.dtL(v.Local.i).WC_DESCRIPTION!fieldvaltrim,"*!*",v.Local.sWorkcentresDDL)
f.Intrinsic.Control.Next(v.Local.i)
f.Data.DataTable.Close("dtL")

gui.frmQRE.[v.Local.sGCRoute].datasource(v.local.sRoute)
gui.frmQRE.[v.Local.sGCRoute].addGridviewFromDataTable(v.local.sGV,v.local.sRoute)
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Labour","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"LID","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"HID","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Sell","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SellSetup","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SellPart","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SellRunGT","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SellSetGT","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Omit","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Description","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Attrs","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Attr","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"ExtraDesc","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"MinChrge","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"OpCode","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"LeadTime","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"FinTag","Visible","False")
gui.frmQRE.[v.Local.sGCRoute].columnEdit(v.local.sGV,"Descr","Dropdownlist",v.Local.sworkcentresDDL)
gui.frmQRE.[v.Local.sGCRoute].columnEdit(v.local.sGV,"T","Dropdownlist",v.Local.sTimes)
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Labour","Width","100")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Operations","Width","90")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Duration","Width","90")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"T","Width","15")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"TimeReq","Width","40")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SetupTime","Width","50")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SetupRate","Width","50")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Descr","Width","135")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"LabourRate","Width","50")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"UM","Width","20")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Up","Width","15")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Down","Width","15")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SellDesc","Width","60")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Descr","Caption","Labour Type")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"TimeReq","Caption","Time")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"LabourRate","Caption","Labour Rate")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SetupTime","Caption","Setup Time")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SetupRate","Caption","Setup Rate")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SellDesc","Caption","Cost")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Labour","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Operations","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Duration","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"T","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"TimeReq","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SetupTime","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SetupRate","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Descr","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"LabourRate","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"UM","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Up","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Down","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SellDesc","CellFontSize","10")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Labour","ReadOnly","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Operations","ReadOnly","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Duration","ReadOnly","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"T","ReadOnly","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"TimeReq","ReadOnly","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SetupTime","ReadOnly","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SetupRate","ReadOnly","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Descr","ReadOnly","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"LabourRate","ReadOnly","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SellDesc","ReadOnly","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Up","ReadOnly","True")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Down","ReadOnly","True")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Up","AllowEdit","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"Down","AllowEdit","False")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"SellDesc","CellWordWrap","wrap")
Gui.frmQRE.[v.Local.sGCRoute].SetGridViewProperty(v.local.sGV,"AllowDeleteRows","True")
Gui.frmQRE.[v.Local.sGCRoute].SetGridViewProperty(v.local.sGV,"OptionsViewRowAutoHeight","True")
gui.frmQRE.[v.Local.sGCRoute].setcolumnproperty(v.local.sGV,"LabourRate","EditMaskType","numeric")
Program.Sub.FormatGridsLab.End

Program.Sub.cmdRB_click.Start
f.Intrinsic.control.try
	v.Local.sGSSPart.Declare(string)
	v.Local.sError.Declare(string)
	v.Local.sRet.Declare(string)
	v.Local.sRetPH.Declare(string)
	v.Local.sSQL.Declare(string)
	v.Local.sTitles.Declare(string)
	v.Local.sWidths.Declare(string)
	v.Local.sPart.Declare(string)
	v.Local.sRev.Declare(string)
	v.Local.sPartRev.Declare(string)
	v.Local.sDrawings.Declare(string)
	v.Local.sPair.declare(string)
	v.Local.sval.declare(string)
	v.Local.sPowd.declare(string)
	v.Local.sCallSub.declare(string)
	v.Local.lMyHid.declare(long)
	V.Local.sSplit.Declare
	v.Local.p.declare(long)
	v.Local.x.declare(long)
	v.Local.lFlag.declare(long)
	'F.Intrinsic.Debug.ShowCallerInfo
	f.Intrinsic.string.split("Customer Part*!*Revision*!*Description*!*Customer Name*!*Customer*!*UM*!*User*!*BoostID#*!*HID*!*Date Last Updated","*!*",v.Local.sTitles)
	f.Intrinsic.string.split("2000*!*3000*!*3000*!*3000*!*1000*!*500*!*1500*!*1100*!*100*!*2000","*!*",v.Local.sWidths)
	f.Intrinsic.ui.setbrowserhottypeahead(true)
	v.Local.ssql.set("SELECT CUST_PART, CUST_REV, DESCRIPTION, NAME_CUSTOMER, GAB_4486_QRE_HEAD.CUSTOMER, UM, USERID, ROUTER, HID,DATE_LAST_UPDATED from GAB_4486_QRE_HEAD LEFT JOIN V_CUSTOMER_MASTER ON GAB_4486_QRE_HEAD.CUSTOMER = V_CUSTOMER_MASTER.CUSTOMER WHERE PARENT='' AND CUST_PART<>'' order by DATE_LAST_UPDATED DESC")
	f.Intrinsic.UI.Browser("Select a Router","conx",v.Local.sSQL,v.Local.sTitles,v.Local.sWidths,17000,10000,v.Local.sRet)
	f.Intrinsic.string.split(v.Local.sret,"*!*",v.Local.sRet)
	f.Intrinsic.Control.SelectCase(v.Local.sret)
	f.Intrinsic.control.Case("***CANCEL***")
	f.Intrinsic.control.CaseElse("")
		f.Intrinsic.control.if(v.Screen.frmQRE!txtName.text,<>,"")
			f.Intrinsic.UI.MsgBox("Existing routing open, do you want to save it?","Save Routers",3,v.Local.lFlag)
				f.Intrinsic.control.if(v.Local.lFlag,=,6)
					f.Intrinsic.control.callsub(saveRouters)
					f.Intrinsic.control.callsub(clearsub)
				f.Intrinsic.control.elseif(v.Local.lFlag,=,7)
					f.Intrinsic.control.callsub(clearsub)
				f.Intrinsic.control.else
				f.Intrinsic.control.exitsub
			f.Intrinsic.control.endif
		f.Intrinsic.control.endif
	f.Intrinsic.ui.invokewaitdialog("Loading Assembly")
	v.Local.ssql.set("SELECT HID,ROUTER FROM GAB_4486_QRE_HEAD WHERE HID='{0}' OR PARENT='{1}' ORDER BY HID ")
	f.Intrinsic.string.build(v.Local.ssql,v.Local.sRet(8),v.Local.sret(7),v.Local.ssql)
	f.ODBC.connection!conx.executeandreturn(v.Local.ssql,v.Local.sretPH)
	f.Intrinsic.string.split(v.Local.sretPH,"#$#",v.Local.sretPH)
	f.Intrinsic.control.if(v.global.lThreshold,<,v.Local.sretPH.ubound)
		f.Intrinsic.ui.msgbox("The Part you tried loading exceeds your routing threshold.  Please go to QRE Config to update before loading this part again.  Routine will now exit.")
		f.Intrinsic.ui.closewaitdialog
		f.Intrinsic.control.exitsub
	f.Intrinsic.control.endif
	gui.frmQRE.txtName.text(v.Local.sret(7).Trim)
	
	f.Intrinsic.control.for(v.Local.p,0,v.Local.sretPH.ubound,1)
		f.Intrinsic.Math.Add(v.Global.lcount,1,v.Global.lcount)
		f.Intrinsic.string.split(v.Local.sRetPH(v.Local.p),"*!*",v.Local.sSplit)
		f.Intrinsic.control.callsub(loadvals,"iVal",v.Local.p,"lHID",v.Local.sSplit(0),"sCopy",0,"RouterNum",v.Local.sSplit(1).trim)
	f.Intrinsic.control.next(v.Local.p)
	
	f.Intrinsic.Control.CallSub(triggerLoad,"MyIndex","0","Static",0)
	f.Intrinsic.Control.EndSelect
	f.Intrinsic.ui.closewaitdialog
f.Intrinsic.control.catch
	f.Intrinsic.ui.msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.control.endtry
Program.Sub.cmdRB_click.End

Program.Sub.loadThreshold.Start
v.Local.sret.Declare
v.Local.ssql.Declare
v.Local.sHeadr.Declare
v.Local.sPowdr.Declare
v.Local.sRoute.Declare
v.Local.sMater.Declare
v.Local.sDCTFiles.Declare
v.Local.sDVMater.Declare
v.Local.sDVRoute.Declare
V.Local.j.Declare(long)
v.Local.ssql.set("SELECT DISTINCT THRESHOLD FROM GAB_4486_QRE_CONFIG")
f.ODBC.connection!conx.executeandreturn(v.Local.ssql,v.Local.sret)
v.Global.lThreshold.Set(v.Local.sret)
f.Intrinsic.Control.For(v.Local.j,0,v.global.lThreshold,1)
	f.Intrinsic.String.Concat("Headr_",v.Local.j,v.Local.sHeadr)
	f.Intrinsic.String.Concat("Powdr_",v.Local.j,v.Local.sPowdr)
	f.Intrinsic.String.Concat("Route_",v.Local.j,v.Local.sroute)
	f.Intrinsic.String.Concat("Mater_",v.Local.j,v.Local.smater)
	f.Intrinsic.String.Concat("DVMater_",v.Local.j,v.Local.sDVMater)
	f.Intrinsic.String.Concat("DVRoute_",v.Local.j,v.Local.sDVRoute)
	f.Intrinsic.String.Concat("dctFiles",v.Local.j,v.Local.sDCTFiles)
	f.Data.Dictionary.Create(v.Local.sdctfiles)
	
	f.Data.DataTable.Create(v.Local.sHeadr,true)
	f.Data.DataTable.AddColumn(v.Local.sHeadr,Name,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,UM,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,PL,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,SRC,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,Markup,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,QtyBreak,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,Desc,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,Draw,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,CustPart,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,Customer,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,OMarkup,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,OQty,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,CustRevPart,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,Notes,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,BoostID,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,Drawings,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,RouterCompl,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,Inactive,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,DocGroup,"String")
	f.Data.DataTable.AddColumn(v.Local.sHeadr,Category,"String")

	f.Data.DataTable.Create(v.Local.sPowdr,true)
	f.Data.DataTable.AddColumn(v.Local.sPowdr,Colour,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,ProdLength,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,ProdWidth,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,PowdThick,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,PowdPrice,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,PowdCost,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,ChemCost,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,CalcPriceResult,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,PricePerUnit,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,Markup,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,Gap,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,Man,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,LabourRate,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,SetupCost,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,LineSpeed,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,LabourCost,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,NetPriceResult,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,MinChargeResult,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,WaiveMin,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,Pow,"String")
	f.Data.DataTable.AddColumn(v.Local.sPowdr,MPowP,"String")

	f.Data.DataTable.Create(v.Local.sroute,true)
	f.Data.DataTable.AddColumn(v.Local.sroute,Descr,"String")
	f.Data.DataTable.AddColumn(v.Local.sroute,Labour,"String")
	f.Data.DataTable.AddColumn(v.Local.sroute,Operations,"String")
	f.Data.DataTable.AddColumn(v.Local.sroute,Duration,"String")
	f.Data.DataTable.AddColumn(v.Local.sroute,TimeReq,"Float")
	f.Data.DataTable.AddColumn(v.Local.sroute,T,"String")
	f.Data.DataTable.AddColumn(v.Local.sroute,UM,"String")
	f.Data.DataTable.AddColumn(v.Local.sroute,LabourRate,"Float")
	f.Data.DataTable.AddColumn(v.Local.sroute,SetupTime,"Float")
	f.Data.DataTable.AddColumn(v.Local.sroute,SetupRate,"Float")
	f.Data.DataTable.AddColumn(v.Local.sroute,LID,"Integer")
	f.Data.DataTable.AddColumn(v.Local.sroute,HID,"Integer")
	f.Data.DataTable.AddColumn(v.Local.sroute,Sell,"Float")
	f.Data.DataTable.AddColumn(v.Local.sroute,SellSetup,"Float")
	f.Data.DataTable.AddColumn(v.Local.sroute,SellPart,"Float")
	f.Data.DataTable.AddColumn(v.Local.sroute,SellDesc,"String")
	f.Data.DataTable.AddColumn(v.Local.sroute,Description,"String")
	f.Data.DataTable.AddColumn(v.Local.sroute,Omit,"String")
	f.Data.DataTable.AddColumn(v.Local.sroute,Attrs,"String")
	f.Data.DataTable.AddColumn(v.Local.sroute,Up,"String","^")
	f.Data.DataTable.AddColumn(v.Local.sroute,Down,"String","v")
	f.Data.DataTable.AddColumn(v.Local.sroute,SellRunGT,"Float")
	f.Data.DataTable.AddColumn(v.Local.sroute,SellSetGT,"Float")
	F.Data.DataTable.AddColumn(v.Local.sroute,ExtraDesc,"String")
	F.Data.DataTable.AddColumn(v.Local.sroute,Attr,"String")
	F.Data.DataTable.AddColumn(v.Local.sroute,MinChrge,"String")
	F.Data.DataTable.AddColumn(v.Local.sroute,OpCode,"String")
	F.Data.DataTable.AddColumn(v.Local.sroute,LeadTime,"String")
	F.Data.DataTable.AddColumn(v.Local.sroute,FinTag,"String")

	f.Data.DataTable.Create(v.Local.smater,true)
	f.Data.DataTable.AddColumn(v.Local.smater,Part,"String")
	f.Data.DataTable.AddColumn(v.Local.smater,Descr,"String")
	f.Data.DataTable.AddColumn(v.Local.smater,PPWU,"String")
	f.Data.DataTable.AddColumn(v.Local.smater,Alt,"String")
	f.Data.DataTable.AddColumn(v.Local.smater,Setup,"Float")
	f.Data.DataTable.AddColumn(v.Local.smater,Run,"Float")
	f.Data.DataTable.AddColumn(v.Local.smater,Cost,"Float")
	f.Data.DataTable.AddColumn(v.Local.smater,UM,"String")
	f.Data.DataTable.AddColumn(v.Local.smater,Mark,"Float")
	f.Data.datatable.addcolumn(v.Local.smater,SellDesc,"String")
	f.Data.DataTable.AddColumn(v.Local.smater,LMO,"String")
	f.Data.DataTable.AddColumn(v.Local.smater,SEQ,"String")
	f.Data.DataTable.AddColumn(v.Local.smater,Supp,"String")
	f.Data.DataTable.AddColumn(v.Local.smater,Code,"String")
	f.Data.datatable.addcolumn(v.Local.smater,Sell,"Float")
	f.Data.datatable.addcolumn(v.Local.smater,MID,"Float")
	f.Data.datatable.addcolumn(v.Local.smater,HID,"Float")
	f.Data.datatable.addcolumn(v.Local.smater,Omit,"String")
	f.Data.datatable.addcolumn(v.Local.smater,EntryDate,"String")
	f.Data.datatable.addcolumn(v.Local.smater,LeadTime,"String")
	f.Data.datatable.addcolumn(v.Local.smater,CodeSource,"String")
	f.Data.Dataview.Create(v.Local.smater,v.Local.sDVMater)
	f.Data.DataView.Create(v.Local.sroute,v.Local.sDVRoute)
f.Intrinsic.Control.Next(v.local.j)
Program.Sub.loadThreshold.End

Program.Sub.load_form_data.Start
f.ODBC.Connection!conx.openconnection(v.Ambient.PDSN,v.Ambient.PUser,v.Ambient.PPass)
v.Local.sRet.declare(string)
v.Local.ssql.Declare(string)
v.Local.sTimes.declare(string)
v.Local.soper.declare(string)
v.Local.sdura.declare(string)
v.Local.sspac.declare(string)
v.Local.sTimeLong.declare(string)
v.Local.sroute.Declare(string)
v.Local.smater.Declare(string)
v.Local.sDVMater.Declare(string)
v.Local.sDVRoute.Declare(string)
v.Local.ssepr.declare(string)
v.Local.sDCTFiles.Declare(string)
V.Local.sWorkcentresDDL.Declare(string)
v.Local.sHeadr.Declare(string)
v.Local.sPowdr.Declare(string)
v.Local.sRouterNum.Declare(string)
v.Local.fPacking.declare(float)
v.Local.i.Declare(long)
v.Local.j.Declare(long)
GUI.frmQRE.tvFile.Event("DRAGDROPFILE",TVFileDragDrop)
f.Intrinsic.Control.CallSub(loadThreshold)

v.Local.ssql.set("SELECT DISTINCT DEFAULT_UM, DEFAULT_PL, DEFAULT_SRC, DEFAULT_PACKING,THRESHOLD FROM GAB_4486_QRE_CONFIG")
f.ODBC.connection!conx.executeandreturn(v.Local.ssql,v.Local.sret)
f.Intrinsic.string.split(v.Local.SRET,"*!*",v.Local.SRET)
gui.frmQRE.txtID.text("0")
gui.frmQRE.txtPL.text(v.Local.sRet(1))
gui.frmQRE.txtUM.text(v.Local.sRet(0))
gui.frmQRE.txtsrc.text(v.Local.sRet(2))
v.Local.fPacking.Set(v.Local.sRet(3))

v.Local.sTimes.set(" *!*M*!*S*!*H")
v.Local.sspac.set("          ")
v.Local.ssepr.set("        /")

v.Local.sSQL.set("select MACHINE,DESCRIPTION,UNIT_MEASURE,RATE,round(STANDARD_SETUP,2) from V_OP_CODES order by DESCRIPTION")
gui.frmQRE.ddlMFinh.AddItem("None",0)
gui.frmQRE.ddlMFinh.AddItem("Powdercoat","POWDER")
f.ODBC.connection!conx.openrecordsetRW("rs",v.Local.ssql)
f.Intrinsic.control.dountil(v.ODBC.conx!rs.eof,=,true)
	gui.frmQRE.ddlMFinh.AddItem(v.ODBC.conx!rs.FieldVal!DESCRIPTION,v.ODBC.CONX!rs.FieldVal!MACHINE)
	f.ODBC.conx!rs.movenext
f.Intrinsic.control.loop
f.ODBC.conx!rs.close

gui.frmQRE.ddlLT.additem("S")
gui.frmQRE.ddlLT.additem("M")
gui.frmQRE.ddlLT.additem("H")

f.Intrinsic.control.callsub(ReloadGridLab,"iVal",0)
gui.frmQRE.gsGCRoute.datasource("Route_0")
gui.frmQRE.gsGCRoute.addGridviewFromDataTable("GVWorkcentre","Route_0")
f.Intrinsic.control.callsub(FormatGridsLab,"iVal",0)

gui.frmQRE.gsGCMater.datasource("Mater_0")
gui.frmQRE.gsGCMater.addGridviewFromDataTable("GVMater","Mater_0")
f.Intrinsic.Control.SelectCase(v.Local.fPacking)
	f.Intrinsic.Control.Case(0)
	f.Intrinsic.Control.CaseElse
		f.Data.DataTable.AddRow("Mater_0","LMO","M","Part","Packing","Descr","Packing","Setup",1,"Cost",v.Local.fPacking,"Mark",0,"UM","EA")
f.Intrinsic.Control.EndSelect
f.Intrinsic.control.callsub(FormatGridsMat,"iVal",0)

v.Local.ssql.set("SELECT CONCAT(RTRIM(DESCRIPTION), CONCAT('-',PART)) AS DESCRIPTION FROM V_INVENTORY_MSTR WHERE CODE_SORT='POWDER' ORDER BY DESCRIPTION")
f.ODBC.Connection!conx.OpenLocalRecordsetRO("rs",v.Local.ssql)
f.Intrinsic.Control.DoUntil(v.ODBC.conx!rs.EOF,=,true)
	gui.SS_Form.ddlColour.AddItem(v.ODBC.conx!rs.FieldValTRIM!DESCRIPTION)
	f.ODBC.Conx!rs.MoveNext
f.Intrinsic.Control.Loop
f.ODBC.conx!rs.Close

V.Local.ssql.set("SELECT * FROM GAB_4486_QRE_CONFIG ORDER BY WC_DESCRIPTION")
F.ODBC.connection!conx.openrecordsetrw("rs",V.Local.ssql)

F.Intrinsic.Control.DoUntil(V.ODBC.conx!rs.eof,=,true)
	F.Intrinsic.string.concat(V.Local.sWorkcentresDDL,V.ODBC.conx!rs.fieldvaltrim!WC_DESCRIPTION,"*!*",V.Local.sWorkcentresDDL)
	gui.frmQRE.ddlLDesc.additem(V.ODBC.conx!rs.fieldvaltrim!WC_DESCRIPTION)
F.ODBC.conx!rs.movenext
F.Intrinsic.control.loop
F.ODBC.conx!rs.close

f.Intrinsic.Control.CallSub(autoInc,"iNumber",0)
f.intrinsic.variable.argtovar(ra0,v.local.sRouterNum)
gui.frmQRE.trvRouters.AddTreeNode("","",0,v.Local.sRouterNum,TRUE) 	
gui.frmQRE.txtBoostID.text(v.Local.sRouterNum)
gui.frmQRE.txtCustPart.text(v.Local.srouterNum)
gui.frmQRE.txtName.text(v.Local.sRouterNum)

Program.Sub.load_form_data.End

Program.Sub.LoadVals.Start
f.Intrinsic.control.callsub(disableAll)
v.Local.ssql.declare(string)
v.Local.sRetPH.declare(string)
v.Local.sPair.declare(string)
v.Local.sDrawings.declare(string)
v.Local.sPowd.declare(string)
v.Local.sVendInfo.declare(string)
v.Local.sRoute.Declare(string)
v.Local.sMater.Declare(string)
v.Local.sHeadr.Declare(string)
v.Local.sPowdr.Declare(string)
v.Local.sDCTFiles.Declare(string)
v.Local.x.declare(long)
v.Local.iVal.Declare(long)
v.Local.iVal.Set(v.Args.iVal)
v.Local.sFileLocat.Declare
v.Local.sBase.Declare
v.Local.sGSSPart.Declare

f.Intrinsic.String.Concat("Route_",v.Local.iVal,v.Local.sRoute)
f.Intrinsic.String.Concat("Mater_",v.Local.iVal,v.Local.sMater)
f.Intrinsic.String.Concat("Headr_",v.Local.iVal,v.Local.sHeadr)
f.Intrinsic.String.Concat("Powdr_",v.Local.iVal,v.Local.sPowdr)


f.Intrinsic.Control.If(v.Args.iVal,=,0)
	f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.caller.companycode,"QREDATA\",v.Args.RouterNum,"\",v.Local.sBase)
f.Intrinsic.Control.Else
	f.Intrinsic.Control.If(v.args.sCopy,<>,"0")
		f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.caller.companycode,"QREDATA\",v.Args.ParentNum,"\",v.Args.RouterNum,"\",v.Local.sBase)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Concat(v.Caller.FilesDir,"\",v.caller.companycode,"QREDATA\",v.DataTable.Headr_0(0).BoostID!fieldval,"\",v.Args.RouterNum,"\",v.Local.sBase)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.EndIf

'Header
f.Intrinsic.String.Concat(v.Local.sBase,v.Args.RouterNum,"Headr.xml",v.Local.sFileLocat)
f.Intrinsic.Control.If(v.DataTable.[v.Local.sHeadr].Exists)
	f.Data.DataTable.Close(v.Local.sHeadr)
f.Intrinsic.Control.EndIf
f.Data.DataTable.CreateFromXML(v.Local.sHeadr,v.Local.sFileLocat,true)
f.Intrinsic.Control.If(v.Local.iVal,=,0)	
	gui.frmQRE.trvRouters.removeitem(0)
	gui.frmQRE.txtUM.text(v.DataTable.[V.Local.sHeadr](0).UM!FIELDVALTRIM)
	gui.frmQRE.txtPL.text(v.DataTable.[V.Local.sHeadr](0).PL!FIELDVALTRIM)
	gui.frmQRE.txtSRC.text(v.DataTable.[V.Local.sHeadr](0).SRC!FIELDVALTRIM)
	gui.frmQRE.txtMarkup.text(v.DataTable.[V.Local.sHeadr](0).MARKUP!FIELDVALTRIM)
	gui.frmQRE.txtQTY.text(v.DataTable.[V.Local.sHeadr](0).QTYBREAK!FIELDVALTRIM)
	gui.frmQRE.txtDesc.text(v.DataTable.[V.Local.sHeadr](0).DESC!FIELDVALTRIM)
	gui.frmQRE.txtDraw.text(v.DataTable.[V.Local.sHeadr](0).DRAW!FIELDVALTRIM)
	gui.frmQRE.txtCustPart.text(v.DataTable.[V.Local.sHeadr](0).CUSTPART!FIELDVALTRIM)
	gui.frmQRE.txtCustomer.text(v.DataTable.[V.Local.sHeadr](0).CUSTOMER!FIELDVALTRIM)
	gui.frmQRE.txtOMarkup.text(v.DataTable.[V.Local.sHeadr](0).OMARKUP!FIELDVALTRIM)
	gui.frmQRE.txtOQTY.text(v.DataTable.[V.Local.sHeadr](0).OQTY!FIELDVALTRIM)
	gui.frmQRE.txtCustRevPart.text(v.DataTable.[V.Local.sHeadr](0).CUSTREVPART!FIELDVALTRIM)
	gui.frmQRE.txtNotes.text(v.DataTable.[V.Local.sHeadr](0).NOTES!FIELDVALTRIM)
	gui.frmQRE.txtBoostID.text(v.DataTable.[V.Local.sHeadr](0).BOOSTID!FIELDVALTRIM)
	f.Intrinsic.String.Concat(v.DataTable.[V.Local.sHeadr](0).CustPart!FIELDVALTRIM,v.DataTable.[V.Local.sHeadr](0).CustRevPart!FIELDVALTRIM,v.Local.sGSSPart)
	gui.frmQRE.txtID.text(0)
	gui.frmQRE.trvRouters.AddTreeNode("","",v.Local.iVal,v.local.sGSSPart)
	f.Intrinsic.Control.If(v.Args.sCopy.Trim,<>,"0")
		f.Data.DataTable.SetValue(v.Local.sHeadr,0,"BoostID",v.Args.sCopy.Trim,"CustRevPart","")
		gui.frmQRE.txtBoostID.text(v.DataTable.[V.Local.sHeadr](0).BOOSTID!FIELDVALTRIM)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Else
	f.Intrinsic.Control.If(v.Args.sCopy.Trim,<>,"0")
		gui.frmQRE.trvRouters.AddTreeNode(0,1,v.Local.iVal,v.args.sCopy,TRUE)
		f.Data.DataTable.SetValue(v.Local.sHeadr,0,"BoostID",v.Args.sCopy.Trim,"CustPart",v.Args.sCopy.Trim,"CustRevPart","")
	f.Intrinsic.Control.Else
		gui.frmQRE.trvRouters.AddTreeNode(0,1,v.Local.iVal,v.DataTable.[V.Local.sHeadr](0).CUSTPART!FIELDVALTRIM,TRUE)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.EndIf

'Drawings
f.Intrinsic.Control.If(v.Local.iVal,=,0)
	gui.frmQRE.tvFile.clearitems
f.Intrinsic.Control.EndIf
f.Intrinsic.string.Concat("dctFiles",v.Local.iVal,v.Local.sDCTFiles)
v.Local.sDrawings.Set(v.DataTable.[v.Local.sHeadr](0).Drawings!fieldvaltrim)
f.Intrinsic.string.split(v.Local.sDrawings,"!*!",v.Local.sPair)
f.Intrinsic.string.split(v.Local.sPair,"*!*",v.Local.sDrawings)
f.Intrinsic.Control.SelectCase(v.Local.sDrawings.trim)
	f.Intrinsic.Control.Case("")
	f.Intrinsic.Control.Caseelse
	f.Intrinsic.control.for(v.Local.x,0,v.Local.sDrawings.ubound,1)
		f.Intrinsic.control.try
			F.Intrinsic.Control.If(v.Local.ival,=,0)
				gui.frmQRE.tvFile.addnode("",4,v.Local.sDrawings(v.Local.x),v.Local.sDrawings(v.Local.x))
			F.Intrinsic.Control.EndIf
			f.Data.Dictionary.AddItem(v.Local.sDCTFiles,v.Local.sDrawings(v.Local.x),v.Local.sDrawings(v.Local.x))
		f.Intrinsic.control.catch
		f.Intrinsic.control.endtry
	f.Intrinsic.control.next(v.Local.x)
f.Intrinsic.Control.EndSelect

'Labour
f.Intrinsic.String.Concat(v.Local.sBase,v.Args.RouterNum,"Route.xml",v.Local.sFileLocat)
f.Intrinsic.Control.If(v.DataTable.[v.Local.sRoute].Exists)
	f.Data.DataTable.Close(v.Local.sRoute)
f.Intrinsic.Control.EndIf
f.Data.DataTable.CreateFromXML(v.Local.sRoute,v.Local.sFileLocat,true)

'Material
f.Intrinsic.String.Concat(v.Local.sBase,v.Args.RouterNum,"Mater.xml",v.Local.sFileLocat)
f.Intrinsic.Control.If(v.DataTable.[v.Local.sMater].Exists)
	f.Data.DataTable.Close(v.Local.sMater)
f.Intrinsic.Control.EndIf
f.Data.DataTable.CreateFromXML(v.Local.sMater,v.Local.sFileLocat,true)

'Powder
f.Intrinsic.String.Concat(v.Local.sBase,v.Args.RouterNum,"Powdr.xml",v.Local.sFileLocat)
f.Intrinsic.Control.If(v.DataTable.[v.Local.sPowdr].Exists)
	f.Data.DataTable.Close(v.Local.sPowdr)
f.Intrinsic.Control.EndIf
f.Data.DataTable.CreateFromXML(v.Local.sPowdr,v.Local.sFileLocat,true)
f.Intrinsic.Control.If(v.DataTable.[v.Local.sPowdr].RowCount,>,0)
	gui.ss_form.ddlColour.text(v.DataTable.[V.Local.sPowdr](0).Colour!FIELDVALTRIM)
	gui.ss_form.txtProdLength.text(v.DataTable.[V.Local.sPowdr](0).ProdLength!FIELDVALTRIM)
	gui.ss_form.txtProdWidth.text(v.DataTable.[V.Local.sPowdr](0).ProdWidth!FIELDVALTRIM)
	gui.ss_form.txtPowdThick.text(v.DataTable.[V.Local.sPowdr](0).PowdThick!FIELDVALTRIM)
	gui.ss_form.txtPowdPrice.text(v.DataTable.[V.Local.sPowdr](0).PowdPrice!FIELDVALTRIM)
	gui.ss_form.txtPowdCost.text(v.DataTable.[V.Local.sPowdr](0).PowdCost!FIELDVALTRIM)
	gui.ss_form.txtChemCost.text(v.DataTable.[V.Local.sPowdr](0).ChemCost!FIELDVALTRIM)
	gui.ss_form.lblCalcPriceResult.caption(v.DataTable.[V.Local.sPowdr](0).CalcPriceResult!FIELDVALTRIM)
	gui.ss_form.txtPricePerUnit.text(v.DataTable.[V.Local.sPowdr](0).PricePerUnit!FIELDVALTRIM)
	gui.ss_form.txtMarkup.text(v.DataTable.[V.Local.sPowdr](0).Markup!FIELDVALTRIM)
	gui.ss_form.txtGap.text(v.DataTable.[V.Local.sPowdr](0).Gap!FIELDVALTRIM)
	gui.ss_form.txtMan.text(v.DataTable.[V.Local.sPowdr](0).Man!FIELDVALTRIM)
	gui.ss_form.txtLabourRate.text(v.DataTable.[V.Local.sPowdr](0).LabourRate!FIELDVALTRIM)
	gui.ss_form.txtSetupCost.text(v.DataTable.[V.Local.sPowdr](0).SetupCost!FIELDVALTRIM)
	gui.ss_form.txtLineSpeed.text(v.DataTable.[V.Local.sPowdr](0).LineSpeed!FIELDVALTRIM)
	gui.ss_form.txtLabourCost.text(v.DataTable.[V.Local.sPowdr](0).LabourCost!FIELDVALTRIM)
	gui.ss_form.lblNetPriceResult.caption(v.DataTable.[V.Local.sPowdr](0).NetPriceResult!FIELDVALTRIM)
	gui.ss_form.lblMinChargeResult.caption(v.DataTable.[V.Local.sPowdr](0).MinChargeResult!FIELDVALTRIM)
	f.Intrinsic.control.if(v.DataTable.[V.Local.sPowdr](0).WaiveMin!FIELDVALTRIM,=,"")
		gui.ss_form.chkWaiveMin.value(0)
	f.Intrinsic.control.else
		gui.ss_form.chkWaiveMin.value(v.DataTable.[V.Local.sPowdr](0).WaiveMin!FIELDVALTRIM)
	f.Intrinsic.control.endif
	gui.frmQRE.cmdPow.backcolor(v.Color.ltgreen)
	gui.frmQRE.lblMPowP.caption(v.DataTable.[V.Local.sPowdr](0).MPowP!FIELDVALTRIM)
f.Intrinsic.Control.EndIf

'Supplier part box info
f.Intrinsic.Control.If(v.Local.iVal,=,0)	
	gui.frmQRE.txtMSBox.text(v.Local.sVendInfo)
f.Intrinsic.Control.EndIf

f.Intrinsic.control.callsub(enableAll)
Program.Sub.LoadVals.End

Program.Sub.trvRouters_NodeClick.Start
V.Local.sSelect.Declare
v.Local.sSelect.Set(v.Screen.frmQRE!trvRouters.selectedItemKey)
f.Intrinsic.Control.If(v.Local.sSelect.Trim,=,"")
	f.Intrinsic.Control.CallSub(triggerLoad,"MyIndex",0,"Static",0)
f.Intrinsic.Control.else
	f.Intrinsic.Control.CallSub(triggerLoad,"MyIndex",v.Local.sSelect,"Static",0)
	f.Intrinsic.Control.If(v.Local.sSelect.Trim,=,0)
		gui.frmQRE.txtQTY.enabled(false)
	f.Intrinsic.Control.Else
		gui.frmQRE.txtQty.enabled(true)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.EndIf
Program.Sub.trvRouters_NodeClick.End

Program.Sub.triggerLoad.Start
v.Local.sroute.Declare
v.Local.smater.Declare
v.Local.sHeadr.Declare
v.Local.sPowdr.Declare
v.Local.soutsd.Declare
v.Local.sCPart.Declare
v.Local.sCRevi.Declare
v.Local.sDescr.Declare
v.Local.sUnitM.Declare
v.Local.sBoost.Declare
v.Local.sDraws.Declare
v.local.sVendM.Declare
V.Local.sDCTFiles.Declare
v.Local.sdictret.Declare
v.Local.sPair.Declare
v.Local.sDrawings.Declare
v.Local.sSelect.Declare
v.Local.x.Declare(long)
v.Local.sSelect.Set(v.Args.MyIndex)
v.Local.sVendInfo.Declare
'Drawings
f.Intrinsic.string.Concat("dctFiles",v.Local.sSelect,v.Local.sDCTFiles)
gui.frmQRE.tvFile.Clearitems
F.Data.Dictionary.ReturnAllPairs(v.local.sdctFiles,v.local.sdictret)
f.Intrinsic.string.split(v.Local.sDictret,"!*!",v.Local.sPair)
f.Intrinsic.string.split(v.Local.sPair,"*!*",v.Local.sDrawings)
f.Intrinsic.Control.SelectCase(v.Local.sDrawings.trim)
	f.Intrinsic.Control.Case("")
	f.Intrinsic.Control.Caseelse
	f.Intrinsic.control.for(v.Local.x,0,v.Local.sDrawings.ubound,1)
		f.Intrinsic.control.try
			F.Intrinsic.Control.If(v.Local.ival,=,0)
				f.Intrinsic.Control.If(v.Local.sDrawings(v.Local.x).trim,<>,"***NORETURN***")
					gui.frmQRE.tvFile.addnode("",4,v.Local.sDrawings(v.Local.x),v.Local.sDrawings(v.Local.x))
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		f.Intrinsic.control.catch
		f.Intrinsic.control.endtry
	f.Intrinsic.control.next(v.Local.x)
f.Intrinsic.Control.EndSelect

'gui.frmQRE.tvFile.addnode("",4,v.Local.sDrawings(v.Local.x),v.Local.sDrawings(v.Local.x))

'F.Intrinsic.Debug.ShowCallerInfo
gui.frmQRE.txtID.text(v.Local.sSelect)
f.Intrinsic.String.Concat("Mater_",v.Local.sSelect,v.Local.smater)
f.Intrinsic.Control.If(v.Args.Static,<>,1)
	gui.frmQRE.gsgcMater.visible(false)
	gui.frmQRE.gsgcMater.AddGridviewFromDatatable("gv",v.Local.smater)
	gui.frmQRE.gsgcMater.DataSource(v.Local.smater)
	gui.frmQRE.gsgcMater.AddGridviewFromDatatable("gv",v.Local.smater)
	f.Intrinsic.control.for(v.Local.x,0,v.Datatable.[v.Local.smater].RowCount--,1)
		f.Intrinsic.control.if(v.Datatable.[v.Local.smater](v.Local.x).SEQ!FIELDVALTRIM,=,"MAT")
			f.Intrinsic.string.concat(v.Datatable.[v.Local.smater](v.Local.x).SUPP!FIELDVALTRIM,"	",v.Datatable.[v.Local.smater](v.Local.x).Code!fieldvaltrim,"	$",v.Datatable.[v.Local.smater](v.Local.x).Cost!fieldval,"	",v.Datatable.[v.Local.smater](v.Local.x).EntryDate!fieldvaltrim,v.Local.sVendInfo)
			gui.frmQRE.txtMSBox.text(v.Local.sVendInfo)
		f.Intrinsic.control.endif
	f.Intrinsic.control.next(v.Local.x)

	f.Intrinsic.control.callsub(FormatGridsMat,"iVal",v.Local.sSelect)
	gui.frmQRE.gsgcMater.visible(true)
f.Intrinsic.Control.EndIf

f.Intrinsic.Control.If(v.Args.Static,<>,1)
	f.Intrinsic.String.Concat("Route_",v.Local.sSelect,v.Local.sroute)
	gui.frmQRE.gsgcRoute.visible(false)
	gui.frmQRE.gsgcRoute.AddGridviewFromDatatable("gv",v.Local.sroute)
	gui.frmQRE.gsgcRoute.DataSource(v.Local.sroute)
	gui.frmQRE.gsgcRoute.AddGridviewFromDatatable("gv",v.Local.sroute)
	f.Intrinsic.control.callsub(FormatGridsLab,"iVal",v.Local.sSelect)
	gui.frmQRE.gsgcRoute.visible(true)
f.Intrinsic.Control.EndIf


f.Intrinsic.String.Concat("Headr_",v.Local.sSelect,v.Local.sHeadr)
f.Intrinsic.Control.If(v.DataTable.[v.Local.sHeadr].RowCount,>,0)
	gui.frmQRE.txtUM.text(v.DataTable.[v.Local.sHeadr](0).UM!FIELDVALTRIM)
	gui.frmQRE.txtPL.text(v.DataTable.[v.Local.sHeadr](0).PL!FIELDVALTRIM)
	gui.frmQRE.txtSRC.text(v.DataTable.[v.Local.sHeadr](0).SRC!FIELDVALTRIM)
	gui.frmQRE.txtMarkup.text(v.DataTable.[v.Local.sHeadr](0).MARKUP!FIELDVALTRIM)
	gui.frmQRE.txtQTY.text(v.DataTable.[v.Local.sHeadr](0).QTYBREAK!FIELDVALTRIM)
	gui.frmQRE.txtDesc.text(v.DataTable.[v.Local.sHeadr](0).DESC!FIELDVALTRIM)
	gui.frmQRE.txtDraw.text(v.DataTable.[v.Local.sHeadr](0).DRAW!FIELDVALTRIM)
	gui.frmQRE.txtCustPart.text(v.DataTable.[v.Local.sHeadr](0).CUSTPART!FIELDVALTRIM)
	gui.frmQRE.txtCustomer.text(v.DataTable.[v.Local.sHeadr](0).CUSTOMER!FIELDVALTRIM)
	'gui.frmQRE.txtOMarkup.text(v.DataTable.[v.Local.sHeadr](0).OMARKUP!FIELDVALTRIM)
	'gui.frmQRE.txtOQTY.text(v.DataTable.[v.Local.sHeadr](0).OQTY!FIELDVALTRIM)
	gui.frmQRE.txtCustRevPart.text(v.DataTable.[v.Local.sHeadr](0).CUSTREVPART!FIELDVALTRIM)
	'gui.frmQRE.txtNotes.text(v.DataTable.[v.Local.sHeadr](0).NOTES!FIELDVALTRIM)
	gui.frmQRE.txtBoostID.text(v.DataTable.[v.Local.sHeadr](0).BOOSTID!FIELDVAL)
f.Intrinsic.Control.EndIf

f.Intrinsic.String.Concat("Powdr_",v.Local.sSelect,v.Local.sPowdr)
f.Intrinsic.Control.If(v.DataTable.[v.Local.sPowdr].RowCount,>,0)
	gui.ss_form.ddlColour.text(v.DataTable.[v.Local.sPowdr](0).Colour!FIELDVALTRIM)
	gui.ss_form.txtProdLength.text(v.DataTable.[v.Local.sPowdr](0).ProdLength!FIELDVALTRIM)
	gui.ss_form.txtProdWidth.text(v.DataTable.[v.Local.sPowdr](0).ProdWidth!FIELDVALTRIM)
	gui.ss_form.txtPowdThick.text(v.DataTable.[v.Local.sPowdr](0).PowdThick!FIELDVALTRIM)
	gui.ss_form.txtPowdPrice.text(v.DataTable.[v.Local.sPowdr](0).PowdPrice!FIELDVALTRIM)
	gui.ss_form.txtPowdCost.text(v.DataTable.[v.Local.sPowdr](0).PowdCost!FIELDVALTRIM)
	gui.ss_form.txtChemCost.text(v.DataTable.[v.Local.sPowdr](0).ChemCost!FIELDVALTRIM)
	gui.ss_form.lblCalcPriceResult.caption(v.DataTable.[v.Local.sPowdr](0).CalcPriceResult!FIELDVALTRIM)
	gui.ss_form.txtPricePerUnit.text(v.DataTable.[v.Local.sPowdr](0).PricePerUnit!FIELDVALTRIM)
	gui.ss_form.txtMarkup.text(v.DataTable.[v.Local.sPowdr](0).Markup!FIELDVALTRIM)
	gui.ss_form.txtGap.text(v.DataTable.[v.Local.sPowdr](0).Gap!FIELDVALTRIM)
	gui.ss_form.txtMan.text(v.DataTable.[v.Local.sPowdr](0).Man!FIELDVALTRIM)
	gui.ss_form.txtLabourRate.text(v.DataTable.[v.Local.sPowdr](0).LabourRate!FIELDVALTRIM)
	gui.ss_form.txtSetupCost.text(v.DataTable.[v.Local.sPowdr](0).SetupCost!FIELDVALTRIM)
	gui.ss_form.txtLineSpeed.text(v.DataTable.[v.Local.sPowdr](0).LineSpeed!FIELDVALTRIM)
	gui.ss_form.txtLabourCost.text(v.DataTable.[v.Local.sPowdr](0).Labourcost!FIELDVALTRIM)
	gui.ss_form.lblNetPriceResult.caption(v.DataTable.[v.Local.sPowdr](0).NetPriceResult!FIELDVALTRIM)
	gui.ss_form.lblMinChargeResult.caption(v.DataTable.[v.Local.sPowdr](0).MinChargeResult!FIELDVALTRIM)
	f.Intrinsic.Control.If(v.DataTable.[v.Local.sPowdr](0).WaiveMin!FIELDVALTRIM,=,"")
		gui.ss_form.chkWaiveMin.value(0)
	F.Intrinsic.Control.Else
		gui.ss_form.chkWaiveMin.value(v.DataTable.[v.Local.sPowdr](0).WaiveMin!FIELDVAL)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.EndIf
Program.Sub.triggerLoad.End

Program.Sub.cmdAddRouters_Click.Start
f.Intrinsic.Math.Add(v.Global.lCount,1,v.Global.lcount)
f.Intrinsic.control.callsub(addrouter,i,v.Global.lcount)
Program.Sub.cmdAddRouters_Click.End

Program.Sub.cmdRemRouters_Click.Start
v.Local.lret.Declare
v.Local.sSelect.Declare
v.Local.sSelect.Set(v.Screen.frmQRE!trvRouters.selectedItemKey)
f.Intrinsic.UI.Msgbox("Are you sure you want to remove this router?  This will delete all data with the router. This action cannot be undone.","Remove Router",4,v.Local.lret)
f.Intrinsic.Control.If(v.Local.lret,=,6)
	f.Intrinsic.Math.Sub(v.Global.lCount,1,v.Global.lcount)
	Function.Intrinsic.control.callsub(remrouter,i,v.Local.sSelect)
f.Intrinsic.Control.EndIf
Program.Sub.cmdRemRouters_Click.End

Program.Sub.cmdDrawBrowse_Click.Start

Program.Sub.cmdDrawBrowse_Click.End

Program.Sub.tvFileD_Click.Start

Program.Sub.tvFileD_Click.End

Program.Sub.cmdMB_Click.Start
f.Intrinsic.control.try
	V.Local.sError.Declare(string)
	V.Local.sRet.Declare(string)
	V.Local.sSQL.Declare(string)
	V.Local.sTitles.Declare(string)
	V.Local.sWidths.Declare(string)
	V.Local.sPart.Declare(string)
	V.Local.sRev.Declare(string)
	V.Local.sPartRev.Declare(string)
	V.Local.sval.declare(string)
	V.Local.bRet.declare(boolean)
	V.Local.fret.declare(float)
	V.Local.sMinChargeDesc.declare(string)
	V.Local.fCost.declare(float)
	V.Local.sPurchUM.declare(string)
	f.Intrinsic.control.if(V.Screen.frmQRE!optStd1.value,=,"1")
	F.Intrinsic.control.elseif(V.Screen.frmQRE!optCom1.value,=,"1")
		f.Intrinsic.string.split("Part*!*Description*!*UM Purch*!*Cost*!*Sort Code","*!*",V.Local.sTitles)
		f.Intrinsic.string.split("1900*!*3000*!*2000*!*2000*!*2000","*!*",V.Local.sWidths)
		f.Intrinsic.ui.setbrowserhottypeahead(true)
		V.Local.ssql.set("select TB1.PART, TB1.DESCRIPTION, TB1.UM_PURCHASING,TB1.AMT_COST,TB1.CODE_SORT from v_INVENTORY_all TB1  ORDER BY TB1.Part")
		f.Intrinsic.UI.Browser("Select a Inventory Part","conx",V.Local.sSQL,V.Local.sTitles,V.Local.sWidths,17000,10000,V.Local.sRet)
		f.Intrinsic.string.split(V.Local.sret,"*!*",V.Local.sRet)
		f.Intrinsic.Control.SelectCase(V.Local.sRet)
		f.Intrinsic.Control.Case("***CANCEL***")
			f.Intrinsic.control.exitsub
		f.Intrinsic.Control.CaseElse
		V.Local.ssql.set("SELECT AMT_ALT_COST FROM V_INVENTORY_MSTR WHERE PART='{0}'")
		f.Intrinsic.string.build(V.Local.ssql,V.Local.sret(0).trim,V.Local.ssql)
		f.ODBC.connection!conx.executeandreturn(V.Local.ssql,V.Local.fcost)
		V.Local.ssql.set("SELECT UM_PURCHASING FROM V_INVENTORY_MSTR WHERE PART='{0}'")
		f.Intrinsic.string.build(V.Local.ssql,V.Local.sret(0).trim,V.Local.ssql)
		f.ODBC.connection!conx.executeandreturn(V.Local.ssql,V.Local.sPurchUM)
		gui.frmQRE.ddlMSupp.ClearItems
		gui.frmQRE.txtMPart.text(V.Local.sRet(0).Trim)
		gui.frmQRE.txtMDesc.text(V.Local.sRet(1).Trim)
		gui.frmqre.txtMCost.text(V.Local.fcost)
		gui.frmqre.txtMUoMC.text(V.Local.sPurchUM)
		f.Intrinsic.Control.EndSelect
		f.Intrinsic.control.else
		f.Intrinsic.string.split("Part*!*Description*!*Preferred Vendor*!*Name Vendor*!*Vendor*!*MFG Part*!*Cost*!*Purch UM*!*Sort Code*!*Thickness*!*Length*!*Width","*!*",V.Local.sTitles)
		f.Intrinsic.string.split("1900*!*3000*!*2000*!*2000*!*2000*!*1200*!*1200*!*1200*!*1200*!*1200*!*1200*!*1200","*!*",V.Local.sWidths)
		f.Intrinsic.ui.setbrowserhottypeahead(true)
		V.Local.ssql.set("SELECT TB1.PART, TB1.DESCRIPTION, TB1.NAME_VENDOR, IF(TB2.vendor='','',tb3.NAME_VENDOR) AS 'Vendor Name', tb2.vendor, tb2.mfg_part, tb1.amt_alt_cost,tb1.UM_Purchasing,tb1.code_sort, tb1.thickness, tb1.length, tb1.width FROM V_INVENTORY_ALL AS TB1 left join V_INV_CROSS_REF TB2 ON TB2.PART = tb1.PART LEFT JOIN V_VENDOR_MASTER TB3 ON TB2.VENDOR = TB3.VENDOR  order by TB1.part")
		f.Intrinsic.UI.Browser("Select a Inventory Part","conx",V.Local.sSQL,V.Local.sTitles,V.Local.sWidths,17000,10000,V.Local.sRet)
		f.Intrinsic.string.split(V.Local.sret,"*!*",V.Local.sRet)
		f.Intrinsic.Control.SelectCase(V.Local.sRet)
		f.Intrinsic.Control.Case("***CANCEL***")
		f.Intrinsic.Control.CaseElse
		gui.frmQRE.ddlMSupp.ClearItems
		gui.frmQRE.txtMPart.text(V.Local.sRet(0).Trim)
		gui.frmQRE.txtMDesc.text(V.Local.sRet(1).Trim)
		gui.frmqre.txtMCost.text(V.Local.sRet(6))
		gui.frmqre.txtMUoMC.text(V.Local.sRet(7))
		V.Local.sSQL.set("select TOP 10 MFG_NAME, MFG_PART_NO, QUOTE_DATE, PUR_UM, UNIT_PRICE from V_VEND_QTE_HEADER LEFT JOIN V_VEND_QTE_LINES ON V_VEND_QTE_HEADER.PART = V_VEND_QTE_LINES.PART AND V_VEND_QTE_HEADER.SEQ = V_VEND_QTE_LINES.SEQ WHERE V_VEND_QTE_HEADER.PART='{0}' ORDER BY QUOTE_DATE DESC")
		f.Intrinsic.string.build(V.Local.ssql,V.Screen.frmQRE!txtMPart.Text,V.Local.ssql)
		f.ODBC.connection!conx.openrecordsetRW("rs",V.Local.ssql)
		gui.frmQRE.ddlMSupp1.AddItem("Supplier                 --- Item                --- Date       --- UM --- Cost",0)
		f.Intrinsic.control.dountil(V.ODBC.conx!rs.eof,=,true)
		V.Local.sval.set("{0} --- {1} --- {2} --- {3} --- {4}")
		f.Intrinsic.string.build(V.Local.sval,V.ODBC.conx!rs.fieldval!MFG_NAME,V.ODBC.conx!rs.fieldval!MFG_PART_NO,V.ODBC.conx!rs.fieldval!QUOTE_DATE,V.ODBC.conx!rs.fieldval!PUR_UM,V.ODBC.conx!rs.fieldval!UNIT_PRICE,V.Local.sval)
		gui.frmQRE.ddlMSupp.AddItem(V.Local.sval)
		f.ODBC.conx!rs.movenext
		f.Intrinsic.control.loop
		f.ODBC.conx!rs.close
		f.Intrinsic.Control.EndSelect
	f.Intrinsic.control.endif
f.Intrinsic.control.catch
	f.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
f.Intrinsic.control.endtry

Program.Sub.cmdMB_Click.End

Program.Sub.cmdMAddM_Click.Start
V.Local.sMater.Declare(string)
f.Intrinsic.String.Concat("MATER_",v.Screen.frmQRE!txtID.text,v.Local.sMater)

F.Intrinsic.control.if(V.Screen.frmQRE!optMat.value,=,"1")
	V.Local.bCostC.declare(Boolean)
	V.Local.bPPWUC.declare(Boolean)
	V.Local.bAltDC.declare(Boolean)
	V.Local.fCost.declare(float)
	f.Intrinsic.Control.SelectCase(V.Screen.frmQRE!txtMCost.Text)
		f.Intrinsic.Control.Case("")
			f.Intrinsic.control.if(V.Screen.frmQRE!txtMPart.Text,<>,"NOMATERIAL")
				gui.frmQRE.txtMCost.BackColor(8421631)
				V.Local.bCostC.set(True)
			f.Intrinsic.control.else
				gui.frmQRE.txtMCost.backcolor(-2147483643)
			f.Intrinsic.control.endif
	f.Intrinsic.Control.EndSelect

	V.Local.fCost.set(V.Screen.frmQRE!txtMCost.Text)
	f.Intrinsic.Control.SelectCase(V.Local.fCost)
		f.Intrinsic.Control.Case(0)
			f.Intrinsic.control.if(V.Screen.frmQRE!txtMPart.Text,<>,"NOMATERIAL")
				gui.frmQRE.txtMCost.BackColor(8421631)
			V.Local.bCostC.set(True)
			f.Intrinsic.control.else
				gui.frmQRE.txtMCost.backcolor(-2147483643)
			f.Intrinsic.control.endif
		f.Intrinsic.control.CaseElse
			gui.frmQRE.txtMCost.backcolor(-2147483643)
	f.Intrinsic.Control.EndSelect

	f.Intrinsic.Control.SelectCase(V.Screen.frmQRE!txtMPPWU.Text)
		f.Intrinsic.Control.Case("")
			gui.frmQRE.txtMPPWU.BackColor(8421631)
			V.Local.bPPWUC.set(True)
		f.Intrinsic.Control.Case(0)
			gui.frmQRE.txtMPPWU.BackColor(8421631)
			V.Local.bPPWUC.set(True)
		f.Intrinsic.control.CaseElse
			gui.frmQRE.txtMPPWU.backcolor(-2147483643)
	f.Intrinsic.Control.EndSelect

	f.Intrinsic.Control.SelectCase(V.Screen.frmQRE!txtMAltD.Text)
		f.Intrinsic.Control.Case("")
			gui.frmQRE.txtMAltD.BackColor(8421631)
			V.Local.bAltDC.set(True)
			f.Intrinsic.Control.Case(0)
			gui.frmQRE.txtMAltD.BackColor(8421631)
			V.Local.bAltDC.set(True)
		f.Intrinsic.control.CaseElse
			gui.frmQRE.txtMAltD.backcolor(-2147483643)
	f.Intrinsic.Control.EndSelect

	f.Intrinsic.control.if(V.Local.bCostC)
		f.Intrinsic.control.exitsub
	f.Intrinsic.control.endif
	f.Intrinsic.control.if(V.Local.bPPWUC)
		f.Intrinsic.control.exitsub
	f.Intrinsic.control.endif
	f.Intrinsic.control.if(V.Local.bAltDC)
		f.Intrinsic.control.exitsub
	f.Intrinsic.control.endif
f.Intrinsic.control.else
	gui.frmQRE.txtMPPWU.text(0)
f.Intrinsic.control.endif

V.Local.stype.declare(string)
f.Intrinsic.control.if(V.Screen.frmQRE!optMat.value,=,"1")
	V.Local.stype.set("MAT")
f.Intrinsic.control.else
	V.Local.stype.set("")
f.Intrinsic.control.endif

V.Local.bMat.declare(boolean)
V.Local.sMat.declare(string)
V.Local.x.declare(long,0)
f.Intrinsic.control.if(V.Screen.frmQRE!optMat.value,=,"1")
	f.Intrinsic.control.for(V.Local.x,0,V.Datatable.[V.Local.sMater].RowCount--,1)
		f.Intrinsic.control.if(V.Datatable.[v.Local.sMater](V.Local.x).SEQ!FieldValTrim,=,"MAT")
			f.Intrinsic.ui.msgbox("Material already exists, cannot add to this routing.")
			f.Intrinsic.control.exitsub
		f.Intrinsic.control.endif
	f.Intrinsic.control.next(V.Local.x)
f.Intrinsic.control.endif

V.Local.sret.declare(string)
V.Local.sval.declare(string)
V.Local.sMO.declare(string)
V.Local.bval.declare(boolean)
V.Local.bval2.declare(boolean)
V.Local.bval.set(V.Screen.frmQRE!optStd.value)
f.Intrinsic.Control.SelectCase(V.Local.bval)
	f.Intrinsic.Control.Case(True)
	f.Intrinsic.Control.SelectCase(V.Screen.frmQRE!ddlMFinh.value)
		f.Intrinsic.Control.Case("Powdercoat")
			V.Local.sMO.set("P")
		f.Intrinsic.Control.CaseElse
			V.Local.sMO.set("O")
	f.Intrinsic.control.EndSelect
	f.Intrinsic.Control.CaseElse
		V.Local.sMO.set("M")
f.Intrinsic.control.EndSelect

f.Intrinsic.control.if(V.Local.sMO,=,"O","or",V.Local.sMO,=,"P")
	f.Intrinsic.string.concat(V.Screen.frmQRE!ddlMFinh.value,"-----",V.Screen.frmQRE!txtMPPWU.text,"-----",V.Screen.frmQRE!txtMUoMC.text,"-----",V.Screen.frmQRE!txtMCost.text,"-----",V.Screen.frmQRE!txtMQtyS.text,"-----",V.Screen.frmQRE!txtMQtyR.text,"-----",V.Screen.frmQRE!txtMDesc.text,"-----",V.Screen.frmQRE!txtMAltD.text,"-----",V.Screen.frmQRE!txtMSupp.text,"-----",V.Screen.frmQRE!txtMCode.text,"-----",V.Screen.frmQRE!txtMMark.text,"-----",V.Screen.frmQRE!txtMDate.text,V.Local.sval)
f.Intrinsic.control.else
	f.Intrinsic.string.concat(V.Screen.frmQRE!txtMPart.text,"-----",V.Screen.frmQRE!txtMPPWU.text,"-----",V.Screen.frmQRE!txtMUoMC.text,"-----",V.Screen.frmQRE!txtMCost.text,"-----",V.Screen.frmQRE!txtMQtyS.text,"-----",V.Screen.frmQRE!txtMQtyR.text,"-----",V.Screen.frmQRE!txtMDesc.text,"-----",V.Screen.frmQRE!txtMAltD.text,"-----",V.Screen.frmQRE!txtMSupp.text,"-----",V.Screen.frmQRE!txtMCode.text,"-----",V.Screen.frmQRE!txtMMark.text,"-----",V.Screen.frmQRE!txtMDate.text,V.Local.sval)
f.Intrinsic.control.endif
f.Intrinsic.string.split(V.Local.sval,"-----",V.Local.sret)

f.Intrinsic.Control.SelectCase(V.Local.sret(5).trim)
	f.Intrinsic.Control.Case("")
		V.Local.sret(5).set(0)
f.Intrinsic.control.EndSelect

f.Intrinsic.Control.SelectCase(V.Local.sret(8).trim)
	f.Intrinsic.Control.Case("")
		V.Local.sret(8).set(0)
f.Intrinsic.control.EndSelect

f.Intrinsic.Control.SelectCase(V.Local.sret(1).trim)
	f.Intrinsic.Control.Case("")
		V.Local.sret(1).set(0)
f.Intrinsic.control.EndSelect

f.Intrinsic.Control.SelectCase(V.Local.sret(3).trim)
	f.Intrinsic.Control.Case("")
		V.Local.sret(3).set(0)
f.Intrinsic.control.EndSelect

f.Intrinsic.Control.SelectCase(V.Local.sret(4).trim)
	f.Intrinsic.Control.Case("")
		V.Local.sret(4).set(0)
f.Intrinsic.control.EndSelect

f.Intrinsic.Control.SelectCase(V.Local.sret(10).trim)
	f.Intrinsic.Control.Case("")
		V.Local.sret(10).set(0)
f.Intrinsic.control.EndSelect

f.Intrinsic.control.if(V.Local.sMO,=,"O","or",V.Local.sMO,=,"P")
	f.Data.datatable.addrow(v.Local.sMater,"Part",V.Local.sret(0),"LMO",V.Local.sMO,"PPWU",V.Local.sret(1),"UM","EA","Cost",V.Local.sret(3),"Setup",V.Local.sret(4),"Run",0,"Descr",V.Local.sret(6),"Alt",V.Screen.frmQRE!lblMMinR.caption,"Supp",V.Local.sret(5),"Code",V.Screen.frmQRE!chkMWaiv.value,"Mark",V.Local.sret(10),"Sell",0)
	gui.frmQRE.txtMPart.text("")
	gui.frmQRE.txtMPPWU.text("")
	gui.frmQRE.txtMUoMC.text("")
	gui.frmQRE.txtMCost.text("")
	gui.frmQRE.txtMQtyS.text("")
	gui.frmQRE.txtMQtyR.text("")
	gui.frmQRE.txtMDesc.text("")
	gui.frmQRE.txtMAltD.text("")
	gui.frmQRE.txtMSupp.text("")
	gui.frmQRE.txtMCode.text("")
	gui.frmQRE.txtMMark.text(30)
	gui.frmQRE.txtMCode.text("")
	gui.frmqre.lblMMinR.visible(True)
f.Intrinsic.control.else
	f.Data.datatable.addrow(v.Local.sMater,"Part",V.Local.sret(0),"LMO",V.Local.sMO,"EntryDate",V.Local.sret(11),"PPWU",V.Local.sret(1),"UM",V.Local.sret(2),"Cost",V.Local.sret(3),"Setup",V.Local.sret(4),"Run",V.Local.sret(5),"Descr",V.Local.sret(6),"Alt",V.Local.sret(7),"Supp",V.Local.sret(8),"Code",V.Local.sret(9),"Mark",V.Local.sret(10),"Sell",0,"SEQ",V.Local.stype)
	gui.frmQRE.txtMPart.text("")
	gui.frmQRE.txtMPPWU.text("")
	gui.frmQRE.txtMUoMC.text("")
	gui.frmQRE.txtMCost.text("")
	gui.frmQRE.txtMQtyS.text("")
	gui.frmQRE.txtMQtyR.text("")
	gui.frmQRE.txtMDesc.text("")
	gui.frmQRE.txtMAltD.text("")
	gui.frmQRE.txtMSupp.text("")
	gui.frmQRE.txtMCode.text("")
	gui.frmQRE.txtMMark.text(30)
	gui.frmQRE.txtMCode.text("")
	gui.frmQRE.ddlMSupp.ClearItems
f.Intrinsic.control.endif
Program.Sub.cmdMAddM_Click.End

Program.Sub.optOutside_click.Start
f.Intrinsic.control.if(v.Screen.frmQRE!optStd.value,=,"1")
	gui.frmqre.txtMQtyS.visible(false)
	gui.frmqre.txtMQtyR.visible(false)
	gui.frmqre.txtMPPWU.visible(false)
	gui.frmqre.txtMAltD.visible(false)
	gui.frmqre.txtMCost.visible(false)
	gui.frmqre.txtMUoMC.visible(false)
	gui.frmqre.txtMSupp.visible(false)
	gui.frmqre.txtMCode.visible(false)
	gui.frmqre.txtMMark.visible(false)
	gui.frmqre.txtMDesc.visible(false)
	gui.frmqre.ddlMSupp.visible(false)
	gui.frmqre.lblMAltD.visible(false)
	gui.frmqre.lblMDesc.visible(false)
	gui.frmqre.lblMCode.visible(false)
	gui.frmqre.lblMSupp.visible(false)
	gui.frmqre.lblMMark.visible(false)
	gui.frmqre.lblMUoMC.visible(false)
	gui.frmqre.lblMPPWU.visible(false)
	gui.frmqre.lblMCost.visible(false)
	gui.frmqre.lblMVRFQ.visible(false)
	gui.frmqre.lblMQtyR.visible(false)
	gui.frmqre.lblMQtyS.visible(false)
	gui.frmqre.CMDMCalF.visible(false)
	gui.frmqre.chkMWaiv.visible(false)
	gui.frmqre.txtMPart.visible(false)
	gui.frmqre.cmdMB.visible(false)
	gui.frmqre.cmdPow.visible(false)
	gui.frmqre.ddlMFinh.visible(true)
	gui.frmqre.lblMPart.caption("Finish")
	gui.frmqre.cmdMAddM.caption("Add Finish")
f.Intrinsic.control.elseif(V.Screen.frmQRE!optCom.value,=,"1")
	gui.frmqre.txtMQtyS.visible(false)
	gui.frmqre.txtMQtyR.visible(true)
	gui.frmqre.lblMQtyR.visible(true)
	gui.frmqre.lblMQtyS.visible(false)
	gui.frmqre.cmdPow.visible(false)
	gui.frmqre.cmdMB.visible(true)
	gui.frmqre.cmdPow.visible(false)
	gui.frmqre.lblMQtyR.caption("Quantity")
	gui.frmqre.txtMPart.visible(true)
	gui.frmqre.txtMPPWU.visible(false)
	gui.frmqre.txtMAltD.visible(false)
	gui.frmqre.txtMCost.visible(true)
	gui.frmqre.txtMUoMC.visible(true)
	gui.frmqre.txtMSupp.visible(false)
	gui.frmqre.txtMCode.visible(false)
	gui.frmqre.txtMMark.visible(true)
	gui.frmqre.txtMDesc.visible(true)
	gui.frmqre.ddlMSupp.visible(false)
	gui.frmqre.lblMAltD.visible(false)
	gui.frmqre.lblMDesc.visible(true)
	gui.frmqre.lblMCode.visible(false)
	gui.frmqre.lblMSupp.visible(false)
	gui.frmqre.lblMMark.visible(true)
	gui.frmqre.lblMUoMC.visible(true)
	gui.frmqre.lblMPPWU.visible(false)
	gui.frmqre.lblMCost.visible(true)
	gui.frmqre.lblMVRFQ.visible(false)
	gui.frmqre.CMDMCalF.visible(false)
	gui.frmqre.chkMWaiv.visible(false)
	gui.frmqre.ddlMFinh.visible(false)
	gui.frmqre.lblMPart.caption("Comp Part#")
	gui.frmqre.cmdMAddM.caption("Add Component")
f.Intrinsic.control.else
	gui.frmqre.cmdPow.visible(false)
	gui.frmqre.cmdMB.visible(true)
	gui.frmqre.cmdPow.visible(false)
	gui.frmqre.txtMPart.visible(true)
	gui.frmqre.txtMQtyS.visible(false)
	gui.frmqre.txtMQtyR.visible(false)
	gui.frmqre.txtMPPWU.visible(true)
	gui.frmqre.txtMAltD.visible(true)
	gui.frmqre.txtMCost.visible(true)
	gui.frmqre.txtMUoMC.visible(true)
	gui.frmqre.txtMSupp.visible(true)
	gui.frmqre.txtMCode.visible(true)
	gui.frmqre.txtMMark.visible(true)
	gui.frmqre.txtMDesc.visible(true)
	gui.frmqre.ddlMSupp.visible(true)
	gui.frmqre.lblMAltD.visible(true)
	gui.frmqre.lblMDesc.visible(true)
	gui.frmqre.lblMCode.visible(true)
	gui.frmqre.lblMSupp.visible(true)
	gui.frmqre.lblMMark.visible(true)
	gui.frmqre.lblMUoMC.visible(true)
	gui.frmqre.lblMPPWU.visible(true)
	gui.frmqre.lblMCost.visible(true)
	gui.frmqre.lblMVRFQ.visible(true)
	gui.frmqre.CMDMCalF.visible(false)
	gui.frmqre.chkMWaiv.visible(false)
	gui.frmqre.ddlMFinh.visible(false)
	gui.frmqre.lblMPowP.visible(false)
	gui.frmqre.lblMNetP.visible(false)
	gui.frmqre.lblMMinR.visible(false)
	gui.frmqre.lblMMinc.visible(false)
	gui.frmqre.lblMPart.caption("Raw Mat. Part#")
	gui.frmqre.cmdMAddM.caption("Add Material")
f.Intrinsic.control.endif
gui.frmqre.txtMDesc.text("")
gui.frmqre.txtMMark.text(30)
gui.frmqre.txtMCost.text("")
Program.sub.optOutside_click.End

Program.Sub.ddlMSupp_click.Start
V.Local.svals.declare(string)
V.Local.ssupp.declare(string)
F.Intrinsic.string.split(V.Screen.frmQRE!ddlMSupp.text,"---",V.Local.svals)
	V.Local.ssupp.set(V.Local.svals(0))
	F.Intrinsic.string.rtrim(V.Local.ssupp,V.Local.ssupp)
F.Intrinsic.control.if(V.Local.ssupp.trim,<>,"Supplier")
	gui.frmQRE.txtMSupp.text(V.Local.svals(0).trim)
	gui.frmQRE.txtMCode.text(V.Local.svals(1).trim)
	gui.frmQRE.txtMUoMC.text(V.Local.svals(3).trim)
	gui.frmQRE.txtMCost.text(V.Local.svals(4).trim)
	gui.frmQRE.txtMDate.text(V.Local.svals(2).trim)
F.Intrinsic.control.endif
Program.Sub.ddlMSupp_click.End

Program.Sub.cmdCustBrowse_click.Start
v.Local.sError.Declare(string)
v.Local.sRet.Declare(string)
v.Local.sSQL.Declare(string)
v.Local.sTitles.Declare(string)
v.Local.sWidths.Declare(string)
v.Local.sPart.Declare(string)
v.Local.sRev.Declare(string)
v.Local.sPartRev.Declare(string)
v.Local.sval.declare(string)
f.Intrinsic.string.split("Customer#*!*Customer Name","*!*",v.Local.sTitles)
f.Intrinsic.string.split("2000*!*3000","*!*",v.Local.sWidths)
f.Intrinsic.ui.setbrowserhottypeahead(true)
v.Local.ssql.set("Select Customer,Name_Customer FROM V_CUSTOMER_MASTER order by NAME_CUSTOMER")
f.Intrinsic.UI.Browser("Select a Customer","conx",v.Local.sSQL,v.Local.sTitles,v.Local.sWidths,17000,10000,v.Local.sRet)
f.Intrinsic.string.split(v.Local.sret,"*!*",v.Local.sRet)
f.Intrinsic.Control.If(v.Local.sRet,<>,"***CANCEL***")
	gui.frmQRE.txtCustomer.text(v.Local.sRet(0).Trim)
	v.Local.sHeadr.Declare
	f.Intrinsic.String.Concat("Headr_",v.Screen.frmQRE!txtID.text,v.Local.sHeadr)
	f.Data.DataTable.SetValue(v.Local.sHeadr,0,"Customer",v.Screen.frmQRE!txtCustomer.text)
f.Intrinsic.Control.EndIf
Program.Sub.cmdCustBrowse_click.End

Program.Sub.txtCustPart_LostFocus.Start
v.Local.sHeadr.Declare
v.Local.stext.Declare
v.Local.iID.Declare
v.Local.stext.Set(v.Screen.frmQRE!txtCustPart.text)
f.Intrinsic.String.UCase(v.Local.stext,v.Local.stext)
gui.frmQRE.txtCustPart.Text(v.Local.stext)
v.Local.iID.Set(v.Screen.frmQRE!txtID.text)

'gui.frmQRE.trvRouters.RemoveItem(0)
'gui.frmQRE.trvRouters.AddTreeNode("","",0,v.Local.sText,TRUE)
Gui.frmQRE.trvRouters.SetNodeProps(v.Local.iID,FALSE,TRUE,FALSE,v.Local.stext)

f.Intrinsic.String.Concat("Headr_",v.Screen.frmQRE!txtID.text,v.Local.sHeadr)
f.Intrinsic.Control.If(v.DataTable.[v.Local.sHeadr].RowCount,=,0)
	f.Data.DataTable.AddRow(v.Local.sHeadr,"CustPart",v.Local.stext.Trim)
f.Intrinsic.Control.Else
	f.Data.DataTable.SetValue(v.Local.sHeadr,0,"CustPart",v.Screen.frmQRE!txtCustPart.text)
f.Intrinsic.Control.EndIf
Program.Sub.txtCustPart_LostFocus.End

Program.Sub.txtCustRevPart_LostFocus.Start
v.Local.sHeadr.Declare
v.Local.stext.Declare(string)
v.Local.stext.Set(v.Screen.frmQRE!txtCustRevPart.text)
f.Intrinsic.String.UCase(v.Local.stext,v.Local.stext)
f.Intrinsic.String.Concat("Headr_",v.Screen.frmQRE!txtID.text,v.Local.sHeadr)
f.Data.DataTable.SetValue(v.Local.sHeadr,0,"CustRevPart",v.Local.stext)
gui.frmQRE.txtCustRevPart.Text(v.Local.stext)
Program.Sub.txtCustRevPart_LostFocus.End

Program.Sub.txtCustomer_LostFocus.Start
v.Local.sHeadr.Declare
f.Intrinsic.String.Concat("Headr_",v.Screen.frmQRE!txtID.text,v.Local.sHeadr)
f.Data.DataTable.SetValue(v.Local.sHeadr,0,"Customer",v.Screen.frmQRE!txtCustomer.text)
Program.Sub.txtCustomer_LostFocus.End

Program.Sub.txtqty_LostFocus.Start
v.Local.sHeadr.Declare
f.Intrinsic.String.Concat("Headr_",v.Screen.frmQRE!txtID.text,v.Local.sHeadr)
f.Data.DataTable.SetValue(v.Local.sHeadr,0,"QtyBreak",v.Screen.frmQRE!txtQty.text)
Program.Sub.txtqty_LostFocus.End

Program.Sub.txtDesc_LostFocus.Start
v.Local.sHeadr.Declare
f.Intrinsic.String.Concat("Headr_",v.Screen.frmQRE!txtID.text,v.Local.sHeadr)
f.Data.DataTable.SetValue(v.Local.sHeadr,0,"Desc",v.Screen.frmQRE!txtDesc.text)
Program.Sub.txtDesc_LostFocus.End

Program.Sub.txtUM_LostFocus.Start
v.Local.sHeadr.Declare
f.Intrinsic.String.Concat("Headr_",v.Screen.frmQRE!txtID.text,v.Local.sHeadr)
f.Data.DataTable.SetValue(v.Local.sHeadr,0,"UM",v.Screen.frmQRE!txtUM.text)
Program.Sub.txtUM_LostFocus.End

Program.Sub.txtDraw_LostFocus.Start
v.Local.sHeadr.Declare
f.Intrinsic.String.Concat("Headr_",v.Screen.frmQRE!txtID.text,v.Local.sHeadr)
f.Data.DataTable.SetValue(v.Local.sHeadr,0,"Draw",v.Screen.frmQRE!txtDraw.text)
Program.Sub.txtDraw_LostFocus.End

Program.Sub.LAddL_Click.Start
V.Local.ssql.declare(string)
V.Local.sLWorkC.declare(string)
V.Local.sRoute.Declare(string)
F.Intrinsic.string.build("SELECT DISTINCT WORKCENTRE FROM GAB_4486_QRE_CONFIG WHERE WC_DESCRIPTION='{0}'",V.Screen.frmQRE!ddlLDesc.text,V.Local.ssql)
F.ODBC.connection!conx.executeandreturn(V.Local.ssql,V.Local.sLWorkC)
F.Intrinsic.Control.SelectCase(V.Screen.frmQRE!txtLTime.text)
	F.Intrinsic.Control.Case("")
		gui.frmQRE.txtLTime.text(0)
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.SelectCase(V.Screen.frmQRE!txtLDura.text)
	F.Intrinsic.Control.Case("")
		gui.frmQRE.txtLDura.text(0)
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.SelectCase(V.Screen.frmQRE!txtLOper.text)
	F.Intrinsic.Control.Case("")
		gui.frmQRE.txtLOper.text(0)
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.SelectCase(V.Screen.frmQRE!txtLLabR.text)
	F.Intrinsic.Control.Case("")
		gui.frmQRE.txtLLabR.text(0)
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.SelectCase(V.Screen.frmQRE!txtLLaSR.text)
	F.Intrinsic.Control.Case("")
		gui.frmQRE.txtLLaSR.text(0)
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.SelectCase(V.Screen.frmQRE!txtLLaST.text)
	F.Intrinsic.Control.Case("")
		gui.frmQRE.txtLLaST.text(0)
F.Intrinsic.Control.EndSelect

f.Intrinsic.String.Concat("Route_",v.Screen.frmQRE!txtID.text,v.Local.sRoute)
F.Data.datatable.addrow(v.Local.sRoute,"Descr",V.Screen.frmQRE!ddlLDesc.text,"Labour",V.Local.sLWorkC,"Operations",V.Screen.frmQRE!txtLOper.text,"Duration",V.Screen.frmQRE!txtLDura.text,"TimeReq",V.Screen.frmQRE!txtLTime.text,"T",V.Screen.frmQRE!ddlLT.text,"UM",V.Screen.frmQRE!txtLUnOM.text,"LabourRate",V.Screen.frmQRE!txtLLabR.text,"SetupTime",V.Screen.frmQRE!txtLLaST.text,"SetupRate",V.Screen.frmQRE!txtLLaSR.text)
gui.frmQRE.ddlLDesc.text("")
gui.frmQRE.txtLDura.text("")
gui.frmQRE.txtLOper.text("")
gui.frmQRE.txtLTime.text("")
gui.frmQRE.ddlLT.text("")
gui.frmQRE.txtLUnOM.text("")
gui.frmQRE.txtLLabR.text("")
gui.frmQRE.txtLLaST.text("")
gui.frmQRE.txtLLaSR.text("")
gui.frmQRE.txtLOper.backcolor(V.Color.white)
gui.frmQRE.txtLDura.backcolor(V.Color.white)
gui.frmQRE.txtLLabR.backcolor(V.Color.white)

Program.Sub.LAddL_Click.End

Program.Sub.ddlLDesc_click.Start
v.Local.sret.Declare(string)
v.Local.sTimeLong.Declare(string)
v.Local.sOperpad.Declare(string)
v.Local.sDurapad.Declare(string)
v.Local.spart.Declare(string)
v.Local.ssql.Declare(string,"SELECT LABOUR_UNIT_DESC1,LABOUR_UNIT_DESC2,DEFAULT_RUN_TYPE,COST_UNIT,DEFAULT_RUN_RATE,DEFAULT_SETUP_RATE,DEFAULT_SETUP_TIME FROM GAB_4486_QRE_CONFIG WHERE WC_DESCRIPTION='{0}' ")
f.Intrinsic.String.Build(v.Local.ssql,v.Screen.frmQRE!ddlLDesc.Text,v.Caller.User,v.Local.ssql)
f.ODBC.Connection!conx.ExecuteAndReturn(v.Local.ssql,v.Local.sret)
f.Intrinsic.string.split(v.Local.sret,"*!*",v.Local.sret)
f.Intrinsic.Control.SelectCase(v.Local.sret(2).trim)
	f.Intrinsic.Control.Case("S")
		v.Local.sTimeLong.set("Seconds")
	f.Intrinsic.Control.Case("M")
		v.Local.sTimeLong.set("Minutes")
	f.Intrinsic.Control.Case("H")
		v.Local.sTimeLong.set("Hours")
f.Intrinsic.Control.EndSelect

f.Intrinsic.Control.SelectCase(v.Local.sret(0).trim)
	f.Intrinsic.Control.Case("")
		gui.frmQRE.txtLOper.enabled("False")
		gui.frmQRE.txtLDura.enabled("False")
		gui.frmQRE.txtLTime.enabled("True")
		gui.frmQRE.txtLDura.backcolor(v.Color.ltgray)
		gui.frmQRE.txtLOper.backcolor(v.Color.ltgray)
		gui.frmQRE.txtLTime.backcolor(v.Color.white)
	f.Intrinsic.Control.CaseElse
		gui.frmQRE.txtLOper.enabled("True")
		gui.frmQRE.txtLDura.enabled("True")
		gui.frmQRE.txtLDura.backcolor(v.Color.white)
		gui.frmQRE.txtLOper.backcolor(v.Color.white)
		gui.frmQRE.txtLTime.backcolor(v.Color.ltgray)
		gui.frmQRE.txtLTime.enabled("False")
		f.Intrinsic.string.concat("",v.Local.sRet(0),"/",v.Local.sRet(3),v.Local.sOperpad)
		f.Intrinsic.string.concat("",v.Local.sTimeLong,"/",v.Local.sRet(3),v.Local.sDurapad)
f.Intrinsic.Control.EndSelect

gui.frmQRE.txtLOperLL.caption(v.Local.sOperpad)
gui.frmQRE.txtLDuraLL.caption(v.Local.sDurapad)
gui.frmQRE.ddlLT.Text(v.Local.sRet(2))
gui.frmQRE.txtLUnOM.Text(v.Local.sRet(3))
gui.frmQRE.txtLLabR.Text(v.Local.sRet(4))
gui.frmQRE.txtLLaSR.Text(v.Local.sRet(5))
gui.frmQRE.txtLLaST.Text(v.Local.sRet(6))
Program.Sub.ddlLDesc_click.End

Program.Sub.cmdLRemv_Click.Start
f.Intrinsic.control.try
	v.Local.k.declare(long)
	v.Local.SRET.Declare(STRING)
	v.Local.SRET2.Declare(STRING)
	v.Local.SOPERATIONS.Declare(STRING)
	v.Local.fOperations.declare(Float)
	v.Local.SDURATION.Declare(STRING)
	v.Local.fDuration.declare(Float)
	v.Local.fTime.declare(Float)
	v.Local.sRoute.Declare(string)
	v.Local.sDVRoute.Declare(string)
	f.Intrinsic.String.Concat("Route_",v.Screen.frmQRE!txtID.text,v.Local.sRoute)
	f.Intrinsic.String.Concat("DVRoute_",v.Screen.frmQRE!txtID.text,v.Local.sDVRoute)
	f.Data.DataView.ToString(v.Local.sRoute,v.Local.sDVRoute,",","!*!",v.Local.sret)
	f.Intrinsic.STRING.SPLIT(v.Local.SRET,"!*!",v.Local.SRET)
	f.Intrinsic.control.for(v.Local.k,v.Local.sret.ubound,0,-1)
		f.Intrinsic.string.split(v.Local.sret(v.Local.k),",",v.Local.sret2)
		f.Intrinsic.String.RegExMatch(v.Local.SRET2(2),"-?\d+",true,v.Local.soperations)
		f.Intrinsic.String.Split(v.Local.soperations,"*!*",v.Local.soperations)
		f.Intrinsic.Control.Try
			f.Intrinsic.Math.ConvertToFloat(v.Local.soperations(v.Local.soperations.UBound),v.Local.fOperations)
		f.Intrinsic.Control.EndTry
		f.Intrinsic.String.RegExMatch(v.Local.SRET2(2),"-?\d+",true,v.Local.soperations)
		f.Intrinsic.String.Split(v.Local.soperations,"*!*",v.Local.soperations)
		f.Intrinsic.Control.Try
			f.Intrinsic.Math.ConvertToFloat(v.Local.soperations(v.Local.soperations.UBound),v.Local.fOperations)
		f.Intrinsic.Control.EndTry
		v.Local.fTime.set(v.Local.sret2(4))
		f.Intrinsic.control.if(v.Local.fOperations,=,0)
		f.Intrinsic.control.andif(v.Local.fDuration,=,0)
		f.Intrinsic.control.andif(v.Local.ftime,=,0)
			f.Data.datatable.DeleteRow(v.local.sRoute,v.Local.k)
		f.Intrinsic.control.endif
	f.Intrinsic.control.next(v.Local.k)
f.Intrinsic.control.catch
	f.Intrinsic.ui.msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.control.endtry
Program.Sub.cmdLRemv_Click.End

Program.Sub.gsGCRoute_cellvaluechanged.Start
V.Local.ssql.Declare(string)
V.Local.sTimeLong.Declare(string)
V.Local.sOperpad.Declare(string)
V.Local.sDurapad.Declare(string)
V.Local.sret.Declare(string)
V.Local.sRoute.Declare(string)
f.Intrinsic.String.Concat("Route_",v.Screen.frmQRE!txtID.text,v.Local.sRoute)
F.Intrinsic.control.try
	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.Case("Descr")
			F.Intrinsic.Control.SelectCase(V.Args.rowindex)
				F.Intrinsic.Control.Case(-1)
				F.Intrinsic.Control.CaseElse
					F.Data.datatable.setvalue(v.Local.sRoute,V.Args.rowindex,"TimeReq",0)
					V.Local.ssql.set("SELECT DEFAULT_RUN_RATE, DEFAULT_SETUP_RATE, DEFAULT_SETUP_TIME, WORKCENTRE, DEFAULT_RUN_TYPE,LABOUR_UNIT_DESC1,LABOUR_UNIT_DESC2,COST_UNIT FROM GAB_4486_QRE_CONFIG WHERE WC_DESCRIPTION='{1}'")
					F.Intrinsic.String.Build(V.Local.ssql,V.Caller.User,V.Args.value.TRIM,V.Local.ssql)
					F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.ssql,V.Local.sret)
					F.Intrinsic.String.Split(V.Local.sret,"*!*",V.Local.sret)
					F.Data.datatable.setvalue(v.Local.sRoute,V.Args.rowindex,"LabourRate",V.Local.sRet(0))
					F.Data.datatable.setvalue(v.Local.sRoute,V.Args.rowindex,"SetupRate",V.Local.sRet(1))
					F.Data.datatable.setvalue(v.Local.sRoute,V.Args.rowindex,"SetupTime",V.Local.sRet(2))
					F.Data.datatable.setvalue(v.Local.sRoute,V.Args.rowindex,"Labour",V.Local.sRet(3))
					F.Data.datatable.setvalue(v.Local.sRoute,V.Args.rowindex,"T",V.Local.sRet(4))
					F.Data.datatable.setvalue(v.Local.sRoute,V.Args.rowindex,"UM",V.Local.sRet(7))
			F.Intrinsic.Control.SelectCase(V.Local.sret(5).trim)
				F.Intrinsic.Control.Case("")
				F.Intrinsic.Control.CaseElse
					F.Intrinsic.string.concat("        ","/",V.Local.sRet(5),V.Local.sOperpad)
					F.Intrinsic.Control.SelectCase(V.Local.sRet(4).trim)
						F.Intrinsic.Control.Case("S")
							V.Local.stimelong.set("Seconds")
						F.Intrinsic.Control.Case("M")
							V.Local.stimelong.set("Minutes")
						F.Intrinsic.Control.Case("H")
							V.Local.stimelong.set("Hours")
					F.Intrinsic.Control.EndSelect
					F.Intrinsic.string.concat("        ",V.Local.sTimeLong,"/",V.Local.sRet(6),V.Local.sDurapad)
			F.Intrinsic.Control.EndSelect
		F.Data.datatable.setvalue(v.Local.sRoute,V.Args.rowindex,"Operations",V.Local.sOperpad)
		F.Data.datatable.setvalue(v.Local.sRoute,V.Args.rowindex,"Duration",V.Local.sDurapad)
		F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.EndSelect
F.Intrinsic.control.catch
F.Intrinsic.control.endtry
Program.Sub.gsGCRoute_cellvaluechanged.End

Program.Sub.gsGCRoute_rowcellclick.Start
f.Intrinsic.control.try
	v.Local.sroute.Declare(string)
	v.Local.ICURRROW.Declare(long)
	v.Local.ICURRROW.Set(v.Args.rowindex)
	f.Intrinsic.String.Concat("Route_",v.Screen.frmQRE!txtID.text,v.Local.sRoute)
	f.Intrinsic.Control.If(v.Args.column,=,"Up")
		f.Intrinsic.Control.If(v.Args.rowindex,<>,0)
			f.Data.DataTable.moverow(v.Local.sroute,v.Local.ICURRROW,v.Local.ICURRROW.--)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Elseif(v.Args.column,=,"Down")
		f.Data.DataTable.moverow(v.Local.sroute,v.Local.ICURRROW,v.Local.ICURRROW.++)
	f.Intrinsic.Control.EndIf
f.Intrinsic.control.catch
f.Intrinsic.control.endtry
Program.Sub.gsGCRoute_rowcellclick.End

Program.Sub.ddlMFinh_click.Start
V.Local.bRet.declare(boolean)
V.Local.ssql.declare(string)
V.Local.fret.declare(float)
V.Local.sret.declare(string)
v.Local.sddl.Declare(string)

f.Intrinsic.control.if(V.Screen.frmqre!ddlMFinh.text,=,"Powdercoat")
	gui.frmqre.txtMCost.visible(false)
	gui.frmqre.lblMCost.visible(false)
	gui.frmqre.txtMMark.visible(false)
	gui.frmqre.lblMMark.visible(false)
	gui.frmqre.txtMQtyS.visible(false)
	gui.frmqre.lblMQtyS.visible(false)
	gui.frmqre.txtMQtyR.visible(false)
	gui.frmqre.lblMQtyR.visible(false)
	gui.frmqre.chkMWaiv.visible(true)
	gui.frmqre.CMDMCalF.visible(true)
	gui.frmqre.lblMMinc.visible(true)
	gui.frmqre.lblMMinR.visible(true)
	gui.frmqre.lblMPowP.visible(true)
	gui.frmqre.lblMNetP.visible(true)
	gui.frmqre.cmdPow.visible(true)
	F.Intrinsic.control.callsub(cmdPow_click)
F.Intrinsic.control.else
	gui.frmqre.cmdPow.visible(false)
	F.Intrinsic.String.IsInString(V.Screen.frmqre!ddlMFinh.text,"kg",True,V.Local.bret)
	V.Local.ssql.set("select STANDARD_SETUP, UNIT_MEASURE, RATE from v_op_codes where description='{0}'")
	F.Intrinsic.string.build(V.Local.ssql,V.Screen.frmQRE!ddlMFinh.value,V.Local.ssql)
	F.ODBC.connection!conx.executeandreturn(V.Local.ssql,V.Local.sret)
	F.Intrinsic.string.split(V.Local.sret,"*!*",V.Local.sret)
	V.Local.ssql.set("select OUTSIDE_2 from V_MARKUP_PCT")
	F.ODBC.connection!conx.executeandreturn(V.Local.ssql,V.Local.fret)
	F.Intrinsic.MATH.SUB(V.Local.FRET,1,V.Local.FRET)
	F.Intrinsic.math.mult(V.Local.FRET,100,V.Local.FRET)
	F.Intrinsic.control.if(V.Local.bret,=,TRUE)
		gui.frmqre.txtMQtyR.text(V.Local.sret(2))
		gui.frmqre.txtMUoMC.text(V.Local.sret(1))
		gui.frmqre.lblMMinR.caption(V.Local.sret(0))
		gui.frmqre.txtMQtyS.visible(true)
		gui.frmqre.lblMQtyS.visible(true)
		gui.frmqre.lblMQtyS.caption("Weight")
		gui.frmqre.txtMQtyR.visible(true)
		gui.frmqre.lblMQtyR.visible(true)
		gui.frmqre.lblMQtyR.caption("Rate")
		gui.frmqre.txtMCost.visible(true)
		gui.frmqre.lblMCost.visible(true)
		gui.frmqre.lblMCost.caption("Cost/Unit")
		gui.frmqre.txtMMark.visible(true)
		gui.frmqre.lblMMark.visible(true)
		gui.frmqre.lblMMark.caption("Markup")
		gui.frmqre.chkMWaiv.visible(true)
		gui.frmqre.CMDMCalF.visible(true)
		gui.frmqre.lblMMinc.visible(true)
		gui.frmqre.lblMMinR.visible(true)
		gui.frmqre.lblMPowP.visible(false)
		gui.frmqre.lblMNetP.visible(false)
		gui.frmqre.txtMMark.text(V.Local.fret)
	F.Intrinsic.control.else
		gui.frmqre.txtMQtyR.text(V.Local.sret(2))
		gui.frmqre.txtMUoMC.text(V.Local.sret(1))
		gui.frmqre.lblMMinR.caption(V.Local.sret(0))
		gui.frmqre.txtMQtyS.visible(false)
		gui.frmqre.lblMQtyS.visible(false)
		gui.frmqre.lblMQtyS.caption("Weight")
		gui.frmqre.txtMQtyR.visible(false)
		gui.frmqre.lblMQtyR.visible(false)
		gui.frmqre.lblMQtyR.caption("Rate")
		gui.frmqre.txtMCost.visible(true)
		gui.frmqre.lblMCost.visible(true)
		gui.frmqre.lblMCost.caption("Cost/Unit")
		gui.frmqre.txtMMark.visible(true)
		gui.frmqre.lblMMark.visible(true)
		gui.frmqre.lblMMark.caption("Markup")
		gui.frmqre.chkMWaiv.visible(true)
		gui.frmqre.CMDMCalF.visible(true)
		gui.frmqre.lblMMinc.visible(true)
		gui.frmqre.lblMMinR.visible(true)
		gui.frmqre.lblMPowP.visible(false)
		gui.frmqre.lblMNetP.visible(false)
		gui.frmqre.txtMMark.text(V.Local.fret)
	F.Intrinsic.control.endif
f.Intrinsic.control.endif
Program.Sub.ddlMFinh_click.End

Program.Sub.cmdPOW_click.Start
gui.SS_FORM..show
Program.Sub.cmdPOW_click.End

Program.Sub.ddlColour_Click.Start
V.Local.sret.Declare(string)
V.Local.sret2.Declare(string)
V.Local.spart.Declare(string)
V.Local.sColour.declare(string)
V.Local.scolour.set(V.Screen.SS_Form!ddlColour.Text)
F.Intrinsic.string.split(V.Local.scolour,"-",V.Local.scolour)
V.Local.ssql.Declare(string,"SELECT STANDARD_BILL FROM V_WORKCENTERS WHERE MACHINE='PC'")
V.Local.fBill.Declare(float)
F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.ssql,V.Local.fBill)
V.Local.ssql.set("SELECT CREWSIZE FROM V_WORKCENTERS WHERE MACHINE='PC'")
V.Local.fCrew.Declare(float)
F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.ssql,V.Local.fCrew)
V.Local.fAltCost.Declare(float)
V.Local.ssql.Set("SELECT amt_alt_cost,part FROM V_INVENTORY_MSTR WHERE DESCRIPTION='{0}'")
F.Intrinsic.String.Build(V.Local.ssql,V.Local.scolour(0),V.Local.ssql)
F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.ssql,V.Local.sRet)
F.Intrinsic.String.Split(V.Local.sret,"*!*",V.Local.sret)
V.Local.fAltCost.Set(V.Local.sret(0))
V.Local.spart.Set(V.Local.sret(1))
gui.ss_form.lblPart.caption(V.Local.sret(1))
V.Local.fMicrons.Declare(float)
V.Local.ssql.Set("SELECT thickness FROM V_INVENTORY_MST3 WHERE PART='{0}'")
F.Intrinsic.String.Build(V.Local.ssql,V.Local.spart,V.Local.ssql)
F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.ssql,V.Local.fMicrons)
V.Local.flinespeed.Declare(float)
V.Local.ssql.Set("SELECT text_info2 FROM V_INVENTORY_MST2 WHERE PART='{0}'")
F.Intrinsic.String.Build(V.Local.ssql,V.Local.spart,V.Local.ssql)
F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.ssql,V.Local.flinespeed)
V.Local.fMarkup.Declare(string)
F.ODBC.Connection!conx.ExecuteAndReturn("SELECT OUTSIDE_2 FROM V_MARKUP_PCT",V.Local.fMarkup)
F.Intrinsic.Math.Evaluate("([V.Local.fMarkup]-1)*100",V.Local.fMarkup)
V.Local.ssql.Set("SELECT distinct GAP, MANPOWER, POW_LAB_RATE, POW_SET_COST FROM GAB_4486_QRE_CONFIG")
F.Intrinsic.String.Build(V.Local.ssql,V.Caller.User,V.Local.ssql)
F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.ssql,V.Local.sRet2)
F.Intrinsic.String.Split(V.Local.sret2,"*!*",V.Local.sret2)
gui.SS_Form.txtGap.Text(V.Local.sret2(0))
gui.SS_Form.txtMan.Text(V.Local.sret2(1))
gui.SS_Form.txtLabourRate.Text(V.Local.sret2(2))
gui.SS_Form.txtSetupCost.Text(V.Local.sret2(3))
gui.SS_Form.txtLineSpeed.Text(V.Local.flinespeed)
gui.SS_Form.txtPowdPrice.Text(V.Local.fAltCost)
gui.SS_Form.txtPowdThick.Text(V.Local.fMicrons)
gui.SS_Form.txtMarkup.text(V.Local.fMarkup)
Program.Sub.ddlColour_Click.End

Program.Sub.evalCost.Start
V.Local.fLength.Declare(float,0)
V.Local.fWidth.Declare(float,0)
V.Local.lMicron.Declare(long,0)
V.Local.fPowdVendPrice.Declare(float,0)
V.Local.fResult.Declare(float,0)
V.Local.fLength.Set(V.Screen.SS_Form!txtProdLength.Text)
F.Intrinsic.Control.SelectCase(V.Local.fLength)
	F.Intrinsic.Control.Case(0)
		F.Intrinsic.control.exitsub
F.Intrinsic.Control.EndSelect

F.Intrinsic.Math.Div(V.Local.fLength,1000,V.Local.fLength)
V.Local.FWidth.set(V.Screen.SS_Form!txtProdWidth.Text)
F.Intrinsic.Control.SelectCase(V.Local.fwidth)
	F.Intrinsic.Control.Case(0)
		F.Intrinsic.control.exitsub
F.Intrinsic.Control.EndSelect

F.Intrinsic.control.if(V.Screen.SS_Form!txtProdWidth.Text,>,1600)
	F.Intrinsic.ui.msgbox("Width must be less than 1600mm")
	F.Intrinsic.control.exitsub
F.Intrinsic.control.endif

F.Intrinsic.Math.Div(V.Local.fwidth,1000,V.Local.fwidth)
V.Local.lMicron.Set(V.Screen.SS_Form!txtPowdThick.Text)
V.Local.fPowdVendPrice.Set(V.Screen.SS_Form!txtPowdPrice.text)
V.Local.FTEMP.Declare(FLOAT)
F.Intrinsic.Math.Mult(V.Local.fLength,V.Local.fWidth,V.Local.FTEMP)
F.Intrinsic.Math.Mult(V.Local.FTEMP,.2,V.Local.FTEMP)
F.Intrinsic.Math.Mult(V.Local.FTEMP,V.Local.fPowdVendPrice,V.Local.FTEMP)
F.Intrinsic.Math.Mult(V.Local.FTEMP,V.Local.lMicron,V.Local.FTEMP)
F.Intrinsic.Control.SelectCase(V.Local.ftemp)
	F.Intrinsic.Control.Case(0)
		F.Intrinsic.control.exitsub
F.Intrinsic.Control.EndSelect

F.Intrinsic.Math.Div(V.Local.FTEMP,45,V.Local.fResult)
F.Intrinsic.Math.Round(V.Local.fResult,2,V.Local.fResult)
V.Local.fPowderCost.Declare(float,0)
V.Local.fPowderCost.Set(V.Local.fResult)
gui.SS_Form.txtPowdCost.Text(V.Local.fResult)
V.Local.fChemCost.Declare(float)
F.Intrinsic.Control.SelectCase(V.Local.fResult)
	F.Intrinsic.Control.Case(0)
		F.Intrinsic.control.exitsub
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.SelectCase(V.Local.fPowdVendPrice)
	F.Intrinsic.Control.Case(0)
		F.Intrinsic.control.exitsub
F.Intrinsic.Control.EndSelect

F.Intrinsic.Math.Div(V.Local.fResult,V.Local.fPowdVendPrice,V.Local.fResult)
F.Intrinsic.Math.Mult(V.Local.fResult,1.5,V.Local.fChemCost)
F.Intrinsic.Math.Round(V.Local.fChemCost,2,V.Local.fChemCost)
V.Local.lLineHeight.declare(long,1650)
V.Local.lLessStartHook.declare(long,50)
V.Local.lAvailableHang.declare(long)
F.Intrinsic.math.sub(V.Local.lLineHeight,V.Local.lLessStartHook,V.Local.lAvailableHang)
V.Local.fSpace.declare(float)
F.Intrinsic.math.sub(V.Local.lAvailableHang,V.Screen.SS_Form!txtProdWidth.Text,V.Local.fspace)
V.Local.lAddLineHook.declare(long,170)
V.Local.fAddProdHang.declare(long)
F.Intrinsic.math.add(V.Screen.SS_Form!txtProdWidth.Text,V.Local.laddlinehook,V.Local.fAddProdHang)
V.Local.fVertHang.Declare(Float)
F.Intrinsic.control.if(V.Local.fSpace,=,0)
F.Intrinsic.control.else
F.Intrinsic.math.div(V.Local.fSpace,V.Local.fAddProdHang,V.Local.fVertHang)
F.Intrinsic.control.endif
F.Intrinsic.math.floor(V.Local.fverthang,V.Local.fverthang)
F.Intrinsic.math.add(V.Local.fverthang,1,V.Local.fverthang)
V.Local.fLabour.Declare(float)
V.Local.fMan.Declare(float)
V.Local.fMan.Set(V.Screen.SS_Form!txtMan.text)
V.Local.fLabourRate.Declare(float)
V.Local.fLabourRate.Set(V.Screen.SS_Form!txtLabourRate.Text)
V.Local.fLineSpeed.Declare(float)
V.Local.fLineSpeed.Set(V.Screen.SS_Form!txtLineSpeed.text)
V.Local.fGap.Declare(float)
V.Local.fGap.Set(V.Screen.SS_Form!txtGap.text)
F.Intrinsic.Control.SelectCase(V.Local.fGap)
	F.Intrinsic.Control.Case(0)
		F.Intrinsic.control.exitsub
F.Intrinsic.Control.EndSelect

F.Intrinsic.Math.Div(V.Local.fGap,1000,V.Local.fGap)
V.Local.fSetup.Declare(float)
V.Local.fSetup.Set(V.Screen.SS_Form!txtSetupCost.Text)
F.Intrinsic.Math.Mult(V.Local.fSetup,.01,V.Local.fSetup)
F.Intrinsic.Math.Add(V.Local.fSetup,1,V.Local.fSetup)
V.Local.FTEMP.Set(0)
F.Intrinsic.control.if(V.Local.fVertHang,=,0)
	F.Intrinsic.control.exitsub
F.Intrinsic.control.else
	F.Intrinsic.Math.Div(V.Local.fLength,V.Local.fVertHang,V.Local.FTEMP)
F.Intrinsic.control.endif

F.Intrinsic.Math.Add(V.Local.FTEMP,V.Local.fGap,V.Local.FTEMP)
F.Intrinsic.Math.Mult(V.Local.FTEMP,V.Local.fSetup,V.Local.FTEMP)
F.Intrinsic.Math.Div(V.Local.FTEMP,V.Local.fLineSpeed,V.Local.FTEMP)
F.Intrinsic.Math.Mult(V.Local.FTEMP,V.Local.fMan,V.Local.FTEMP)
F.Intrinsic.Control.SelectCase(V.Local.fTemp)
	F.Intrinsic.Control.Case(0)
		F.Intrinsic.control.exitsub
F.Intrinsic.Control.EndSelect
F.Intrinsic.Math.Div(V.Local.FTEMP,60,V.Local.FTEMP)
F.Intrinsic.Math.Mult(V.Local.FTEMP,V.Local.fLabourRate,V.Local.fLabour)
F.Intrinsic.Math.Round(V.Local.fLabour,2,V.Local.fLabour)
gui.SS_Form.txtLabourCost.Text(V.Local.fLabour)
gui.SS_Form.txtChemCost.Text(V.Local.fChemCost)
V.Local.fPrice.Declare(float,0)
F.Intrinsic.math.Add(V.Local.fLabour,V.Local.fChemCost,V.Local.fPrice)
F.Intrinsic.Math.Add(V.Local.fPrice,V.Local.fPowderCost,V.Local.fPrice)
F.Intrinsic.math.Round(V.Local.fPrice,2,V.Local.fPrice)
gui.SS_Form.txtPricePerUnit.Text(V.Local.fPrice)
gui.SS_Form.lblCalcPriceResult.Caption(V.Local.fPrice)
V.Local.fNetPrice.Declare(float)
V.Local.fmarkup.Declare(float)
V.Local.fmarkup.Set(V.Screen.SS_Form!txtMarkup.Text)
gui.frmQRE.txtMMark.text(V.Local.fmarkup)
F.Intrinsic.Math.Mult(V.Local.fmarkup,.01,V.Local.fmarkup)
F.Intrinsic.Math.Add(V.Local.fmarkup,1,V.Local.fmarkup)
F.Intrinsic.Math.Mult(V.Local.FPrice,V.Local.fmarkup,V.Local.fNetPrice)
V.Local.sResult.Declare(string)
V.Local.sresult2.Declare(string)
F.Intrinsic.Math.Round(V.Local.fNetPrice,2,V.Local.fNetPrice)
F.Intrinsic.String.Format(V.Local.fNetPrice,"$###,###.00",V.Local.sResult)
gui.SS_Form.lblNetPriceResult.Caption(V.Local.sResult)
gui.frmQRE.lblMPowP.caption(V.Local.fNetPrice)
gui.frmQRE.txtMCost.text(V.Local.fPrice)
V.Local.fMinimumCharge.Declare(float,45)
F.Intrinsic.String.Format(V.Local.fMinimumCharge,"$##.00",V.Local.sresult2)
gui.SS_Form.lblMinChargeResult.Caption(V.Local.sresult2)
gui.frmqre.lblMMinR.caption(V.Local.fMinimumCharge)
gui.frmqre.lblMMinR.visible(True)
gui.frmQRE.txtMDesc.caption(V.Screen.SS_Form!ddlColour.Text)
gui.frmqre.txtMCost.text(V.Screen.SS_Form!txtPriceperunit.text)
gui.frmqre.txtMMark.text(V.Screen.SS_Form!txtMarkup.text)
gui.frmqre.chkMWaiv.value(V.Screen.SS_Form!chkWaiveMin.value)
V.Local.fGrandTotal.Declare(float,0)

F.Intrinsic.Control.SelectCase(V.Local.fNetPrice)
	F.Intrinsic.Control.CaseRange(0,45)
		V.Local.fGrandTotal.Set(V.Local.fMinimumCharge)
	F.Intrinsic.control.caseelse
		V.Local.fGrandTotal.Set(V.Local.fNetPrice)
F.Intrinsic.Control.EndSelect

gui.SS_Form.lblGT.caption(V.Local.fGrandTotal)
gui.frmQRE.cmdpow.backcolor(V.Color.ltgreen)
Program.Sub.evalCost.End

Program.Sub.txtProdLength_LostFocus.Start
F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdLength.Text)
	F.Intrinsic.Control.Case("")
	F.Intrinsic.Control.Caseelse
	F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdWidth.Text)
		F.Intrinsic.Control.Case("")
		F.Intrinsic.control.caseelse
			F.Intrinsic.Control.CallSub(evalcost)
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndSelect
Program.Sub.txtProdLength_LostFocus.End

Program.Sub.txtProdWidth_LostFocus.Start
F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdLength.Text)
	F.Intrinsic.Control.Case("")
	F.Intrinsic.Control.Caseelse
	F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdWidth.Text)
		F.Intrinsic.Control.Case("")
		F.Intrinsic.control.caseelse
			F.Intrinsic.Control.CallSub(evalcost)
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndSelect
Program.Sub.txtProdWidth_LostFocus.End

Program.Sub.txtMarkup_LostFocus.Start
F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdLength.Text)
	F.Intrinsic.Control.Case("")
	F.Intrinsic.Control.Caseelse
	F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdWidth.Text)
		F.Intrinsic.Control.Case("")
		F.Intrinsic.control.caseelse
			F.Intrinsic.Control.CallSub(evalcost)
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndSelect
Program.Sub.txtMarkup_LostFocus.End

Program.Sub.cmdCalculate_Click.Start
F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdLength.Text)
	F.Intrinsic.Control.Case("")
	F.Intrinsic.Control.Caseelse
	F.Intrinsic.Control.SelectCase(V.Screen.SS_Form!txtProdWidth.Text)
		F.Intrinsic.Control.Case("")
		F.Intrinsic.control.caseelse
			F.Intrinsic.Control.CallSub(evalcost)
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndSelect
Program.Sub.cmdCalculate_Click.End

Program.Sub.cmdClear_Click.Start
Gui.SS_Form.txtProdLength.text("")
Gui.SS_Form.txtProdWidth.text("")
Gui.SS_Form.txtPowdThick.text("")
Gui.SS_Form.txtPowdPrice.text("")
Gui.SS_Form.txtPowdCost.text("")
Gui.SS_Form.txtChemCost.text("")
Gui.SS_Form.txtMarkup.text("")
Gui.SS_Form.txtGap.text("")
Gui.SS_Form.txtMan.text("")
Gui.SS_Form.txtLabourRate.text("")
Gui.SS_Form.txtSetupCost.text("")
Gui.SS_Form.txtLineSpeed.text("")
Gui.SS_Form.txtLabourCost.text("")
Gui.SS_Form.txtPricePerUnit.text("")
Gui.SS_Form.ddlColour.text("")
Gui.SS_Form.lblNetPriceResult.caption("")
Gui.SS_Form.lblMinChargeResult.caption("")
Gui.SS_Form.lblID.caption("")
Gui.SS_Form.lblGT.caption("")
Gui.SS_Form.lblPart.caption("")
Gui.SS_Form.lblCalcPriceResult.caption("")
gui.frmQRE.cmdPow.backcolor(-2147483633)
Program.Sub.cmdClear_Click.End

Program.Sub.TVFileDragDrop.Start
v.Local.sFiles.Declare(String)
v.Local.sDest.declare(string)
v.Local.sCopy.Declare(String)
v.Local.sFIle.Declare(String)
V.Local.shold.Declare(String)
V.Local.shold.Redim(0,3)
V.Local.iPosPeriod.Declare(Long)
V.Local.iPos.Declare(Long)
V.Local.squery.Declare(String)
V.Local.sDir.Declare(String)
V.Local.bTest.Declare(Boolean)
V.Local.bCopy.Declare(Boolean)
V.Local.sPath.Declare(String)
V.Local.bRev.Declare(Boolean)
V.Local.sdocpath.Declare(String)
V.Local.ssql.declare(string)
V.Local.sret.declare(string)
V.Local.sFileCheck.declare(string)
V.Local.bFileExist.declare(boolean)
V.Local.stimestamp.declare(string)
V.Local.stempfilename.declare(string)
V.Local.sFileExtension.declare(string)
v.Local.sDCTFiles.Declare(string)
v.Local.bExists.Declare(boolean)
v.Local.sID.Declare(string)
v.Local.sDirHold.Declare(string)
v.Local.sID.Set(v.Screen.frmQRE!txtBoostID.text)
f.Intrinsic.String.Concat("dctFiles",v.Screen.frmQRE!txtID.text,v.Local.sDCTFiles)

F.Intrinsic.control.try
	V.Local.sSQL.set("SELECT DISTINCT DOC_CONTROL_PATH FROM GAB_4486_QRE_CONFIG WHERE LTRIM(DOC_CONTROL_PATH)<>''")
	F.ODBC.connection!conx.executeandreturn(V.Local.ssql,V.Local.sdocpath)
	V.Local.i.Declare(long)
	V.Local.lret.Declare(long)
	F.Intrinsic.String.Split(V.Args.Files,"*!*",V.Local.sFiles)
	F.Intrinsic.Control.For(V.Local.i,0,V.Local.sFiles.UBound,1)
		F.Intrinsic.String.InstrRev(V.Local.sfiles(V.Local.i),"\",V.Local.iPos)
		F.Intrinsic.Control.If(V.Local.iPos,<>,0)
			F.Intrinsic.String.Left(V.Local.sfiles(V.Local.i),V.Local.ipos,V.Local.shold(0))
			F.Intrinsic.Math.Add(V.Local.iPos,1,V.Local.iPos)
			F.Intrinsic.String.Mid(V.Local.sfiles(V.Local.i),V.Local.ipos,V.Local.shold(1))
			F.Intrinsic.string.concat(V.Local.sdocpath,V.Local.shold(1),V.Local.sfilecheck)
			F.Intrinsic.file.exists(V.Local.sfilecheck,V.Local.bFileExist)
			F.Intrinsic.control.if(V.Local.bFileExist)
				F.Intrinsic.string.format(V.Ambient.Now,"YYYYMMDD HHNNSS",V.Local.stimestamp)
				F.Intrinsic.String.InstrRev(V.Local.shold(1),".",V.Local.iPosPeriod)
				F.Intrinsic.string.mid(V.Local.shold(1),V.Local.iposperiod,V.Local.sFileExtension)
				F.Intrinsic.math.sub(V.Local.iposperiod,1,V.Local.iposperiod)
				F.Intrinsic.string.left(V.Local.shold(1),V.Local.iposperiod,V.Local.stempfilename)
				F.Intrinsic.string.concat(V.Local.stempfilename," ",V.Local.stimestamp,V.Local.sFileExtension,V.Local.shold(1))
			F.Intrinsic.control.endif
			F.Intrinsic.String.instrrev(V.Local.sHold(1),".",V.Local.iPos)
			F.Intrinsic.Control.If(V.Local.iPos,<>,0)
				F.Intrinsic.math.Add(V.Local.iPos,1,V.Local.iPos)
				F.Intrinsic.String.Mid(V.Local.shold(1),V.Local.iPos,V.Local.shold(2))
			F.Intrinsic.Control.Else
				V.Local.shold(2).Set("DIR")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		F.Intrinsic.string.concat(V.Local.sdocpath,"\",v.Local.sID,"\",V.Local.sdest)
		f.Intrinsic.File.DirExists(v.Local.sDest,v.Local.bExists)
		f.Intrinsic.Control.If(v.Local.bExists,=,"False")
			f.Intrinsic.File.CreateDir(v.Local.sDest)
		f.Intrinsic.Control.EndIf
		F.Intrinsic.string.concat(V.Local.sdocpath,"\",v.Local.sID,"\",V.Local.shold(1),V.Local.sdest)
		F.Intrinsic.file.copyfile(V.Local.sfiles(V.Local.i),V.Local.sDest)
		F.Intrinsic.string.split(V.Local.shold(1),".",V.Local.sFile)
		gui.frmQRE.tvFile.RetrieveItemOrdinal(V.Local.sHold(1).ucase,V.Local.lret)
		F.Intrinsic.control.if(V.Local.lret,>,0)
		F.Intrinsic.control.else
			f.Intrinsic.String.Concat(v.Screen.frmQRE!txtBoostID.text,"\",v.Local.shold(1),v.Local.sDirHold)
			gui.frmQRE.tvFile.AddNode("",4,V.Local.sDirHold,V.Local.sDirHold)
			gui.frmQRE.tvFileT.Text(V.Local.sDirHold)
			F.Data.Dictionary.AddItem(v.Local.sDCTFiles,v.Local.sDirHold, V.Local.sHold(2))
		F.Intrinsic.control.endif
	F.Intrinsic.control.next(V.Local.i)
F.Intrinsic.control.catch
	F.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.control.endtry
Program.Sub.TVFileDragDrop.End

Program.Sub.tvFileD_CLICK.Start
F.Intrinsic.control.try
	v.Local.sDCTFiles.Declare(string)
	f.Intrinsic.String.Concat("dctFiles",v.Screen.frmQRE!txtID.text,v.Local.sDCTFiles)
	V.Local.sORD.Declare(STRING)
	V.Local.sORD.Set(V.Screen.frmQRE!tvFile.SelectedItemKey)
	gui.frmQRE.tvFile.RemoveItem(V.Local.sORD)
	F.Data.dictionary.removeitem(v.Local.sDCTFiles,V.Local.sord)
F.Intrinsic.control.catch
	F.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.control.endtry
Program.Sub.tvFileD_CLICK.End

Program.Sub.tvFile_NodeClick.Start
F.Intrinsic.control.try
	gui.frmQRE.tvFileT.Text(V.Args.key)
	V.Local.sFile.declare(string)
	V.Local.ssql.declare(string)
	V.Local.sret.declare(string)
	V.Local.sSQL.set("SELECT DISTINCT DOC_CONTROL_PATH FROM GAB_4486_QRE_CONFIG WHERE LTRIM(DOC_CONTROL_PATH)<>''")
	F.ODBC.connection!conx.executeandreturn(V.Local.ssql,V.Local.sret)
	F.Intrinsic.string.concat(V.Local.sret,"\",V.Args.key,V.Local.sfile)
	F.Intrinsic.task.ShellExec(V.Caller.Handle,"OPEN",V.Local.sfile,"","",5)
F.Intrinsic.control.catch
	F.Intrinsic.ui.msgbox(V.Ambient.ErrorDescription)
F.Intrinsic.control.endtry
Program.Sub.tvFile_NodeClick.End


Program.Sub.cmdDrawBrowse_click.Start
V.Local.sFile.declare(string)
F.Intrinsic.UI.ShowOpenFileDialog("","","",V.Local.sFIle)
F.Intrinsic.Control.If(V.Local.sfile,<>,"***CANCEL***")
	F.Intrinsic.control.callsub(TVFileDragDrop,"Files",V.Local.sfile)
F.Intrinsic.Control.EndIf
Program.Sub.cmdDrawBrowse_click.End

Program.Sub.txtOQTY_LostFocus.Start
v.Local.sHeadr.Declare
f.Intrinsic.String.Concat("Headr_",0,v.Local.sHeadr)
f.Data.DataTable.SetValue(v.Local.sHeadr,0,"OQty",v.Screen.frmQRE!txtOQTY.text)
Program.Sub.txtOQTY_LostFocus.End

Program.Sub.txtOMarkup_LostFocus.Start
v.Local.sHeadr.Declare
f.Intrinsic.String.Concat("Headr_",0,v.Local.sHeadr)
f.Data.DataTable.SetValue(v.Local.sHeadr,0,"OMarkup",v.Screen.frmQRE!txtOMarkup.text)
Program.Sub.txtOMarkup_LostFocus.End

Program.Sub.txtNotes_LostFocus.Start
v.Local.sHeadr.Declare
f.Intrinsic.String.Concat("Headr_",0,v.Local.sHeadr)
f.Data.DataTable.SetValue(v.Local.sHeadr,0,"Notes",v.Screen.frmQRE!txtNotes.text)
Program.Sub.txtNotes_LostFocus.End

Program.Sub.txtNotes_Change.Start
 
Program.Sub.txtNotes_Change.End

